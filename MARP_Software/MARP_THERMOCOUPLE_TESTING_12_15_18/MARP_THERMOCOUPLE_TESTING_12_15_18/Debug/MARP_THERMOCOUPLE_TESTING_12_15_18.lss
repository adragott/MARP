
MARP_THERMOCOUPLE_TESTING_12_15_18.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000854c  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0000854c  0000854c  0001854c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009c0  20000000  00008554  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000258  200009c0  00008f14  000209c0  2**2
                  ALLOC
  4 .stack        00002000  20000c18  0000916c  000209c0  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  000209c0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000209e8  2**0
                  CONTENTS, READONLY
  7 .debug_info   00036b6b  00000000  00000000  00020a41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00004782  00000000  00000000  000575ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000005d8  00000000  00000000  0005bd2e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000aa8  00000000  00000000  0005c306  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001bd62  00000000  00000000  0005cdae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000f0b3  00000000  00000000  00078b10  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000917e8  00000000  00000000  00087bc3  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000019d8  00000000  00000000  001193ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00007e91  00000000  00000000  0011ad84  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
 * \note This will not change setting in user's configuration structure.
 *
 * \param[in, out] module  Pointer to the software instance struct
 */
void rtc_calendar_swap_time_mode(struct rtc_module *const module)
{
       0:	18 2c 00 20 6d 1b 00 00 69 1b 00 00 69 1b 00 00     .,. m...i...i...
	...
		/* Set pm flag. */
		time.pm = (uint8_t)(time.hour / 12);

		/* Set 12h clock hour value. */
		time.hour = time.hour % 12;
		if (time.hour == 0) {
      2c:	69 1b 00 00 00 00 00 00 00 00 00 00 69 1b 00 00     i...........i...
			time.hour = 12;
		}

		/* Update alarms */
		for (uint8_t i = 0; i < RTC_NUM_OF_ALARMS; i++) {
			rtc_calendar_get_alarm(module, &alarm, (enum rtc_calendar_alarm)i);
      3c:	69 1b 00 00 69 1b 00 00 69 1b 00 00 69 1b 00 00     i...i...i...i...
			alarm.time.pm = (uint8_t)(alarm.time.hour / 12);
			alarm.time.hour = alarm.time.hour % 12;
      4c:	15 01 00 00 69 1b 00 00 69 1b 00 00 69 1b 00 00     ....i...i...i...
			time.hour = 12;
      5c:	69 1b 00 00 69 1b 00 00 3d 05 00 00 4d 05 00 00     i...i...=...M...
			if (alarm.time.hour == 0) {
				alarm.time.hour = 12;
			}
			module->clock_24h = false;
      6c:	5d 05 00 00 6d 05 00 00 7d 05 00 00 8d 05 00 00     ]...m...}.......
		/* Change value in configuration structure. */
		module->clock_24h = true;
	}

	/* Disable RTC so new configuration can be set. */
	rtc_calendar_disable(module);
      7c:	69 1b 00 00 69 1b 00 00 69 1b 00 00 69 1b 00 00     i...i...i...i...

	/* Toggle mode. */
	rtc_module->MODE2.CTRL.reg ^= RTC_MODE2_CTRL_CLKREP;

	/* Enable RTC. */
	rtc_calendar_enable(module);
      8c:	69 1b 00 00 69 1b 00 00 69 1b 00 00 69 1b 00 00     i...i...i...i...
		if (time.pm == 1) {
      9c:	69 1b 00 00 69 1b 00 00 69 1b 00 00 69 1b 00 00     i...i...i...i...
			time.pm = 0;
      ac:	69 1b 00 00 00 00 00 00                             i.......

000000b4 <__do_global_dtors_aux>:
			rtc_calendar_get_alarm(module, &alarm, (enum rtc_calendar_alarm)i);
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
			if (alarm.time.pm == 1) {
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
			} else if (alarm.time.hour == 12) {
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
		module->clock_24h = true;
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
		} else if (time.hour == 12) {
      ce:	bd10      	pop	{r4, pc}
      d0:	200009c0 	.word	0x200009c0
      d4:	00000000 	.word	0x00000000
			time.hour = 0;
      d8:	00008554 	.word	0x00008554

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
				alarm.time.hour = alarm.time.hour + 12;
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
				alarm.time.pm = 0;
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
				module->clock_24h = true;
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
				rtc_calendar_set_alarm(module, &alarm, (enum rtc_calendar_alarm)i);
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
				alarm.time.hour = 0;
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200009c4 	.word	0x200009c4
     108:	00008554 	.word	0x00008554
     10c:	00008554 	.word	0x00008554
     110:	00000000 	.word	0x00000000

00000114 <RTC_Handler>:
     114:	b510      	push	{r4, lr}
     116:	4b0f      	ldr	r3, [pc, #60]	; (154 <RTC_Handler+0x40>)
     118:	681a      	ldr	r2, [r3, #0]
     11a:	6814      	ldr	r4, [r2, #0]
	struct rtc_module *module = _rtc_instance[instance_index];

	Rtc *const rtc_module = module->hw;

	/* Combine callback registered and enabled masks */
	uint16_t callback_mask = module->enabled_callback;
     11c:	8a51      	ldrh	r1, [r2, #18]
	callback_mask &= module->registered_callback;
     11e:	8a13      	ldrh	r3, [r2, #16]
     120:	4019      	ands	r1, r3

	/* Read and mask interrupt flag register */
	uint16_t interrupt_status = rtc_module->MODE2.INTFLAG.reg;
     122:	7a20      	ldrb	r0, [r4, #8]
	interrupt_status &= rtc_module->MODE2.INTENSET.reg;
     124:	79e3      	ldrb	r3, [r4, #7]
     126:	4003      	ands	r3, r0

	if (interrupt_status & RTC_MODE2_INTFLAG_OVF) {
     128:	b258      	sxtb	r0, r3
     12a:	2800      	cmp	r0, #0
     12c:	db06      	blt.n	13c <RTC_Handler+0x28>
		}

		/* Clear interrupt flag */
		rtc_module->MODE2.INTFLAG.reg = RTC_MODE2_INTFLAG_OVF;

	} else if (interrupt_status & RTC_MODE2_INTFLAG_ALARM(1 << 0)) {
     12e:	07db      	lsls	r3, r3, #31
     130:	d503      	bpl.n	13a <RTC_Handler+0x26>
		/* Alarm 0 interrupt */
		if (callback_mask & (1 << RTC_CALENDAR_CALLBACK_ALARM_0)) {
     132:	07cb      	lsls	r3, r1, #31
     134:	d40a      	bmi.n	14c <RTC_Handler+0x38>
			module->callbacks[RTC_CALENDAR_CALLBACK_ALARM_0]();
		}
		/* Clear interrupt flag */
		rtc_module->MODE2.INTFLAG.reg = RTC_MODE2_INTFLAG_ALARM(1 << 0);
     136:	2301      	movs	r3, #1
     138:	7223      	strb	r3, [r4, #8]
 */
#if (RTC_INST_NUM == 1)
void RTC_Handler(void)
{
	_rtc_interrupt_handler(0);
}
     13a:	bd10      	pop	{r4, pc}
		if (callback_mask & (1 << RTC_CALENDAR_CALLBACK_OVERFLOW)) {
     13c:	078b      	lsls	r3, r1, #30
     13e:	d402      	bmi.n	146 <RTC_Handler+0x32>
		rtc_module->MODE2.INTFLAG.reg = RTC_MODE2_INTFLAG_OVF;
     140:	2380      	movs	r3, #128	; 0x80
     142:	7223      	strb	r3, [r4, #8]
     144:	e7f9      	b.n	13a <RTC_Handler+0x26>
			module->callbacks[RTC_CALENDAR_CALLBACK_OVERFLOW]();
     146:	68d3      	ldr	r3, [r2, #12]
     148:	4798      	blx	r3
     14a:	e7f9      	b.n	140 <RTC_Handler+0x2c>
			module->callbacks[RTC_CALENDAR_CALLBACK_ALARM_0]();
     14c:	6893      	ldr	r3, [r2, #8]
     14e:	4798      	blx	r3
     150:	e7f1      	b.n	136 <RTC_Handler+0x22>
     152:	46c0      	nop			; (mov r8, r8)
     154:	20000a50 	.word	0x20000a50

00000158 <long_division>:
/**
 * \internal Calculate 64 bit division, ref can be found in
 * http://en.wikipedia.org/wiki/Division_algorithm#Long_division
 */
static uint64_t long_division(uint64_t n, uint64_t d)
{
     158:	b5f0      	push	{r4, r5, r6, r7, lr}
     15a:	46de      	mov	lr, fp
     15c:	4657      	mov	r7, sl
     15e:	464e      	mov	r6, r9
     160:	4645      	mov	r5, r8
     162:	b5e0      	push	{r5, r6, r7, lr}
     164:	b087      	sub	sp, #28
     166:	4680      	mov	r8, r0
     168:	9104      	str	r1, [sp, #16]
     16a:	0016      	movs	r6, r2
     16c:	001f      	movs	r7, r3
	int32_t i;
	uint64_t q = 0, r = 0, bit_shift;
     16e:	2200      	movs	r2, #0
     170:	2300      	movs	r3, #0
     172:	2100      	movs	r1, #0
     174:	468b      	mov	fp, r1
	for (i = 63; i >= 0; i--) {
     176:	243f      	movs	r4, #63	; 0x3f
		bit_shift = (uint64_t)1 << i;
     178:	2001      	movs	r0, #1
     17a:	0021      	movs	r1, r4
     17c:	9600      	str	r6, [sp, #0]
     17e:	9701      	str	r7, [sp, #4]
     180:	465c      	mov	r4, fp
     182:	9403      	str	r4, [sp, #12]
     184:	4644      	mov	r4, r8
     186:	9405      	str	r4, [sp, #20]
     188:	e013      	b.n	1b2 <long_division+0x5a>
     18a:	2420      	movs	r4, #32
     18c:	1a64      	subs	r4, r4, r1
     18e:	0005      	movs	r5, r0
     190:	40e5      	lsrs	r5, r4
     192:	46a8      	mov	r8, r5
     194:	e014      	b.n	1c0 <long_division+0x68>
		if (n & bit_shift) {
			r |= 0x01;
		}

		if (r >= d) {
			r = r - d;
     196:	9c00      	ldr	r4, [sp, #0]
     198:	9d01      	ldr	r5, [sp, #4]
     19a:	1b12      	subs	r2, r2, r4
     19c:	41ab      	sbcs	r3, r5
			q |= bit_shift;
     19e:	465c      	mov	r4, fp
     1a0:	464d      	mov	r5, r9
     1a2:	432c      	orrs	r4, r5
     1a4:	46a3      	mov	fp, r4
     1a6:	9c03      	ldr	r4, [sp, #12]
     1a8:	4645      	mov	r5, r8
     1aa:	432c      	orrs	r4, r5
     1ac:	9403      	str	r4, [sp, #12]
	for (i = 63; i >= 0; i--) {
     1ae:	3901      	subs	r1, #1
     1b0:	d325      	bcc.n	1fe <long_division+0xa6>
		bit_shift = (uint64_t)1 << i;
     1b2:	2420      	movs	r4, #32
     1b4:	4264      	negs	r4, r4
     1b6:	190c      	adds	r4, r1, r4
     1b8:	d4e7      	bmi.n	18a <long_division+0x32>
     1ba:	0005      	movs	r5, r0
     1bc:	40a5      	lsls	r5, r4
     1be:	46a8      	mov	r8, r5
     1c0:	0004      	movs	r4, r0
     1c2:	408c      	lsls	r4, r1
     1c4:	46a1      	mov	r9, r4
		r = r << 1;
     1c6:	1892      	adds	r2, r2, r2
     1c8:	415b      	adcs	r3, r3
     1ca:	0014      	movs	r4, r2
     1cc:	001d      	movs	r5, r3
		if (n & bit_shift) {
     1ce:	9e05      	ldr	r6, [sp, #20]
     1d0:	464f      	mov	r7, r9
     1d2:	403e      	ands	r6, r7
     1d4:	46b4      	mov	ip, r6
     1d6:	9e04      	ldr	r6, [sp, #16]
     1d8:	4647      	mov	r7, r8
     1da:	403e      	ands	r6, r7
     1dc:	46b2      	mov	sl, r6
     1de:	4666      	mov	r6, ip
     1e0:	4657      	mov	r7, sl
     1e2:	433e      	orrs	r6, r7
     1e4:	d003      	beq.n	1ee <long_division+0x96>
			r |= 0x01;
     1e6:	0006      	movs	r6, r0
     1e8:	4326      	orrs	r6, r4
     1ea:	0032      	movs	r2, r6
     1ec:	002b      	movs	r3, r5
		if (r >= d) {
     1ee:	9c00      	ldr	r4, [sp, #0]
     1f0:	9d01      	ldr	r5, [sp, #4]
     1f2:	429d      	cmp	r5, r3
     1f4:	d8db      	bhi.n	1ae <long_division+0x56>
     1f6:	d1ce      	bne.n	196 <long_division+0x3e>
     1f8:	4294      	cmp	r4, r2
     1fa:	d8d8      	bhi.n	1ae <long_division+0x56>
     1fc:	e7cb      	b.n	196 <long_division+0x3e>
     1fe:	9b03      	ldr	r3, [sp, #12]
		}
	}

	return q;
}
     200:	4658      	mov	r0, fp
     202:	0019      	movs	r1, r3
     204:	b007      	add	sp, #28
     206:	bc3c      	pop	{r2, r3, r4, r5}
     208:	4690      	mov	r8, r2
     20a:	4699      	mov	r9, r3
     20c:	46a2      	mov	sl, r4
     20e:	46ab      	mov	fp, r5
     210:	bdf0      	pop	{r4, r5, r6, r7, pc}

00000212 <_sercom_get_sync_baud_val>:
 */
enum status_code _sercom_get_sync_baud_val(
		const uint32_t baudrate,
		const uint32_t external_clock,
		uint16_t *const baudvalue)
{
     212:	b510      	push	{r4, lr}
	uint16_t baud_calculated = 0;
	uint32_t clock_value = external_clock;


	/* Check if baudrate is outside of valid range */
	if (baudrate > (external_clock / 2)) {
     214:	0849      	lsrs	r1, r1, #1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     216:	2340      	movs	r3, #64	; 0x40
     218:	2400      	movs	r4, #0
	if (baudrate > (external_clock / 2)) {
     21a:	4281      	cmp	r1, r0
     21c:	d202      	bcs.n	224 <_sercom_get_sync_baud_val+0x12>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
	} else {
		*baudvalue = baud_calculated;
		return STATUS_OK;
	}
}
     21e:	0018      	movs	r0, r3
     220:	bd10      	pop	{r4, pc}
		baud_calculated++;
     222:	001c      	movs	r4, r3
		clock_value = clock_value - baudrate;
     224:	1a09      	subs	r1, r1, r0
		baud_calculated++;
     226:	1c63      	adds	r3, r4, #1
     228:	b29b      	uxth	r3, r3
	while (clock_value >= baudrate) {
     22a:	4288      	cmp	r0, r1
     22c:	d9f9      	bls.n	222 <_sercom_get_sync_baud_val+0x10>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     22e:	2340      	movs	r3, #64	; 0x40
	if (baud_calculated > 0xFF) {
     230:	2cff      	cmp	r4, #255	; 0xff
     232:	d8f4      	bhi.n	21e <_sercom_get_sync_baud_val+0xc>
		*baudvalue = baud_calculated;
     234:	8014      	strh	r4, [r2, #0]
		return STATUS_OK;
     236:	2300      	movs	r3, #0
     238:	e7f1      	b.n	21e <_sercom_get_sync_baud_val+0xc>
	...

0000023c <_sercom_get_async_baud_val>:
		const uint32_t baudrate,
		const uint32_t peripheral_clock,
		uint16_t *const baudval,
		enum sercom_asynchronous_operation_mode mode,
		enum sercom_asynchronous_sample_num sample_num)
{
     23c:	b5f0      	push	{r4, r5, r6, r7, lr}
     23e:	b083      	sub	sp, #12
     240:	000f      	movs	r7, r1
     242:	0016      	movs	r6, r2
     244:	aa08      	add	r2, sp, #32
     246:	7811      	ldrb	r1, [r2, #0]
	uint8_t baud_fp;
	uint32_t baud_int = 0;
	uint64_t temp1;

	/* Check if the baudrate is outside of valid range */
	if ((baudrate * sample_num) > peripheral_clock) {
     248:	0004      	movs	r4, r0
     24a:	434c      	muls	r4, r1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     24c:	2240      	movs	r2, #64	; 0x40
	if ((baudrate * sample_num) > peripheral_clock) {
     24e:	42bc      	cmp	r4, r7
     250:	d902      	bls.n	258 <_sercom_get_async_baud_val+0x1c>
		baud_calculated = baud_int | (baud_fp << 13);
	}

	*baudval = baud_calculated;
	return STATUS_OK;
}
     252:	0010      	movs	r0, r2
     254:	b003      	add	sp, #12
     256:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if(mode == SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC) {
     258:	2b00      	cmp	r3, #0
     25a:	d114      	bne.n	286 <_sercom_get_async_baud_val+0x4a>
		temp1 = ((sample_num * (uint64_t)baudrate) << SHIFT);
     25c:	0002      	movs	r2, r0
     25e:	0008      	movs	r0, r1
     260:	2100      	movs	r1, #0
     262:	4c19      	ldr	r4, [pc, #100]	; (2c8 <_sercom_get_async_baud_val+0x8c>)
     264:	47a0      	blx	r4
     266:	0001      	movs	r1, r0
		ratio = long_division(temp1, peripheral_clock);
     268:	003a      	movs	r2, r7
     26a:	2300      	movs	r3, #0
     26c:	2000      	movs	r0, #0
     26e:	4c17      	ldr	r4, [pc, #92]	; (2cc <_sercom_get_async_baud_val+0x90>)
     270:	47a0      	blx	r4
		scale = ((uint64_t)1 << SHIFT) - ratio;
     272:	2200      	movs	r2, #0
     274:	2301      	movs	r3, #1
     276:	1a12      	subs	r2, r2, r0
     278:	418b      	sbcs	r3, r1
		baud_calculated = (65536 * scale) >> SHIFT;
     27a:	0c12      	lsrs	r2, r2, #16
     27c:	041b      	lsls	r3, r3, #16
     27e:	431a      	orrs	r2, r3
	*baudval = baud_calculated;
     280:	8032      	strh	r2, [r6, #0]
	return STATUS_OK;
     282:	2200      	movs	r2, #0
     284:	e7e5      	b.n	252 <_sercom_get_async_baud_val+0x16>
	uint64_t baud_calculated = 0;
     286:	2200      	movs	r2, #0
	} else if(mode == SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL) {
     288:	2b01      	cmp	r3, #1
     28a:	d1f9      	bne.n	280 <_sercom_get_async_baud_val+0x44>
		temp1 = ((uint64_t)baudrate * sample_num);
     28c:	000a      	movs	r2, r1
     28e:	2300      	movs	r3, #0
     290:	2100      	movs	r1, #0
     292:	4c0d      	ldr	r4, [pc, #52]	; (2c8 <_sercom_get_async_baud_val+0x8c>)
     294:	47a0      	blx	r4
     296:	0002      	movs	r2, r0
     298:	000b      	movs	r3, r1
     29a:	9200      	str	r2, [sp, #0]
     29c:	9301      	str	r3, [sp, #4]
		baud_int = long_division( peripheral_clock, temp1);
     29e:	0038      	movs	r0, r7
     2a0:	2100      	movs	r1, #0
     2a2:	4c0a      	ldr	r4, [pc, #40]	; (2cc <_sercom_get_async_baud_val+0x90>)
     2a4:	47a0      	blx	r4
     2a6:	0005      	movs	r5, r0
		if(baud_int > BAUD_INT_MAX) {
     2a8:	2380      	movs	r3, #128	; 0x80
     2aa:	019b      	lsls	r3, r3, #6
				return STATUS_ERR_BAUDRATE_UNAVAILABLE;
     2ac:	2240      	movs	r2, #64	; 0x40
		if(baud_int > BAUD_INT_MAX) {
     2ae:	4298      	cmp	r0, r3
     2b0:	d8cf      	bhi.n	252 <_sercom_get_async_baud_val+0x16>
		temp1 = long_division( 8 * (uint64_t)peripheral_clock, temp1);
     2b2:	0f79      	lsrs	r1, r7, #29
     2b4:	00f8      	lsls	r0, r7, #3
     2b6:	9a00      	ldr	r2, [sp, #0]
     2b8:	9b01      	ldr	r3, [sp, #4]
     2ba:	47a0      	blx	r4
		baud_fp = temp1 - 8 * baud_int;
     2bc:	00ea      	lsls	r2, r5, #3
     2be:	1a82      	subs	r2, r0, r2
		baud_calculated = baud_int | (baud_fp << 13);
     2c0:	b2d2      	uxtb	r2, r2
     2c2:	0352      	lsls	r2, r2, #13
     2c4:	432a      	orrs	r2, r5
     2c6:	e7db      	b.n	280 <_sercom_get_async_baud_val+0x44>
     2c8:	00002129 	.word	0x00002129
     2cc:	00000159 	.word	0x00000159

000002d0 <sercom_set_gclk_generator>:
 *                                         forced.
 */
enum status_code sercom_set_gclk_generator(
		const enum gclk_generator generator_source,
		const bool force_change)
{
     2d0:	b510      	push	{r4, lr}
     2d2:	b082      	sub	sp, #8
     2d4:	0004      	movs	r4, r0
	/* Check if valid option */
	if (!_sercom_config.generator_is_set || force_change) {
     2d6:	4b0e      	ldr	r3, [pc, #56]	; (310 <sercom_set_gclk_generator+0x40>)
     2d8:	781b      	ldrb	r3, [r3, #0]
     2da:	2b00      	cmp	r3, #0
     2dc:	d007      	beq.n	2ee <sercom_set_gclk_generator+0x1e>
     2de:	2900      	cmp	r1, #0
     2e0:	d105      	bne.n	2ee <sercom_set_gclk_generator+0x1e>
		/* Save config */
		_sercom_config.generator_source = generator_source;
		_sercom_config.generator_is_set = true;

		return STATUS_OK;
	} else if (generator_source == _sercom_config.generator_source) {
     2e2:	4b0b      	ldr	r3, [pc, #44]	; (310 <sercom_set_gclk_generator+0x40>)
     2e4:	785b      	ldrb	r3, [r3, #1]
     2e6:	4283      	cmp	r3, r0
     2e8:	d010      	beq.n	30c <sercom_set_gclk_generator+0x3c>
		/* Return status OK if same config */
		return STATUS_OK;
	}

	/* Return invalid config to already initialized GCLK */
	return STATUS_ERR_ALREADY_INITIALIZED;
     2ea:	201d      	movs	r0, #29
     2ec:	e00c      	b.n	308 <sercom_set_gclk_generator+0x38>
		gclk_chan_conf.source_generator = generator_source;
     2ee:	a901      	add	r1, sp, #4
     2f0:	700c      	strb	r4, [r1, #0]
		system_gclk_chan_set_config(SERCOM_GCLK_ID, &gclk_chan_conf);
     2f2:	2013      	movs	r0, #19
     2f4:	4b07      	ldr	r3, [pc, #28]	; (314 <sercom_set_gclk_generator+0x44>)
     2f6:	4798      	blx	r3
		system_gclk_chan_enable(SERCOM_GCLK_ID);
     2f8:	2013      	movs	r0, #19
     2fa:	4b07      	ldr	r3, [pc, #28]	; (318 <sercom_set_gclk_generator+0x48>)
     2fc:	4798      	blx	r3
		_sercom_config.generator_source = generator_source;
     2fe:	4b04      	ldr	r3, [pc, #16]	; (310 <sercom_set_gclk_generator+0x40>)
     300:	705c      	strb	r4, [r3, #1]
		_sercom_config.generator_is_set = true;
     302:	2201      	movs	r2, #1
     304:	701a      	strb	r2, [r3, #0]
		return STATUS_OK;
     306:	2000      	movs	r0, #0
}
     308:	b002      	add	sp, #8
     30a:	bd10      	pop	{r4, pc}
		return STATUS_OK;
     30c:	2000      	movs	r0, #0
     30e:	e7fb      	b.n	308 <sercom_set_gclk_generator+0x38>
     310:	200009dc 	.word	0x200009dc
     314:	00001a11 	.word	0x00001a11
     318:	00001985 	.word	0x00001985

0000031c <_sercom_get_default_pad>:
 */
uint32_t _sercom_get_default_pad(
		Sercom *const sercom_module,
		const uint8_t pad)
{
	switch ((uintptr_t)sercom_module) {
     31c:	4b40      	ldr	r3, [pc, #256]	; (420 <_sercom_get_default_pad+0x104>)
     31e:	4298      	cmp	r0, r3
     320:	d031      	beq.n	386 <_sercom_get_default_pad+0x6a>
     322:	d90a      	bls.n	33a <_sercom_get_default_pad+0x1e>
     324:	4b3f      	ldr	r3, [pc, #252]	; (424 <_sercom_get_default_pad+0x108>)
     326:	4298      	cmp	r0, r3
     328:	d04d      	beq.n	3c6 <_sercom_get_default_pad+0xaa>
     32a:	4b3f      	ldr	r3, [pc, #252]	; (428 <_sercom_get_default_pad+0x10c>)
     32c:	4298      	cmp	r0, r3
     32e:	d05a      	beq.n	3e6 <_sercom_get_default_pad+0xca>
     330:	4b3e      	ldr	r3, [pc, #248]	; (42c <_sercom_get_default_pad+0x110>)
     332:	4298      	cmp	r0, r3
     334:	d037      	beq.n	3a6 <_sercom_get_default_pad+0x8a>
		/* Auto-generate a lookup table for the default SERCOM pad defaults */
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
	}

	Assert(false);
	return 0;
     336:	2000      	movs	r0, #0
}
     338:	4770      	bx	lr
	switch ((uintptr_t)sercom_module) {
     33a:	4b3d      	ldr	r3, [pc, #244]	; (430 <_sercom_get_default_pad+0x114>)
     33c:	4298      	cmp	r0, r3
     33e:	d00c      	beq.n	35a <_sercom_get_default_pad+0x3e>
     340:	4b3c      	ldr	r3, [pc, #240]	; (434 <_sercom_get_default_pad+0x118>)
     342:	4298      	cmp	r0, r3
     344:	d1f7      	bne.n	336 <_sercom_get_default_pad+0x1a>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     346:	2901      	cmp	r1, #1
     348:	d017      	beq.n	37a <_sercom_get_default_pad+0x5e>
     34a:	2900      	cmp	r1, #0
     34c:	d05d      	beq.n	40a <_sercom_get_default_pad+0xee>
     34e:	2902      	cmp	r1, #2
     350:	d015      	beq.n	37e <_sercom_get_default_pad+0x62>
     352:	2903      	cmp	r1, #3
     354:	d015      	beq.n	382 <_sercom_get_default_pad+0x66>
	return 0;
     356:	2000      	movs	r0, #0
     358:	e7ee      	b.n	338 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     35a:	2901      	cmp	r1, #1
     35c:	d007      	beq.n	36e <_sercom_get_default_pad+0x52>
     35e:	2900      	cmp	r1, #0
     360:	d051      	beq.n	406 <_sercom_get_default_pad+0xea>
     362:	2902      	cmp	r1, #2
     364:	d005      	beq.n	372 <_sercom_get_default_pad+0x56>
     366:	2903      	cmp	r1, #3
     368:	d005      	beq.n	376 <_sercom_get_default_pad+0x5a>
	return 0;
     36a:	2000      	movs	r0, #0
     36c:	e7e4      	b.n	338 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     36e:	4832      	ldr	r0, [pc, #200]	; (438 <_sercom_get_default_pad+0x11c>)
     370:	e7e2      	b.n	338 <_sercom_get_default_pad+0x1c>
     372:	4832      	ldr	r0, [pc, #200]	; (43c <_sercom_get_default_pad+0x120>)
     374:	e7e0      	b.n	338 <_sercom_get_default_pad+0x1c>
     376:	4832      	ldr	r0, [pc, #200]	; (440 <_sercom_get_default_pad+0x124>)
     378:	e7de      	b.n	338 <_sercom_get_default_pad+0x1c>
     37a:	4832      	ldr	r0, [pc, #200]	; (444 <_sercom_get_default_pad+0x128>)
     37c:	e7dc      	b.n	338 <_sercom_get_default_pad+0x1c>
     37e:	4832      	ldr	r0, [pc, #200]	; (448 <_sercom_get_default_pad+0x12c>)
     380:	e7da      	b.n	338 <_sercom_get_default_pad+0x1c>
     382:	4832      	ldr	r0, [pc, #200]	; (44c <_sercom_get_default_pad+0x130>)
     384:	e7d8      	b.n	338 <_sercom_get_default_pad+0x1c>
     386:	2901      	cmp	r1, #1
     388:	d007      	beq.n	39a <_sercom_get_default_pad+0x7e>
     38a:	2900      	cmp	r1, #0
     38c:	d03f      	beq.n	40e <_sercom_get_default_pad+0xf2>
     38e:	2902      	cmp	r1, #2
     390:	d005      	beq.n	39e <_sercom_get_default_pad+0x82>
     392:	2903      	cmp	r1, #3
     394:	d005      	beq.n	3a2 <_sercom_get_default_pad+0x86>
	return 0;
     396:	2000      	movs	r0, #0
     398:	e7ce      	b.n	338 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     39a:	482d      	ldr	r0, [pc, #180]	; (450 <_sercom_get_default_pad+0x134>)
     39c:	e7cc      	b.n	338 <_sercom_get_default_pad+0x1c>
     39e:	482d      	ldr	r0, [pc, #180]	; (454 <_sercom_get_default_pad+0x138>)
     3a0:	e7ca      	b.n	338 <_sercom_get_default_pad+0x1c>
     3a2:	482d      	ldr	r0, [pc, #180]	; (458 <_sercom_get_default_pad+0x13c>)
     3a4:	e7c8      	b.n	338 <_sercom_get_default_pad+0x1c>
     3a6:	2901      	cmp	r1, #1
     3a8:	d007      	beq.n	3ba <_sercom_get_default_pad+0x9e>
     3aa:	2900      	cmp	r1, #0
     3ac:	d031      	beq.n	412 <_sercom_get_default_pad+0xf6>
     3ae:	2902      	cmp	r1, #2
     3b0:	d005      	beq.n	3be <_sercom_get_default_pad+0xa2>
     3b2:	2903      	cmp	r1, #3
     3b4:	d005      	beq.n	3c2 <_sercom_get_default_pad+0xa6>
	return 0;
     3b6:	2000      	movs	r0, #0
     3b8:	e7be      	b.n	338 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     3ba:	4828      	ldr	r0, [pc, #160]	; (45c <_sercom_get_default_pad+0x140>)
     3bc:	e7bc      	b.n	338 <_sercom_get_default_pad+0x1c>
     3be:	4828      	ldr	r0, [pc, #160]	; (460 <_sercom_get_default_pad+0x144>)
     3c0:	e7ba      	b.n	338 <_sercom_get_default_pad+0x1c>
     3c2:	4828      	ldr	r0, [pc, #160]	; (464 <_sercom_get_default_pad+0x148>)
     3c4:	e7b8      	b.n	338 <_sercom_get_default_pad+0x1c>
     3c6:	2901      	cmp	r1, #1
     3c8:	d007      	beq.n	3da <_sercom_get_default_pad+0xbe>
     3ca:	2900      	cmp	r1, #0
     3cc:	d023      	beq.n	416 <_sercom_get_default_pad+0xfa>
     3ce:	2902      	cmp	r1, #2
     3d0:	d005      	beq.n	3de <_sercom_get_default_pad+0xc2>
     3d2:	2903      	cmp	r1, #3
     3d4:	d005      	beq.n	3e2 <_sercom_get_default_pad+0xc6>
	return 0;
     3d6:	2000      	movs	r0, #0
     3d8:	e7ae      	b.n	338 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     3da:	4823      	ldr	r0, [pc, #140]	; (468 <_sercom_get_default_pad+0x14c>)
     3dc:	e7ac      	b.n	338 <_sercom_get_default_pad+0x1c>
     3de:	4823      	ldr	r0, [pc, #140]	; (46c <_sercom_get_default_pad+0x150>)
     3e0:	e7aa      	b.n	338 <_sercom_get_default_pad+0x1c>
     3e2:	4823      	ldr	r0, [pc, #140]	; (470 <_sercom_get_default_pad+0x154>)
     3e4:	e7a8      	b.n	338 <_sercom_get_default_pad+0x1c>
     3e6:	2901      	cmp	r1, #1
     3e8:	d007      	beq.n	3fa <_sercom_get_default_pad+0xde>
     3ea:	2900      	cmp	r1, #0
     3ec:	d015      	beq.n	41a <_sercom_get_default_pad+0xfe>
     3ee:	2902      	cmp	r1, #2
     3f0:	d005      	beq.n	3fe <_sercom_get_default_pad+0xe2>
     3f2:	2903      	cmp	r1, #3
     3f4:	d005      	beq.n	402 <_sercom_get_default_pad+0xe6>
	return 0;
     3f6:	2000      	movs	r0, #0
     3f8:	e79e      	b.n	338 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     3fa:	481e      	ldr	r0, [pc, #120]	; (474 <_sercom_get_default_pad+0x158>)
     3fc:	e79c      	b.n	338 <_sercom_get_default_pad+0x1c>
     3fe:	481e      	ldr	r0, [pc, #120]	; (478 <_sercom_get_default_pad+0x15c>)
     400:	e79a      	b.n	338 <_sercom_get_default_pad+0x1c>
     402:	481e      	ldr	r0, [pc, #120]	; (47c <_sercom_get_default_pad+0x160>)
     404:	e798      	b.n	338 <_sercom_get_default_pad+0x1c>
     406:	481e      	ldr	r0, [pc, #120]	; (480 <_sercom_get_default_pad+0x164>)
     408:	e796      	b.n	338 <_sercom_get_default_pad+0x1c>
     40a:	2003      	movs	r0, #3
     40c:	e794      	b.n	338 <_sercom_get_default_pad+0x1c>
     40e:	481d      	ldr	r0, [pc, #116]	; (484 <_sercom_get_default_pad+0x168>)
     410:	e792      	b.n	338 <_sercom_get_default_pad+0x1c>
     412:	481d      	ldr	r0, [pc, #116]	; (488 <_sercom_get_default_pad+0x16c>)
     414:	e790      	b.n	338 <_sercom_get_default_pad+0x1c>
     416:	481d      	ldr	r0, [pc, #116]	; (48c <_sercom_get_default_pad+0x170>)
     418:	e78e      	b.n	338 <_sercom_get_default_pad+0x1c>
     41a:	481d      	ldr	r0, [pc, #116]	; (490 <_sercom_get_default_pad+0x174>)
     41c:	e78c      	b.n	338 <_sercom_get_default_pad+0x1c>
     41e:	46c0      	nop			; (mov r8, r8)
     420:	42001000 	.word	0x42001000
     424:	42001800 	.word	0x42001800
     428:	42001c00 	.word	0x42001c00
     42c:	42001400 	.word	0x42001400
     430:	42000800 	.word	0x42000800
     434:	42000c00 	.word	0x42000c00
     438:	00050003 	.word	0x00050003
     43c:	00060003 	.word	0x00060003
     440:	00070003 	.word	0x00070003
     444:	00010003 	.word	0x00010003
     448:	001e0003 	.word	0x001e0003
     44c:	001f0003 	.word	0x001f0003
     450:	00090003 	.word	0x00090003
     454:	000a0003 	.word	0x000a0003
     458:	000b0003 	.word	0x000b0003
     45c:	00110003 	.word	0x00110003
     460:	00120003 	.word	0x00120003
     464:	00130003 	.word	0x00130003
     468:	000d0003 	.word	0x000d0003
     46c:	000e0003 	.word	0x000e0003
     470:	000f0003 	.word	0x000f0003
     474:	00170003 	.word	0x00170003
     478:	00180003 	.word	0x00180003
     47c:	00190003 	.word	0x00190003
     480:	00040003 	.word	0x00040003
     484:	00080003 	.word	0x00080003
     488:	00100003 	.word	0x00100003
     48c:	000c0003 	.word	0x000c0003
     490:	00160003 	.word	0x00160003

00000494 <_sercom_get_sercom_inst_index>:
 *
 * \return Index of given instance.
 */
uint8_t _sercom_get_sercom_inst_index(
		Sercom *const sercom_instance)
{
     494:	b530      	push	{r4, r5, lr}
     496:	b087      	sub	sp, #28
	/* Save all available SERCOM instances for compare */
	Sercom *sercom_instances[SERCOM_INST_NUM] = SERCOM_INSTS;
     498:	4b0b      	ldr	r3, [pc, #44]	; (4c8 <_sercom_get_sercom_inst_index+0x34>)
     49a:	466a      	mov	r2, sp
     49c:	cb32      	ldmia	r3!, {r1, r4, r5}
     49e:	c232      	stmia	r2!, {r1, r4, r5}
     4a0:	cb32      	ldmia	r3!, {r1, r4, r5}
     4a2:	c232      	stmia	r2!, {r1, r4, r5}

	/* Find index for sercom instance */
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
		if ((uintptr_t)sercom_instance == (uintptr_t)sercom_instances[i]) {
     4a4:	9b00      	ldr	r3, [sp, #0]
     4a6:	4283      	cmp	r3, r0
     4a8:	d00b      	beq.n	4c2 <_sercom_get_sercom_inst_index+0x2e>
     4aa:	2301      	movs	r3, #1
     4ac:	009a      	lsls	r2, r3, #2
     4ae:	4669      	mov	r1, sp
     4b0:	5852      	ldr	r2, [r2, r1]
     4b2:	4282      	cmp	r2, r0
     4b4:	d006      	beq.n	4c4 <_sercom_get_sercom_inst_index+0x30>
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     4b6:	3301      	adds	r3, #1
     4b8:	2b06      	cmp	r3, #6
     4ba:	d1f7      	bne.n	4ac <_sercom_get_sercom_inst_index+0x18>
		}
	}

	/* Invalid data given */
	Assert(false);
	return 0;
     4bc:	2000      	movs	r0, #0
}
     4be:	b007      	add	sp, #28
     4c0:	bd30      	pop	{r4, r5, pc}
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     4c2:	2300      	movs	r3, #0
			return i;
     4c4:	b2d8      	uxtb	r0, r3
     4c6:	e7fa      	b.n	4be <_sercom_get_sercom_inst_index+0x2a>
     4c8:	0000802c 	.word	0x0000802c

000004cc <_sercom_default_handler>:
 */
static void _sercom_default_handler(
		const uint8_t instance)
{
	Assert(false);
}
     4cc:	4770      	bx	lr
	...

000004d0 <_sercom_set_handler>:
 * \param[in]  interrupt_handler  Pointer to instance callback handler.
 */
void _sercom_set_handler(
		const uint8_t instance,
		const sercom_handler_t interrupt_handler)
{
     4d0:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Initialize handlers with default handler and device instances with 0 */
	if (_handler_table_initialized == false) {
     4d2:	4b0a      	ldr	r3, [pc, #40]	; (4fc <_sercom_set_handler+0x2c>)
     4d4:	781b      	ldrb	r3, [r3, #0]
     4d6:	2b00      	cmp	r3, #0
     4d8:	d10c      	bne.n	4f4 <_sercom_set_handler+0x24>
		for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
			_sercom_interrupt_handlers[i] = &_sercom_default_handler;
     4da:	4f09      	ldr	r7, [pc, #36]	; (500 <_sercom_set_handler+0x30>)
     4dc:	4e09      	ldr	r6, [pc, #36]	; (504 <_sercom_set_handler+0x34>)
			_sercom_instances[i] = NULL;
     4de:	4d0a      	ldr	r5, [pc, #40]	; (508 <_sercom_set_handler+0x38>)
     4e0:	2400      	movs	r4, #0
			_sercom_interrupt_handlers[i] = &_sercom_default_handler;
     4e2:	51de      	str	r6, [r3, r7]
			_sercom_instances[i] = NULL;
     4e4:	195a      	adds	r2, r3, r5
     4e6:	6014      	str	r4, [r2, #0]
     4e8:	3304      	adds	r3, #4
		for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     4ea:	2b18      	cmp	r3, #24
     4ec:	d1f9      	bne.n	4e2 <_sercom_set_handler+0x12>
		}

		_handler_table_initialized = true;
     4ee:	2201      	movs	r2, #1
     4f0:	4b02      	ldr	r3, [pc, #8]	; (4fc <_sercom_set_handler+0x2c>)
     4f2:	701a      	strb	r2, [r3, #0]
	}

	/* Save interrupt handler */
	_sercom_interrupt_handlers[instance] = interrupt_handler;
     4f4:	0080      	lsls	r0, r0, #2
     4f6:	4b02      	ldr	r3, [pc, #8]	; (500 <_sercom_set_handler+0x30>)
     4f8:	50c1      	str	r1, [r0, r3]
}
     4fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
     4fc:	200009de 	.word	0x200009de
     500:	200009e0 	.word	0x200009e0
     504:	000004cd 	.word	0x000004cd
     508:	20000a54 	.word	0x20000a54

0000050c <_sercom_get_interrupt_vector>:
 * \retval SYSTEM_INTERRUPT_MODULE_SERCOM6
 * \retval SYSTEM_INTERRUPT_MODULE_SERCOM7
 */
enum system_interrupt_vector _sercom_get_interrupt_vector(
		Sercom *const sercom_instance)
{
     50c:	b500      	push	{lr}
     50e:	b083      	sub	sp, #12
	const uint8_t sercom_int_vectors[SERCOM_INST_NUM] =
     510:	2309      	movs	r3, #9
     512:	466a      	mov	r2, sp
     514:	7013      	strb	r3, [r2, #0]
     516:	3301      	adds	r3, #1
     518:	7053      	strb	r3, [r2, #1]
     51a:	3301      	adds	r3, #1
     51c:	7093      	strb	r3, [r2, #2]
     51e:	3301      	adds	r3, #1
     520:	70d3      	strb	r3, [r2, #3]
     522:	3301      	adds	r3, #1
     524:	7113      	strb	r3, [r2, #4]
     526:	3301      	adds	r3, #1
     528:	7153      	strb	r3, [r2, #5]
		{
			MREPEAT(SERCOM_INST_NUM, _SERCOM_INTERRUPT_VECT_NUM, ~)
		};

	/* Retrieve the index of the SERCOM being requested */
	uint8_t instance_index = _sercom_get_sercom_inst_index(sercom_instance);
     52a:	4b03      	ldr	r3, [pc, #12]	; (538 <_sercom_get_interrupt_vector+0x2c>)
     52c:	4798      	blx	r3

	/* Get the vector number from the lookup table for the requested SERCOM */
	return (enum system_interrupt_vector)sercom_int_vectors[instance_index];
     52e:	466b      	mov	r3, sp
     530:	5618      	ldrsb	r0, [r3, r0]
}
     532:	b003      	add	sp, #12
     534:	bd00      	pop	{pc}
     536:	46c0      	nop			; (mov r8, r8)
     538:	00000495 	.word	0x00000495

0000053c <SERCOM0_Handler>:

/** Auto-generate a set of interrupt handlers for each SERCOM in the device */
MREPEAT(SERCOM_INST_NUM, _SERCOM_INTERRUPT_HANDLER, ~)
     53c:	b510      	push	{r4, lr}
     53e:	4b02      	ldr	r3, [pc, #8]	; (548 <SERCOM0_Handler+0xc>)
     540:	681b      	ldr	r3, [r3, #0]
     542:	2000      	movs	r0, #0
     544:	4798      	blx	r3
     546:	bd10      	pop	{r4, pc}
     548:	200009e0 	.word	0x200009e0

0000054c <SERCOM1_Handler>:
     54c:	b510      	push	{r4, lr}
     54e:	4b02      	ldr	r3, [pc, #8]	; (558 <SERCOM1_Handler+0xc>)
     550:	685b      	ldr	r3, [r3, #4]
     552:	2001      	movs	r0, #1
     554:	4798      	blx	r3
     556:	bd10      	pop	{r4, pc}
     558:	200009e0 	.word	0x200009e0

0000055c <SERCOM2_Handler>:
     55c:	b510      	push	{r4, lr}
     55e:	4b02      	ldr	r3, [pc, #8]	; (568 <SERCOM2_Handler+0xc>)
     560:	689b      	ldr	r3, [r3, #8]
     562:	2002      	movs	r0, #2
     564:	4798      	blx	r3
     566:	bd10      	pop	{r4, pc}
     568:	200009e0 	.word	0x200009e0

0000056c <SERCOM3_Handler>:
     56c:	b510      	push	{r4, lr}
     56e:	4b02      	ldr	r3, [pc, #8]	; (578 <SERCOM3_Handler+0xc>)
     570:	68db      	ldr	r3, [r3, #12]
     572:	2003      	movs	r0, #3
     574:	4798      	blx	r3
     576:	bd10      	pop	{r4, pc}
     578:	200009e0 	.word	0x200009e0

0000057c <SERCOM4_Handler>:
     57c:	b510      	push	{r4, lr}
     57e:	4b02      	ldr	r3, [pc, #8]	; (588 <SERCOM4_Handler+0xc>)
     580:	691b      	ldr	r3, [r3, #16]
     582:	2004      	movs	r0, #4
     584:	4798      	blx	r3
     586:	bd10      	pop	{r4, pc}
     588:	200009e0 	.word	0x200009e0

0000058c <SERCOM5_Handler>:
     58c:	b510      	push	{r4, lr}
     58e:	4b02      	ldr	r3, [pc, #8]	; (598 <SERCOM5_Handler+0xc>)
     590:	695b      	ldr	r3, [r3, #20]
     592:	2005      	movs	r0, #5
     594:	4798      	blx	r3
     596:	bd10      	pop	{r4, pc}
     598:	200009e0 	.word	0x200009e0

0000059c <spi_init>:
 */
enum status_code spi_init(
		struct spi_module *const module,
		Sercom *const hw,
		const struct spi_config *const config)
{
     59c:	b5f0      	push	{r4, r5, r6, r7, lr}
     59e:	b08b      	sub	sp, #44	; 0x2c
     5a0:	0005      	movs	r5, r0
     5a2:	000c      	movs	r4, r1
     5a4:	0016      	movs	r6, r2
	Assert(module);
	Assert(hw);
	Assert(config);

	/* Initialize device instance */
	module->hw = hw;
     5a6:	6029      	str	r1, [r5, #0]

	SercomSpi *const spi_module = &(module->hw->SPI);

	/* Check if module is enabled. */
	if (spi_module->CTRLA.reg & SERCOM_SPI_CTRLA_ENABLE) {
     5a8:	680b      	ldr	r3, [r1, #0]
#  if SPI_CALLBACK_MODE == false
		/* Check if config is valid */
		return _spi_check_config(module, config);
#  else
		return STATUS_ERR_DENIED;
     5aa:	201c      	movs	r0, #28
	if (spi_module->CTRLA.reg & SERCOM_SPI_CTRLA_ENABLE) {
     5ac:	079b      	lsls	r3, r3, #30
     5ae:	d501      	bpl.n	5b4 <spi_init+0x18>
	_sercom_instances[instance_index] = module;
#endif

	/* Write configuration to module and return status code */
	return _spi_set_config(module, config);
}
     5b0:	b00b      	add	sp, #44	; 0x2c
     5b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (spi_module->CTRLA.reg & SERCOM_SPI_CTRLA_SWRST){
     5b4:	680b      	ldr	r3, [r1, #0]
		return STATUS_BUSY;
     5b6:	3817      	subs	r0, #23
	if (spi_module->CTRLA.reg & SERCOM_SPI_CTRLA_SWRST){
     5b8:	07db      	lsls	r3, r3, #31
     5ba:	d4f9      	bmi.n	5b0 <spi_init+0x14>
	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     5bc:	0008      	movs	r0, r1
     5be:	4b6f      	ldr	r3, [pc, #444]	; (77c <spi_init+0x1e0>)
     5c0:	4798      	blx	r3
		case SYSTEM_CLOCK_APB_APBB:
			PM->APBBMASK.reg |= mask;
			break;

		case SYSTEM_CLOCK_APB_APBC:
			PM->APBCMASK.reg |= mask;
     5c2:	4a6f      	ldr	r2, [pc, #444]	; (780 <spi_init+0x1e4>)
     5c4:	6a11      	ldr	r1, [r2, #32]
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
     5c6:	1c87      	adds	r7, r0, #2
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
     5c8:	2301      	movs	r3, #1
     5ca:	40bb      	lsls	r3, r7
     5cc:	430b      	orrs	r3, r1
     5ce:	6213      	str	r3, [r2, #32]
	gclk_chan_conf.source_generator = config->generator_source;
     5d0:	a909      	add	r1, sp, #36	; 0x24
     5d2:	2724      	movs	r7, #36	; 0x24
     5d4:	5df3      	ldrb	r3, [r6, r7]
     5d6:	700b      	strb	r3, [r1, #0]
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     5d8:	3014      	adds	r0, #20
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
     5da:	b2c3      	uxtb	r3, r0
     5dc:	9301      	str	r3, [sp, #4]
     5de:	0018      	movs	r0, r3
     5e0:	4b68      	ldr	r3, [pc, #416]	; (784 <spi_init+0x1e8>)
     5e2:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
     5e4:	9801      	ldr	r0, [sp, #4]
     5e6:	4b68      	ldr	r3, [pc, #416]	; (788 <spi_init+0x1ec>)
     5e8:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
     5ea:	5df0      	ldrb	r0, [r6, r7]
     5ec:	2100      	movs	r1, #0
     5ee:	4b67      	ldr	r3, [pc, #412]	; (78c <spi_init+0x1f0>)
     5f0:	4798      	blx	r3
	if (config->mode == SPI_MODE_MASTER) {
     5f2:	7833      	ldrb	r3, [r6, #0]
     5f4:	2b01      	cmp	r3, #1
     5f6:	d03f      	beq.n	678 <spi_init+0xdc>
	if (config->mode == SPI_MODE_SLAVE) {
     5f8:	7833      	ldrb	r3, [r6, #0]
     5fa:	2b00      	cmp	r3, #0
     5fc:	d103      	bne.n	606 <spi_init+0x6a>
		spi_module->CTRLA.reg |= SERCOM_SPI_CTRLA_MODE(0x2);
     5fe:	6823      	ldr	r3, [r4, #0]
     600:	2208      	movs	r2, #8
     602:	4313      	orrs	r3, r2
     604:	6023      	str	r3, [r4, #0]
     606:	002b      	movs	r3, r5
     608:	330c      	adds	r3, #12
     60a:	0029      	movs	r1, r5
     60c:	3128      	adds	r1, #40	; 0x28
		module->callback[i]        = NULL;
     60e:	2200      	movs	r2, #0
     610:	c304      	stmia	r3!, {r2}
	for (i = 0; i < SPI_CALLBACK_N; i++) {
     612:	428b      	cmp	r3, r1
     614:	d1fc      	bne.n	610 <spi_init+0x74>
	module->tx_buffer_ptr              = NULL;
     616:	2300      	movs	r3, #0
     618:	62eb      	str	r3, [r5, #44]	; 0x2c
	module->rx_buffer_ptr              = NULL;
     61a:	62ab      	str	r3, [r5, #40]	; 0x28
	module->remaining_tx_buffer_length = 0x0000;
     61c:	2400      	movs	r4, #0
     61e:	86ab      	strh	r3, [r5, #52]	; 0x34
	module->remaining_rx_buffer_length = 0x0000;
     620:	862b      	strh	r3, [r5, #48]	; 0x30
	module->registered_callback        = 0x00;
     622:	3336      	adds	r3, #54	; 0x36
     624:	54ec      	strb	r4, [r5, r3]
	module->enabled_callback           = 0x00;
     626:	3301      	adds	r3, #1
     628:	54ec      	strb	r4, [r5, r3]
	module->status                     = STATUS_OK;
     62a:	3301      	adds	r3, #1
     62c:	54ec      	strb	r4, [r5, r3]
	module->dir                        = SPI_DIRECTION_IDLE;
     62e:	3b35      	subs	r3, #53	; 0x35
     630:	726b      	strb	r3, [r5, #9]
	module->locked                     = false;
     632:	712c      	strb	r4, [r5, #4]
	instance_index = _sercom_get_sercom_inst_index(module->hw);
     634:	6828      	ldr	r0, [r5, #0]
     636:	4b51      	ldr	r3, [pc, #324]	; (77c <spi_init+0x1e0>)
     638:	4798      	blx	r3
     63a:	0007      	movs	r7, r0
	_sercom_set_handler(instance_index, _spi_interrupt_handler);
     63c:	4954      	ldr	r1, [pc, #336]	; (790 <spi_init+0x1f4>)
     63e:	4b55      	ldr	r3, [pc, #340]	; (794 <spi_init+0x1f8>)
     640:	4798      	blx	r3
	_sercom_instances[instance_index] = module;
     642:	00bf      	lsls	r7, r7, #2
     644:	4b54      	ldr	r3, [pc, #336]	; (798 <spi_init+0x1fc>)
     646:	50fd      	str	r5, [r7, r3]
	SercomSpi *const spi_module = &(module->hw->SPI);
     648:	682f      	ldr	r7, [r5, #0]
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mux_position = SYSTEM_PINMUX_GPIO;
     64a:	ab04      	add	r3, sp, #16
     64c:	2280      	movs	r2, #128	; 0x80
     64e:	701a      	strb	r2, [r3, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     650:	705c      	strb	r4, [r3, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
     652:	3a7f      	subs	r2, #127	; 0x7f
     654:	709a      	strb	r2, [r3, #2]
	config->powersave    = false;
     656:	70dc      	strb	r4, [r3, #3]
	if(config->mode == SPI_MODE_SLAVE) {
     658:	7833      	ldrb	r3, [r6, #0]
     65a:	2b00      	cmp	r3, #0
     65c:	d102      	bne.n	664 <spi_init+0xc8>
		pin_conf.input_pull = SYSTEM_PINMUX_PIN_PULL_NONE;
     65e:	2200      	movs	r2, #0
     660:	ab04      	add	r3, sp, #16
     662:	709a      	strb	r2, [r3, #2]
	uint32_t pad_pinmuxes[] = {
     664:	6ab3      	ldr	r3, [r6, #40]	; 0x28
     666:	9305      	str	r3, [sp, #20]
     668:	6af3      	ldr	r3, [r6, #44]	; 0x2c
     66a:	9306      	str	r3, [sp, #24]
     66c:	6b33      	ldr	r3, [r6, #48]	; 0x30
     66e:	9307      	str	r3, [sp, #28]
     670:	6b73      	ldr	r3, [r6, #52]	; 0x34
     672:	9308      	str	r3, [sp, #32]
     674:	2400      	movs	r4, #0
     676:	e00b      	b.n	690 <spi_init+0xf4>
		spi_module->CTRLA.reg |= SERCOM_SPI_CTRLA_MODE(0x3);
     678:	6823      	ldr	r3, [r4, #0]
     67a:	220c      	movs	r2, #12
     67c:	4313      	orrs	r3, r2
     67e:	6023      	str	r3, [r4, #0]
     680:	e7ba      	b.n	5f8 <spi_init+0x5c>
			current_pinmux = _sercom_get_default_pad(hw, pad);
     682:	0038      	movs	r0, r7
     684:	4b45      	ldr	r3, [pc, #276]	; (79c <spi_init+0x200>)
     686:	4798      	blx	r3
     688:	e00a      	b.n	6a0 <spi_init+0x104>
     68a:	3401      	adds	r4, #1
	for (uint8_t pad = 0; pad < 4; pad++) {
     68c:	2c04      	cmp	r4, #4
     68e:	d010      	beq.n	6b2 <spi_init+0x116>
     690:	b2e1      	uxtb	r1, r4
		uint32_t current_pinmux = pad_pinmuxes[pad];
     692:	00a3      	lsls	r3, r4, #2
     694:	aa02      	add	r2, sp, #8
     696:	200c      	movs	r0, #12
     698:	1812      	adds	r2, r2, r0
     69a:	58d0      	ldr	r0, [r2, r3]
		if (current_pinmux == PINMUX_DEFAULT) {
     69c:	2800      	cmp	r0, #0
     69e:	d0f0      	beq.n	682 <spi_init+0xe6>
		if (current_pinmux != PINMUX_UNUSED) {
     6a0:	1c43      	adds	r3, r0, #1
     6a2:	d0f2      	beq.n	68a <spi_init+0xee>
			pin_conf.mux_position = current_pinmux & 0xFFFF;
     6a4:	a904      	add	r1, sp, #16
     6a6:	7008      	strb	r0, [r1, #0]
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
     6a8:	0c00      	lsrs	r0, r0, #16
     6aa:	b2c0      	uxtb	r0, r0
     6ac:	4b3c      	ldr	r3, [pc, #240]	; (7a0 <spi_init+0x204>)
     6ae:	4798      	blx	r3
     6b0:	e7eb      	b.n	68a <spi_init+0xee>
	module->mode             = config->mode;
     6b2:	7833      	ldrb	r3, [r6, #0]
     6b4:	716b      	strb	r3, [r5, #5]
	module->character_size   = config->character_size;
     6b6:	7c33      	ldrb	r3, [r6, #16]
     6b8:	71ab      	strb	r3, [r5, #6]
	module->receiver_enabled = config->receiver_enable;
     6ba:	7cb3      	ldrb	r3, [r6, #18]
     6bc:	71eb      	strb	r3, [r5, #7]
	module->master_slave_select_enable = config->master_slave_select_enable;
     6be:	7d33      	ldrb	r3, [r6, #20]
     6c0:	722b      	strb	r3, [r5, #8]
	uint16_t baud = 0;
     6c2:	2200      	movs	r2, #0
     6c4:	ab02      	add	r3, sp, #8
     6c6:	80da      	strh	r2, [r3, #6]
	if (config->mode == SPI_MODE_MASTER) {
     6c8:	7833      	ldrb	r3, [r6, #0]
     6ca:	2b01      	cmp	r3, #1
     6cc:	d012      	beq.n	6f4 <spi_init+0x158>
	if (config->mode == SPI_MODE_SLAVE) {
     6ce:	7833      	ldrb	r3, [r6, #0]
     6d0:	2b00      	cmp	r3, #0
     6d2:	d126      	bne.n	722 <spi_init+0x186>
		ctrla = config->mode_specific.slave.frame_format;
     6d4:	69b0      	ldr	r0, [r6, #24]
		ctrlb = config->mode_specific.slave.address_mode;
     6d6:	8bb2      	ldrh	r2, [r6, #28]
		spi_module->ADDR.reg |=
     6d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
				(config->mode_specific.slave.address_mask << SERCOM_SPI_ADDR_ADDRMASK_Pos);
     6da:	7ff1      	ldrb	r1, [r6, #31]
     6dc:	0409      	lsls	r1, r1, #16
				(config->mode_specific.slave.address      << SERCOM_SPI_ADDR_ADDR_Pos) |
     6de:	7fb4      	ldrb	r4, [r6, #30]
     6e0:	4321      	orrs	r1, r4
		spi_module->ADDR.reg |=
     6e2:	4319      	orrs	r1, r3
     6e4:	6279      	str	r1, [r7, #36]	; 0x24
		if (config->mode_specific.slave.preload_enable) {
     6e6:	2320      	movs	r3, #32
     6e8:	5cf3      	ldrb	r3, [r6, r3]
     6ea:	2b00      	cmp	r3, #0
     6ec:	d01b      	beq.n	726 <spi_init+0x18a>
			ctrlb |= SERCOM_SPI_CTRLB_PLOADEN;
     6ee:	2340      	movs	r3, #64	; 0x40
     6f0:	431a      	orrs	r2, r3
     6f2:	e018      	b.n	726 <spi_init+0x18a>
		uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     6f4:	6828      	ldr	r0, [r5, #0]
     6f6:	4b21      	ldr	r3, [pc, #132]	; (77c <spi_init+0x1e0>)
     6f8:	4798      	blx	r3
		uint32_t gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     6fa:	3014      	adds	r0, #20
		uint32_t internal_clock = system_gclk_chan_get_hz(gclk_index);
     6fc:	b2c0      	uxtb	r0, r0
     6fe:	4b29      	ldr	r3, [pc, #164]	; (7a4 <spi_init+0x208>)
     700:	4798      	blx	r3
     702:	0001      	movs	r1, r0
		enum status_code error_code = _sercom_get_sync_baud_val(
     704:	ab02      	add	r3, sp, #8
     706:	1d9a      	adds	r2, r3, #6
     708:	69b0      	ldr	r0, [r6, #24]
     70a:	4b27      	ldr	r3, [pc, #156]	; (7a8 <spi_init+0x20c>)
     70c:	4798      	blx	r3
     70e:	0003      	movs	r3, r0
			return STATUS_ERR_INVALID_ARG;
     710:	2017      	movs	r0, #23
		if (error_code != STATUS_OK) {
     712:	2b00      	cmp	r3, #0
     714:	d000      	beq.n	718 <spi_init+0x17c>
     716:	e74b      	b.n	5b0 <spi_init+0x14>
		spi_module->BAUD.reg = (uint8_t)baud;
     718:	ab02      	add	r3, sp, #8
     71a:	3306      	adds	r3, #6
     71c:	781b      	ldrb	r3, [r3, #0]
     71e:	733b      	strb	r3, [r7, #12]
     720:	e7d5      	b.n	6ce <spi_init+0x132>
	uint32_t ctrlb = 0;
     722:	2200      	movs	r2, #0
	uint32_t ctrla = 0;
     724:	2000      	movs	r0, #0
	ctrla |= config->mux_setting;
     726:	6873      	ldr	r3, [r6, #4]
     728:	68b1      	ldr	r1, [r6, #8]
     72a:	430b      	orrs	r3, r1
     72c:	68f1      	ldr	r1, [r6, #12]
     72e:	430b      	orrs	r3, r1
     730:	4303      	orrs	r3, r0
	ctrlb |= config->character_size;
     732:	7c31      	ldrb	r1, [r6, #16]
     734:	430a      	orrs	r2, r1
	if (config->run_in_standby || system_is_debugger_present()) {
     736:	7c71      	ldrb	r1, [r6, #17]
     738:	2900      	cmp	r1, #0
     73a:	d103      	bne.n	744 <spi_init+0x1a8>
 * \retval false Debugger is not connected to the system
 *
 */
static inline bool system_is_debugger_present(void)
{
	return DSU->STATUSB.reg & DSU_STATUSB_DBGPRES;
     73c:	491b      	ldr	r1, [pc, #108]	; (7ac <spi_init+0x210>)
     73e:	7889      	ldrb	r1, [r1, #2]
     740:	0789      	lsls	r1, r1, #30
     742:	d501      	bpl.n	748 <spi_init+0x1ac>
		ctrla |= SERCOM_SPI_CTRLA_RUNSTDBY;
     744:	2180      	movs	r1, #128	; 0x80
     746:	430b      	orrs	r3, r1
	if (config->receiver_enable) {
     748:	7cb1      	ldrb	r1, [r6, #18]
     74a:	2900      	cmp	r1, #0
     74c:	d002      	beq.n	754 <spi_init+0x1b8>
		ctrlb |= SERCOM_SPI_CTRLB_RXEN;
     74e:	2180      	movs	r1, #128	; 0x80
     750:	0289      	lsls	r1, r1, #10
     752:	430a      	orrs	r2, r1
	if (config->select_slave_low_detect_enable) {
     754:	7cf1      	ldrb	r1, [r6, #19]
     756:	2900      	cmp	r1, #0
     758:	d002      	beq.n	760 <spi_init+0x1c4>
		ctrlb |= SERCOM_SPI_CTRLB_SSDE;
     75a:	2180      	movs	r1, #128	; 0x80
     75c:	0089      	lsls	r1, r1, #2
     75e:	430a      	orrs	r2, r1
	if (config->master_slave_select_enable) {
     760:	7d31      	ldrb	r1, [r6, #20]
     762:	2900      	cmp	r1, #0
     764:	d002      	beq.n	76c <spi_init+0x1d0>
		ctrlb |= SERCOM_SPI_CTRLB_MSSEN;
     766:	2180      	movs	r1, #128	; 0x80
     768:	0189      	lsls	r1, r1, #6
     76a:	430a      	orrs	r2, r1
	spi_module->CTRLA.reg |= ctrla;
     76c:	6839      	ldr	r1, [r7, #0]
     76e:	430b      	orrs	r3, r1
     770:	603b      	str	r3, [r7, #0]
	spi_module->CTRLB.reg |= ctrlb;
     772:	687b      	ldr	r3, [r7, #4]
     774:	431a      	orrs	r2, r3
     776:	607a      	str	r2, [r7, #4]
	return STATUS_OK;
     778:	2000      	movs	r0, #0
     77a:	e719      	b.n	5b0 <spi_init+0x14>
     77c:	00000495 	.word	0x00000495
     780:	40000400 	.word	0x40000400
     784:	00001a11 	.word	0x00001a11
     788:	00001985 	.word	0x00001985
     78c:	000002d1 	.word	0x000002d1
     790:	000008cd 	.word	0x000008cd
     794:	000004d1 	.word	0x000004d1
     798:	20000a54 	.word	0x20000a54
     79c:	0000031d 	.word	0x0000031d
     7a0:	00001b09 	.word	0x00001b09
     7a4:	00001a2d 	.word	0x00001a2d
     7a8:	00000213 	.word	0x00000213
     7ac:	41002000 	.word	0x41002000

000007b0 <spi_read_buffer_wait>:
enum status_code spi_read_buffer_wait(
		struct spi_module *const module,
		uint8_t *rx_data,
		uint16_t length,
		uint16_t dummy)
{
     7b0:	b5f0      	push	{r4, r5, r6, r7, lr}
     7b2:	46d6      	mov	lr, sl
     7b4:	464f      	mov	r7, r9
     7b6:	b580      	push	{r7, lr}
     7b8:	b083      	sub	sp, #12
     7ba:	468c      	mov	ip, r1
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

#  if SPI_CALLBACK_MODE == true
	if (module->status == STATUS_BUSY) {
     7bc:	2538      	movs	r5, #56	; 0x38
     7be:	5d46      	ldrb	r6, [r0, r5]
		/* Check if the SPI module is busy with a job */
		return STATUS_BUSY;
     7c0:	3d33      	subs	r5, #51	; 0x33
	if (module->status == STATUS_BUSY) {
     7c2:	2e05      	cmp	r6, #5
     7c4:	d075      	beq.n	8b2 <spi_read_buffer_wait+0x102>
	}
#  endif

	/* Sanity check arguments */
	if (length == 0) {
		return STATUS_ERR_INVALID_ARG;
     7c6:	3512      	adds	r5, #18
	if (length == 0) {
     7c8:	2a00      	cmp	r2, #0
     7ca:	d072      	beq.n	8b2 <spi_read_buffer_wait+0x102>
	}

	if (!(module->receiver_enabled)) {
     7cc:	79c4      	ldrb	r4, [r0, #7]
		return STATUS_ERR_DENIED;
     7ce:	3505      	adds	r5, #5
	if (!(module->receiver_enabled)) {
     7d0:	2c00      	cmp	r4, #0
     7d2:	d06e      	beq.n	8b2 <spi_read_buffer_wait+0x102>
	}
#  if CONF_SPI_SLAVE_ENABLE == true
	if ((module->mode == SPI_MODE_SLAVE) && (spi_is_write_complete(module))) {
     7d4:	7944      	ldrb	r4, [r0, #5]
     7d6:	2c00      	cmp	r4, #0
     7d8:	d103      	bne.n	7e2 <spi_read_buffer_wait+0x32>
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);
     7da:	6804      	ldr	r4, [r0, #0]

	/* Check interrupt flag */
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_TXC);
     7dc:	7e25      	ldrb	r5, [r4, #24]
     7de:	07a9      	lsls	r1, r5, #30
     7e0:	d40a      	bmi.n	7f8 <spi_read_buffer_wait+0x48>
		_spi_clear_tx_complete_flag(module);
	}
#  endif
	uint16_t rx_pos = 0;

	while (length--) {
     7e2:	3a01      	subs	r2, #1
     7e4:	b294      	uxth	r4, r2
     7e6:	2600      	movs	r6, #0

#  if CONF_SPI_SLAVE_ENABLE == true
		/* Start timeout period for slave */
		if (module->mode == SPI_MODE_SLAVE) {
			for (uint32_t i = 0; i <= SPI_TIMEOUT; i++) {
				if (spi_is_ready_to_read(module)) {
     7e8:	2204      	movs	r2, #4
					break;
				}
			}
			/* Check if master has ended the transaction */
			if (spi_is_write_complete(module)) {
     7ea:	2102      	movs	r1, #2
     7ec:	4689      	mov	r9, r1
			while (!spi_is_ready_to_write(module)) {
     7ee:	2701      	movs	r7, #1
		/* Data register has not been copied to the shift register, return */
		return STATUS_BUSY;
	}

	/* Write the character to the DATA register */
	spi_module->DATA.reg = tx_data & SERCOM_SPI_DATA_MASK;
     7f0:	05db      	lsls	r3, r3, #23
     7f2:	0ddb      	lsrs	r3, r3, #23
     7f4:	469a      	mov	sl, r3
     7f6:	e037      	b.n	868 <spi_read_buffer_wait+0xb8>
	spi_module->INTFLAG.reg = SPI_INTERRUPT_FLAG_TX_COMPLETE;
     7f8:	2502      	movs	r5, #2
     7fa:	7625      	strb	r5, [r4, #24]
     7fc:	e7f1      	b.n	7e2 <spi_read_buffer_wait+0x32>
	SercomSpi *const spi_module = &(module->hw->SPI);
     7fe:	6801      	ldr	r1, [r0, #0]
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_DRE);
     800:	7e0b      	ldrb	r3, [r1, #24]
			while (!spi_is_ready_to_write(module)) {
     802:	423b      	tst	r3, r7
     804:	d0fc      	beq.n	800 <spi_read_buffer_wait+0x50>
     806:	7e0b      	ldrb	r3, [r1, #24]
	if (!spi_is_ready_to_write(module)) {
     808:	423b      	tst	r3, r7
     80a:	d009      	beq.n	820 <spi_read_buffer_wait+0x70>
	spi_module->DATA.reg = tx_data & SERCOM_SPI_DATA_MASK;
     80c:	4653      	mov	r3, sl
     80e:	628b      	str	r3, [r1, #40]	; 0x28
     810:	e02d      	b.n	86e <spi_read_buffer_wait+0xbe>
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_TXC);
     812:	7e0b      	ldrb	r3, [r1, #24]
			if (spi_is_write_complete(module)) {
     814:	464d      	mov	r5, r9
     816:	422b      	tst	r3, r5
     818:	d138      	bne.n	88c <spi_read_buffer_wait+0xdc>
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_RXC);
     81a:	7e0b      	ldrb	r3, [r1, #24]
				_spi_clear_tx_complete_flag(module);
				return STATUS_ABORTED;
			}

			if (!spi_is_ready_to_read(module)) {
     81c:	4213      	tst	r3, r2
     81e:	d045      	beq.n	8ac <spi_read_buffer_wait+0xfc>
	SercomSpi *const spi_module = &(module->hw->SPI);
     820:	6801      	ldr	r1, [r0, #0]
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_RXC);
     822:	7e0b      	ldrb	r3, [r1, #24]
			}
		}
#  endif

		/* Wait until the module is ready to read a character */
		while (!spi_is_ready_to_read(module)) {
     824:	4213      	tst	r3, r2
     826:	d0fc      	beq.n	822 <spi_read_buffer_wait+0x72>
     828:	7e0b      	ldrb	r3, [r1, #24]
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);

	/* Check if data is ready to be read */
	if (!spi_is_ready_to_read(module)) {
     82a:	4213      	tst	r3, r2
     82c:	d040      	beq.n	8b0 <spi_read_buffer_wait+0x100>

	/* Return value */
	enum status_code retval = STATUS_OK;

	/* Check if data is overflown */
	if (spi_module->STATUS.reg & SERCOM_SPI_STATUS_BUFOVF) {
     82e:	8b4b      	ldrh	r3, [r1, #26]
	enum status_code retval = STATUS_OK;
     830:	2500      	movs	r5, #0
     832:	9501      	str	r5, [sp, #4]
	if (spi_module->STATUS.reg & SERCOM_SPI_STATUS_BUFOVF) {
     834:	4213      	tst	r3, r2
     836:	d002      	beq.n	83e <spi_read_buffer_wait+0x8e>
		retval = STATUS_ERR_OVERFLOW;
		/* Clear overflow flag */
		spi_module->STATUS.reg = SERCOM_SPI_STATUS_BUFOVF;
     838:	834a      	strh	r2, [r1, #26]
		retval = STATUS_ERR_OVERFLOW;
     83a:	231e      	movs	r3, #30
     83c:	9301      	str	r3, [sp, #4]
	}

	/* Read the character from the DATA register */
	if (module->character_size == SPI_CHARACTER_SIZE_9BIT) {
     83e:	7983      	ldrb	r3, [r0, #6]
     840:	2b01      	cmp	r3, #1
     842:	d027      	beq.n	894 <spi_read_buffer_wait+0xe4>
		*rx_data = (spi_module->DATA.reg & SERCOM_SPI_DATA_MASK);
	} else {
		*rx_data = (uint8_t)spi_module->DATA.reg;
     844:	6a8b      	ldr	r3, [r1, #40]	; 0x28
     846:	b2db      	uxtb	r3, r3
		}

		uint16_t received_data = 0;
		enum status_code retval = spi_read(module, &received_data);

		if (retval != STATUS_OK) {
     848:	9901      	ldr	r1, [sp, #4]
     84a:	2900      	cmp	r1, #0
     84c:	d137      	bne.n	8be <spi_read_buffer_wait+0x10e>
			/* Overflow, abort */
			return retval;
		}

		/* Read value will be at least 8-bits long */
		rx_data[rx_pos++] = received_data;
     84e:	1c75      	adds	r5, r6, #1
     850:	b2ad      	uxth	r5, r5
     852:	4661      	mov	r1, ip
     854:	558b      	strb	r3, [r1, r6]

		/* If 9-bit data, write next received byte to the buffer */
		if (module->character_size == SPI_CHARACTER_SIZE_9BIT) {
     856:	7981      	ldrb	r1, [r0, #6]
     858:	2901      	cmp	r1, #1
     85a:	d01f      	beq.n	89c <spi_read_buffer_wait+0xec>
		rx_data[rx_pos++] = received_data;
     85c:	002e      	movs	r6, r5
	while (length--) {
     85e:	3c01      	subs	r4, #1
     860:	b2a4      	uxth	r4, r4
     862:	4b18      	ldr	r3, [pc, #96]	; (8c4 <spi_read_buffer_wait+0x114>)
     864:	429c      	cmp	r4, r3
     866:	d01f      	beq.n	8a8 <spi_read_buffer_wait+0xf8>
		if (module->mode == SPI_MODE_MASTER) {
     868:	7943      	ldrb	r3, [r0, #5]
     86a:	2b01      	cmp	r3, #1
     86c:	d0c7      	beq.n	7fe <spi_read_buffer_wait+0x4e>
		if (module->mode == SPI_MODE_SLAVE) {
     86e:	7943      	ldrb	r3, [r0, #5]
     870:	2b00      	cmp	r3, #0
     872:	d1d5      	bne.n	820 <spi_read_buffer_wait+0x70>
	SercomSpi *const spi_module = &(module->hw->SPI);
     874:	6801      	ldr	r1, [r0, #0]
	return (spi_module->INTFLAG.reg & SERCOM_SPI_INTFLAG_RXC);
     876:	7e0b      	ldrb	r3, [r1, #24]
				if (spi_is_ready_to_read(module)) {
     878:	4213      	tst	r3, r2
     87a:	d1ca      	bne.n	812 <spi_read_buffer_wait+0x62>
     87c:	4b12      	ldr	r3, [pc, #72]	; (8c8 <spi_read_buffer_wait+0x118>)
     87e:	7e0d      	ldrb	r5, [r1, #24]
     880:	4215      	tst	r5, r2
     882:	d1c6      	bne.n	812 <spi_read_buffer_wait+0x62>
     884:	3b01      	subs	r3, #1
			for (uint32_t i = 0; i <= SPI_TIMEOUT; i++) {
     886:	2b00      	cmp	r3, #0
     888:	d1f9      	bne.n	87e <spi_read_buffer_wait+0xce>
     88a:	e7c2      	b.n	812 <spi_read_buffer_wait+0x62>
	spi_module->INTFLAG.reg = SPI_INTERRUPT_FLAG_TX_COMPLETE;
     88c:	2302      	movs	r3, #2
     88e:	760b      	strb	r3, [r1, #24]
				return STATUS_ABORTED;
     890:	2504      	movs	r5, #4
     892:	e00e      	b.n	8b2 <spi_read_buffer_wait+0x102>
		*rx_data = (spi_module->DATA.reg & SERCOM_SPI_DATA_MASK);
     894:	6a8b      	ldr	r3, [r1, #40]	; 0x28
     896:	05db      	lsls	r3, r3, #23
     898:	0ddb      	lsrs	r3, r3, #23
     89a:	e7d5      	b.n	848 <spi_read_buffer_wait+0x98>
			rx_data[rx_pos++] = (received_data >> 8);
     89c:	3602      	adds	r6, #2
     89e:	b2b6      	uxth	r6, r6
     8a0:	0a1b      	lsrs	r3, r3, #8
     8a2:	4661      	mov	r1, ip
     8a4:	554b      	strb	r3, [r1, r5]
     8a6:	e7da      	b.n	85e <spi_read_buffer_wait+0xae>
     8a8:	9d01      	ldr	r5, [sp, #4]
     8aa:	e002      	b.n	8b2 <spi_read_buffer_wait+0x102>
				return STATUS_ERR_TIMEOUT;
     8ac:	2512      	movs	r5, #18
     8ae:	e000      	b.n	8b2 <spi_read_buffer_wait+0x102>
		return STATUS_ERR_IO;
     8b0:	2510      	movs	r5, #16
		}
	}

	return STATUS_OK;
}
     8b2:	0028      	movs	r0, r5
     8b4:	b003      	add	sp, #12
     8b6:	bc0c      	pop	{r2, r3}
     8b8:	4691      	mov	r9, r2
     8ba:	469a      	mov	sl, r3
     8bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8be:	9d01      	ldr	r5, [sp, #4]
     8c0:	e7f7      	b.n	8b2 <spi_read_buffer_wait+0x102>
     8c2:	46c0      	nop			; (mov r8, r8)
     8c4:	0000ffff 	.word	0x0000ffff
     8c8:	00002710 	.word	0x00002710

000008cc <_spi_interrupt_handler>:
 * \param[in]  instance  ID of the SERCOM instance calling the interrupt
 *                       handler.
 */
void _spi_interrupt_handler(
		uint8_t instance)
{
     8cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	/* Get device instance from the look-up table */
	struct spi_module *module
     8ce:	0080      	lsls	r0, r0, #2
     8d0:	4b85      	ldr	r3, [pc, #532]	; (ae8 <_spi_interrupt_handler+0x21c>)
     8d2:	58c4      	ldr	r4, [r0, r3]
		= (struct spi_module *)_sercom_instances[instance];

	/* Pointer to the hardware module instance */
	SercomSpi *const spi_hw = &(module->hw->SPI);
     8d4:	6826      	ldr	r6, [r4, #0]

	/* Combine callback registered and enabled masks. */
	uint8_t callback_mask =
			module->enabled_callback & module->registered_callback;
     8d6:	2337      	movs	r3, #55	; 0x37
	uint8_t callback_mask =
     8d8:	5ce3      	ldrb	r3, [r4, r3]
     8da:	2236      	movs	r2, #54	; 0x36
     8dc:	5ca7      	ldrb	r7, [r4, r2]
     8de:	401f      	ands	r7, r3

	/* Read and mask interrupt flag register */
	uint16_t interrupt_status = spi_hw->INTFLAG.reg;
     8e0:	7e33      	ldrb	r3, [r6, #24]
	interrupt_status &= spi_hw->INTENSET.reg;
     8e2:	7db5      	ldrb	r5, [r6, #22]
     8e4:	401d      	ands	r5, r3

	/* Data register empty interrupt */
	if (interrupt_status & SPI_INTERRUPT_FLAG_DATA_REGISTER_EMPTY) {
     8e6:	07eb      	lsls	r3, r5, #31
     8e8:	d52e      	bpl.n	948 <_spi_interrupt_handler+0x7c>
#  if CONF_SPI_MASTER_ENABLE == true
		if ((module->mode == SPI_MODE_MASTER) &&
     8ea:	7963      	ldrb	r3, [r4, #5]
     8ec:	2b01      	cmp	r3, #1
     8ee:	d025      	beq.n	93c <_spi_interrupt_handler+0x70>
#  if CONF_SPI_MASTER_ENABLE == true
		|| ((module->mode == SPI_MODE_MASTER) &&
			(module->dir != SPI_DIRECTION_READ))
#  endif
#  if CONF_SPI_SLAVE_ENABLE == true
		|| ((module->mode == SPI_MODE_SLAVE) &&
     8f0:	2b00      	cmp	r3, #0
     8f2:	d129      	bne.n	948 <_spi_interrupt_handler+0x7c>
			(module->dir != SPI_DIRECTION_READ))
     8f4:	7a63      	ldrb	r3, [r4, #9]
		|| ((module->mode == SPI_MODE_SLAVE) &&
     8f6:	2b00      	cmp	r3, #0
     8f8:	d026      	beq.n	948 <_spi_interrupt_handler+0x7c>
	SercomSpi *const spi_hw = &(module->hw->SPI);
     8fa:	6821      	ldr	r1, [r4, #0]
	uint16_t data_to_send = *(module->tx_buffer_ptr);
     8fc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     8fe:	7813      	ldrb	r3, [r2, #0]
     900:	b2db      	uxtb	r3, r3
	(module->tx_buffer_ptr)++;
     902:	1c50      	adds	r0, r2, #1
     904:	62e0      	str	r0, [r4, #44]	; 0x2c
	if (module->character_size == SPI_CHARACTER_SIZE_9BIT) {
     906:	79a0      	ldrb	r0, [r4, #6]
     908:	2801      	cmp	r0, #1
     90a:	d100      	bne.n	90e <_spi_interrupt_handler+0x42>
     90c:	e069      	b.n	9e2 <_spi_interrupt_handler+0x116>
	uint16_t data_to_send = *(module->tx_buffer_ptr);
     90e:	b29b      	uxth	r3, r3
	spi_hw->DATA.reg = data_to_send & SERCOM_SPI_DATA_MASK;
     910:	05db      	lsls	r3, r3, #23
     912:	0ddb      	lsrs	r3, r3, #23
     914:	628b      	str	r3, [r1, #40]	; 0x28
	(module->remaining_tx_buffer_length)--;
     916:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
     918:	3b01      	subs	r3, #1
     91a:	b29b      	uxth	r3, r3
     91c:	86a3      	strh	r3, [r4, #52]	; 0x34
#  endif
		) {
			/* Write next byte from buffer */
			_spi_write(module);
			if (module->remaining_tx_buffer_length == 0) {
     91e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
     920:	b29b      	uxth	r3, r3
     922:	2b00      	cmp	r3, #0
     924:	d110      	bne.n	948 <_spi_interrupt_handler+0x7c>
				/* Disable the Data Register Empty Interrupt */
				spi_hw->INTENCLR.reg
						= SPI_INTERRUPT_FLAG_DATA_REGISTER_EMPTY;
     926:	3301      	adds	r3, #1
     928:	7533      	strb	r3, [r6, #20]

				if (module->dir == SPI_DIRECTION_WRITE &&
     92a:	7a63      	ldrb	r3, [r4, #9]
     92c:	2b01      	cmp	r3, #1
     92e:	d10b      	bne.n	948 <_spi_interrupt_handler+0x7c>
     930:	79e3      	ldrb	r3, [r4, #7]
     932:	2b00      	cmp	r3, #0
     934:	d108      	bne.n	948 <_spi_interrupt_handler+0x7c>
						!(module->receiver_enabled)) {
					/* Enable the Data Register transmit complete Interrupt */
					spi_hw->INTENSET.reg = SPI_INTERRUPT_FLAG_TX_COMPLETE;
     936:	3302      	adds	r3, #2
     938:	75b3      	strb	r3, [r6, #22]
     93a:	e005      	b.n	948 <_spi_interrupt_handler+0x7c>
			(module->dir == SPI_DIRECTION_READ)) {
     93c:	7a63      	ldrb	r3, [r4, #9]
		if ((module->mode == SPI_MODE_MASTER) &&
     93e:	2b00      	cmp	r3, #0
     940:	d03e      	beq.n	9c0 <_spi_interrupt_handler+0xf4>
			(module->dir != SPI_DIRECTION_READ))
     942:	7a63      	ldrb	r3, [r4, #9]
		|| ((module->mode == SPI_MODE_MASTER) &&
     944:	2b00      	cmp	r3, #0
     946:	d1d8      	bne.n	8fa <_spi_interrupt_handler+0x2e>
			}
		}
	}

	/* Receive complete interrupt*/
	if (interrupt_status & SPI_INTERRUPT_FLAG_RX_COMPLETE) {
     948:	076b      	lsls	r3, r5, #29
     94a:	d511      	bpl.n	970 <_spi_interrupt_handler+0xa4>
		/* Check for overflow */
		if (spi_hw->STATUS.reg & SERCOM_SPI_STATUS_BUFOVF) {
     94c:	8b73      	ldrh	r3, [r6, #26]
     94e:	075b      	lsls	r3, r3, #29
     950:	d551      	bpl.n	9f6 <_spi_interrupt_handler+0x12a>
			if (module->dir != SPI_DIRECTION_WRITE) {
     952:	7a63      	ldrb	r3, [r4, #9]
     954:	2b01      	cmp	r3, #1
     956:	d008      	beq.n	96a <_spi_interrupt_handler+0x9e>
				/* Store the error code */
				module->status = STATUS_ERR_OVERFLOW;
     958:	221e      	movs	r2, #30
     95a:	2338      	movs	r3, #56	; 0x38
     95c:	54e2      	strb	r2, [r4, r3]

				/* End transaction */
				module->dir = SPI_DIRECTION_IDLE;
     95e:	3b35      	subs	r3, #53	; 0x35
     960:	7263      	strb	r3, [r4, #9]

				spi_hw->INTENCLR.reg = SPI_INTERRUPT_FLAG_RX_COMPLETE |
     962:	3302      	adds	r3, #2
     964:	7533      	strb	r3, [r6, #20]
						SPI_INTERRUPT_FLAG_DATA_REGISTER_EMPTY;
				/* Run callback if registered and enabled */
				if (callback_mask & (1 << SPI_CALLBACK_ERROR)) {
     966:	073b      	lsls	r3, r7, #28
     968:	d441      	bmi.n	9ee <_spi_interrupt_handler+0x122>
					(module->callback[SPI_CALLBACK_ERROR])(module);
				}
			}
			/* Flush */
			uint16_t flush = spi_hw->DATA.reg;
     96a:	6ab3      	ldr	r3, [r6, #40]	; 0x28
			UNUSED(flush);
			/* Clear overflow flag */
			spi_hw->STATUS.reg = SERCOM_SPI_STATUS_BUFOVF;
     96c:	2304      	movs	r3, #4
     96e:	8373      	strh	r3, [r6, #26]
			}
		}
	}

	/* Transmit complete */
	if (interrupt_status & SPI_INTERRUPT_FLAG_TX_COMPLETE) {
     970:	07ab      	lsls	r3, r5, #30
     972:	d515      	bpl.n	9a0 <_spi_interrupt_handler+0xd4>
#  if CONF_SPI_SLAVE_ENABLE == true
		if (module->mode == SPI_MODE_SLAVE) {
     974:	7963      	ldrb	r3, [r4, #5]
     976:	2b00      	cmp	r3, #0
     978:	d10e      	bne.n	998 <_spi_interrupt_handler+0xcc>
			/* Transaction ended by master */

			/* Disable interrupts */
			spi_hw->INTENCLR.reg =
     97a:	3307      	adds	r3, #7
     97c:	7533      	strb	r3, [r6, #20]
					SPI_INTERRUPT_FLAG_TX_COMPLETE |
					SPI_INTERRUPT_FLAG_RX_COMPLETE |
					SPI_INTERRUPT_FLAG_DATA_REGISTER_EMPTY;
			/* Clear interrupt flag */
			spi_hw->INTFLAG.reg = SPI_INTERRUPT_FLAG_TX_COMPLETE;
     97e:	3b05      	subs	r3, #5
     980:	7633      	strb	r3, [r6, #24]


			/* Reset all status information */
			module->dir = SPI_DIRECTION_IDLE;
     982:	3301      	adds	r3, #1
     984:	7263      	strb	r3, [r4, #9]
			module->remaining_tx_buffer_length = 0;
     986:	2300      	movs	r3, #0
     988:	86a3      	strh	r3, [r4, #52]	; 0x34
			module->remaining_rx_buffer_length = 0;
     98a:	8623      	strh	r3, [r4, #48]	; 0x30
			module->status = STATUS_OK;
     98c:	3338      	adds	r3, #56	; 0x38
     98e:	2200      	movs	r2, #0
     990:	54e2      	strb	r2, [r4, r3]

			if (callback_mask &
     992:	06fb      	lsls	r3, r7, #27
     994:	d500      	bpl.n	998 <_spi_interrupt_handler+0xcc>
     996:	e07f      	b.n	a98 <_spi_interrupt_handler+0x1cc>
			}

		}
#  endif
#  if CONF_SPI_MASTER_ENABLE == true
		if ((module->mode == SPI_MODE_MASTER) &&
     998:	7963      	ldrb	r3, [r4, #5]
     99a:	2b01      	cmp	r3, #1
     99c:	d100      	bne.n	9a0 <_spi_interrupt_handler+0xd4>
     99e:	e07f      	b.n	aa0 <_spi_interrupt_handler+0x1d4>
	}

#  ifdef FEATURE_SPI_SLAVE_SELECT_LOW_DETECT
#  if CONF_SPI_SLAVE_ENABLE == true
		/* When a high to low transition is detected on the _SS pin in slave mode */
		if (interrupt_status & SPI_INTERRUPT_FLAG_SLAVE_SELECT_LOW) {
     9a0:	072b      	lsls	r3, r5, #28
     9a2:	d508      	bpl.n	9b6 <_spi_interrupt_handler+0xea>
			if (module->mode == SPI_MODE_SLAVE) {
     9a4:	7963      	ldrb	r3, [r4, #5]
     9a6:	2b00      	cmp	r3, #0
     9a8:	d105      	bne.n	9b6 <_spi_interrupt_handler+0xea>
				/* Disable interrupts */
				spi_hw->INTENCLR.reg = SPI_INTERRUPT_FLAG_SLAVE_SELECT_LOW;
     9aa:	3308      	adds	r3, #8
     9ac:	7533      	strb	r3, [r6, #20]
				/* Clear interrupt flag */
				spi_hw->INTFLAG.reg = SPI_INTERRUPT_FLAG_SLAVE_SELECT_LOW;
     9ae:	7633      	strb	r3, [r6, #24]

				if (callback_mask & (1 << SPI_CALLBACK_SLAVE_SELECT_LOW)) {
     9b0:	06bb      	lsls	r3, r7, #26
     9b2:	d500      	bpl.n	9b6 <_spi_interrupt_handler+0xea>
     9b4:	e08a      	b.n	acc <_spi_interrupt_handler+0x200>
#  endif
#  endif

#  ifdef FEATURE_SPI_ERROR_INTERRUPT
	/* When combined error happen */
	if (interrupt_status & SPI_INTERRUPT_FLAG_COMBINED_ERROR) {
     9b6:	b26d      	sxtb	r5, r5
     9b8:	2d00      	cmp	r5, #0
     9ba:	da00      	bge.n	9be <_spi_interrupt_handler+0xf2>
     9bc:	e08a      	b.n	ad4 <_spi_interrupt_handler+0x208>
		if (callback_mask & (1 << SPI_CALLBACK_COMBINED_ERROR)) {
			(module->callback[SPI_CALLBACK_COMBINED_ERROR])(module);
		}
	}
#  endif
}
     9be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	spi_hw->DATA.reg = dummy_write;
     9c0:	4b4a      	ldr	r3, [pc, #296]	; (aec <_spi_interrupt_handler+0x220>)
     9c2:	881b      	ldrh	r3, [r3, #0]
     9c4:	62b3      	str	r3, [r6, #40]	; 0x28
	module->remaining_dummy_buffer_length--;
     9c6:	8e63      	ldrh	r3, [r4, #50]	; 0x32
     9c8:	3b01      	subs	r3, #1
     9ca:	b29b      	uxth	r3, r3
     9cc:	8663      	strh	r3, [r4, #50]	; 0x32
			if (module->remaining_dummy_buffer_length == 0) {
     9ce:	8e63      	ldrh	r3, [r4, #50]	; 0x32
     9d0:	b29b      	uxth	r3, r3
     9d2:	2b00      	cmp	r3, #0
     9d4:	d101      	bne.n	9da <_spi_interrupt_handler+0x10e>
						= SPI_INTERRUPT_FLAG_DATA_REGISTER_EMPTY;
     9d6:	3301      	adds	r3, #1
     9d8:	7533      	strb	r3, [r6, #20]
		|| ((module->mode == SPI_MODE_MASTER) &&
     9da:	7963      	ldrb	r3, [r4, #5]
		if (0
     9dc:	2b01      	cmp	r3, #1
     9de:	d0b0      	beq.n	942 <_spi_interrupt_handler+0x76>
     9e0:	e786      	b.n	8f0 <_spi_interrupt_handler+0x24>
		data_to_send |= ((*(module->tx_buffer_ptr)) << 8);
     9e2:	7850      	ldrb	r0, [r2, #1]
     9e4:	0200      	lsls	r0, r0, #8
     9e6:	4303      	orrs	r3, r0
		(module->tx_buffer_ptr)++;
     9e8:	3202      	adds	r2, #2
     9ea:	62e2      	str	r2, [r4, #44]	; 0x2c
     9ec:	e790      	b.n	910 <_spi_interrupt_handler+0x44>
					(module->callback[SPI_CALLBACK_ERROR])(module);
     9ee:	0020      	movs	r0, r4
     9f0:	69a3      	ldr	r3, [r4, #24]
     9f2:	4798      	blx	r3
     9f4:	e7b9      	b.n	96a <_spi_interrupt_handler+0x9e>
			if (module->dir == SPI_DIRECTION_WRITE) {
     9f6:	7a63      	ldrb	r3, [r4, #9]
     9f8:	2b01      	cmp	r3, #1
     9fa:	d027      	beq.n	a4c <_spi_interrupt_handler+0x180>
	SercomSpi *const spi_hw = &(module->hw->SPI);
     9fc:	6823      	ldr	r3, [r4, #0]
	uint16_t received_data = (spi_hw->DATA.reg & SERCOM_SPI_DATA_MASK);
     9fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
     a00:	05db      	lsls	r3, r3, #23
     a02:	0ddb      	lsrs	r3, r3, #23
	*(module->rx_buffer_ptr) = received_data;
     a04:	b2da      	uxtb	r2, r3
     a06:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     a08:	700a      	strb	r2, [r1, #0]
	module->rx_buffer_ptr += 1;
     a0a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
     a0c:	1c51      	adds	r1, r2, #1
     a0e:	62a1      	str	r1, [r4, #40]	; 0x28
	if(module->character_size == SPI_CHARACTER_SIZE_9BIT) {
     a10:	79a1      	ldrb	r1, [r4, #6]
     a12:	2901      	cmp	r1, #1
     a14:	d033      	beq.n	a7e <_spi_interrupt_handler+0x1b2>
	module->remaining_rx_buffer_length--;
     a16:	8e23      	ldrh	r3, [r4, #48]	; 0x30
     a18:	3b01      	subs	r3, #1
     a1a:	b29b      	uxth	r3, r3
     a1c:	8623      	strh	r3, [r4, #48]	; 0x30
				if (module->remaining_rx_buffer_length == 0) {
     a1e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
     a20:	b29b      	uxth	r3, r3
     a22:	2b00      	cmp	r3, #0
     a24:	d1a4      	bne.n	970 <_spi_interrupt_handler+0xa4>
					module->status = STATUS_OK;
     a26:	2200      	movs	r2, #0
     a28:	3338      	adds	r3, #56	; 0x38
     a2a:	54e2      	strb	r2, [r4, r3]
					spi_hw->INTENCLR.reg = SPI_INTERRUPT_FLAG_RX_COMPLETE;
     a2c:	3b34      	subs	r3, #52	; 0x34
     a2e:	7533      	strb	r3, [r6, #20]
					if(module->dir == SPI_DIRECTION_BOTH) {
     a30:	7a63      	ldrb	r3, [r4, #9]
     a32:	2b02      	cmp	r3, #2
     a34:	d029      	beq.n	a8a <_spi_interrupt_handler+0x1be>
					} else if (module->dir == SPI_DIRECTION_READ) {
     a36:	7a63      	ldrb	r3, [r4, #9]
     a38:	2b00      	cmp	r3, #0
     a3a:	d000      	beq.n	a3e <_spi_interrupt_handler+0x172>
     a3c:	e798      	b.n	970 <_spi_interrupt_handler+0xa4>
						if (callback_mask & (1 << SPI_CALLBACK_BUFFER_RECEIVED)) {
     a3e:	07bb      	lsls	r3, r7, #30
     a40:	d400      	bmi.n	a44 <_spi_interrupt_handler+0x178>
     a42:	e795      	b.n	970 <_spi_interrupt_handler+0xa4>
							(module->callback[SPI_CALLBACK_BUFFER_RECEIVED])(module);
     a44:	0020      	movs	r0, r4
     a46:	6923      	ldr	r3, [r4, #16]
     a48:	4798      	blx	r3
     a4a:	e791      	b.n	970 <_spi_interrupt_handler+0xa4>
	SercomSpi *const spi_hw = &(module->hw->SPI);
     a4c:	6823      	ldr	r3, [r4, #0]
	flush = spi_hw->DATA.reg;
     a4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
	module->remaining_dummy_buffer_length--;
     a50:	8e63      	ldrh	r3, [r4, #50]	; 0x32
     a52:	3b01      	subs	r3, #1
     a54:	b29b      	uxth	r3, r3
     a56:	8663      	strh	r3, [r4, #50]	; 0x32
				if (module->remaining_dummy_buffer_length == 0) {
     a58:	8e63      	ldrh	r3, [r4, #50]	; 0x32
     a5a:	b29b      	uxth	r3, r3
     a5c:	2b00      	cmp	r3, #0
     a5e:	d000      	beq.n	a62 <_spi_interrupt_handler+0x196>
     a60:	e786      	b.n	970 <_spi_interrupt_handler+0xa4>
					spi_hw->INTENCLR.reg = SPI_INTERRUPT_FLAG_RX_COMPLETE;
     a62:	3304      	adds	r3, #4
     a64:	7533      	strb	r3, [r6, #20]
					module->status = STATUS_OK;
     a66:	2200      	movs	r2, #0
     a68:	3334      	adds	r3, #52	; 0x34
     a6a:	54e2      	strb	r2, [r4, r3]
					module->dir = SPI_DIRECTION_IDLE;
     a6c:	3b35      	subs	r3, #53	; 0x35
     a6e:	7263      	strb	r3, [r4, #9]
					if (callback_mask &
     a70:	07fb      	lsls	r3, r7, #31
     a72:	d400      	bmi.n	a76 <_spi_interrupt_handler+0x1aa>
     a74:	e77c      	b.n	970 <_spi_interrupt_handler+0xa4>
						(module->callback[SPI_CALLBACK_BUFFER_TRANSMITTED])(module);
     a76:	0020      	movs	r0, r4
     a78:	68e3      	ldr	r3, [r4, #12]
     a7a:	4798      	blx	r3
     a7c:	e778      	b.n	970 <_spi_interrupt_handler+0xa4>
		*(module->rx_buffer_ptr) = (received_data >> 8);
     a7e:	0a1b      	lsrs	r3, r3, #8
     a80:	7053      	strb	r3, [r2, #1]
		module->rx_buffer_ptr += 1;
     a82:	6aa3      	ldr	r3, [r4, #40]	; 0x28
     a84:	3301      	adds	r3, #1
     a86:	62a3      	str	r3, [r4, #40]	; 0x28
     a88:	e7c5      	b.n	a16 <_spi_interrupt_handler+0x14a>
						if (callback_mask & (1 << SPI_CALLBACK_BUFFER_TRANSCEIVED)) {
     a8a:	077b      	lsls	r3, r7, #29
     a8c:	d400      	bmi.n	a90 <_spi_interrupt_handler+0x1c4>
     a8e:	e76f      	b.n	970 <_spi_interrupt_handler+0xa4>
							(module->callback[SPI_CALLBACK_BUFFER_TRANSCEIVED])(module);
     a90:	0020      	movs	r0, r4
     a92:	6963      	ldr	r3, [r4, #20]
     a94:	4798      	blx	r3
     a96:	e76b      	b.n	970 <_spi_interrupt_handler+0xa4>
			(module->callback[SPI_CALLBACK_SLAVE_TRANSMISSION_COMPLETE])
     a98:	0020      	movs	r0, r4
     a9a:	69e3      	ldr	r3, [r4, #28]
     a9c:	4798      	blx	r3
     a9e:	e77b      	b.n	998 <_spi_interrupt_handler+0xcc>
			(module->dir == SPI_DIRECTION_WRITE) && !(module->receiver_enabled)) {
     aa0:	7a63      	ldrb	r3, [r4, #9]
		if ((module->mode == SPI_MODE_MASTER) &&
     aa2:	2b01      	cmp	r3, #1
     aa4:	d000      	beq.n	aa8 <_spi_interrupt_handler+0x1dc>
     aa6:	e786      	b.n	9b6 <_spi_interrupt_handler+0xea>
			(module->dir == SPI_DIRECTION_WRITE) && !(module->receiver_enabled)) {
     aa8:	79e3      	ldrb	r3, [r4, #7]
     aaa:	2b00      	cmp	r3, #0
     aac:	d000      	beq.n	ab0 <_spi_interrupt_handler+0x1e4>
     aae:	e782      	b.n	9b6 <_spi_interrupt_handler+0xea>
					= SPI_INTERRUPT_FLAG_TX_COMPLETE;
     ab0:	3302      	adds	r3, #2
     ab2:	7533      	strb	r3, [r6, #20]
			module->dir = SPI_DIRECTION_IDLE;
     ab4:	3301      	adds	r3, #1
     ab6:	7263      	strb	r3, [r4, #9]
			module->status = STATUS_OK;
     ab8:	2200      	movs	r2, #0
     aba:	3335      	adds	r3, #53	; 0x35
     abc:	54e2      	strb	r2, [r4, r3]
			if (callback_mask & (1 << SPI_CALLBACK_BUFFER_TRANSMITTED)){
     abe:	07fb      	lsls	r3, r7, #31
     ac0:	d400      	bmi.n	ac4 <_spi_interrupt_handler+0x1f8>
     ac2:	e76d      	b.n	9a0 <_spi_interrupt_handler+0xd4>
				(module->callback[SPI_CALLBACK_BUFFER_TRANSMITTED])
     ac4:	0020      	movs	r0, r4
     ac6:	68e3      	ldr	r3, [r4, #12]
     ac8:	4798      	blx	r3
     aca:	e769      	b.n	9a0 <_spi_interrupt_handler+0xd4>
					(module->callback[SPI_CALLBACK_SLAVE_SELECT_LOW])(module);
     acc:	0020      	movs	r0, r4
     ace:	6a23      	ldr	r3, [r4, #32]
     ad0:	4798      	blx	r3
     ad2:	e770      	b.n	9b6 <_spi_interrupt_handler+0xea>
		spi_hw->INTENCLR.reg = SPI_INTERRUPT_FLAG_COMBINED_ERROR;
     ad4:	2380      	movs	r3, #128	; 0x80
     ad6:	7533      	strb	r3, [r6, #20]
		spi_hw->INTFLAG.reg = SPI_INTERRUPT_FLAG_COMBINED_ERROR;
     ad8:	7633      	strb	r3, [r6, #24]
		if (callback_mask & (1 << SPI_CALLBACK_COMBINED_ERROR)) {
     ada:	067b      	lsls	r3, r7, #25
     adc:	d400      	bmi.n	ae0 <_spi_interrupt_handler+0x214>
     ade:	e76e      	b.n	9be <_spi_interrupt_handler+0xf2>
			(module->callback[SPI_CALLBACK_COMBINED_ERROR])(module);
     ae0:	6a63      	ldr	r3, [r4, #36]	; 0x24
     ae2:	0020      	movs	r0, r4
     ae4:	4798      	blx	r3
}
     ae6:	e76a      	b.n	9be <_spi_interrupt_handler+0xf2>
     ae8:	20000a54 	.word	0x20000a54
     aec:	20000a6c 	.word	0x20000a6c

00000af0 <usart_init>:
 */
enum status_code usart_init(
		struct usart_module *const module,
		Sercom *const hw,
		const struct usart_config *const config)
{
     af0:	b5f0      	push	{r4, r5, r6, r7, lr}
     af2:	46de      	mov	lr, fp
     af4:	4657      	mov	r7, sl
     af6:	464e      	mov	r6, r9
     af8:	4645      	mov	r5, r8
     afa:	b5e0      	push	{r5, r6, r7, lr}
     afc:	b091      	sub	sp, #68	; 0x44
     afe:	0005      	movs	r5, r0
     b00:	000c      	movs	r4, r1
     b02:	0016      	movs	r6, r2
	Assert(config);

	enum status_code status_code = STATUS_OK;

	/* Assign module pointer to software instance struct */
	module->hw = hw;
     b04:	6029      	str	r1, [r5, #0]

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     b06:	0008      	movs	r0, r1
     b08:	4bbc      	ldr	r3, [pc, #752]	; (dfc <usart_init+0x30c>)
     b0a:	4798      	blx	r3
     b0c:	0002      	movs	r2, r0
#else
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
#endif

	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
     b0e:	6823      	ldr	r3, [r4, #0]
		/* The module is busy resetting itself */
		return STATUS_BUSY;
     b10:	2005      	movs	r0, #5
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
     b12:	07db      	lsls	r3, r3, #31
     b14:	d506      	bpl.n	b24 <usart_init+0x34>
	_sercom_set_handler(instance_index, _usart_interrupt_handler);
	_sercom_instances[instance_index] = module;
#endif

	return status_code;
}
     b16:	b011      	add	sp, #68	; 0x44
     b18:	bc3c      	pop	{r2, r3, r4, r5}
     b1a:	4690      	mov	r8, r2
     b1c:	4699      	mov	r9, r3
     b1e:	46a2      	mov	sl, r4
     b20:	46ab      	mov	fp, r5
     b22:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
     b24:	6823      	ldr	r3, [r4, #0]
		return STATUS_ERR_DENIED;
     b26:	3017      	adds	r0, #23
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
     b28:	079b      	lsls	r3, r3, #30
     b2a:	d4f4      	bmi.n	b16 <usart_init+0x26>
     b2c:	49b4      	ldr	r1, [pc, #720]	; (e00 <usart_init+0x310>)
     b2e:	6a08      	ldr	r0, [r1, #32]
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
     b30:	1c97      	adds	r7, r2, #2
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
     b32:	2301      	movs	r3, #1
     b34:	40bb      	lsls	r3, r7
     b36:	4303      	orrs	r3, r0
     b38:	620b      	str	r3, [r1, #32]
	gclk_chan_conf.source_generator = config->generator_source;
     b3a:	a90f      	add	r1, sp, #60	; 0x3c
     b3c:	272d      	movs	r7, #45	; 0x2d
     b3e:	5df3      	ldrb	r3, [r6, r7]
     b40:	700b      	strb	r3, [r1, #0]
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     b42:	3214      	adds	r2, #20
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
     b44:	b2d3      	uxtb	r3, r2
     b46:	9302      	str	r3, [sp, #8]
     b48:	0018      	movs	r0, r3
     b4a:	4bae      	ldr	r3, [pc, #696]	; (e04 <usart_init+0x314>)
     b4c:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
     b4e:	9802      	ldr	r0, [sp, #8]
     b50:	4bad      	ldr	r3, [pc, #692]	; (e08 <usart_init+0x318>)
     b52:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
     b54:	5df0      	ldrb	r0, [r6, r7]
     b56:	2100      	movs	r1, #0
     b58:	4bac      	ldr	r3, [pc, #688]	; (e0c <usart_init+0x31c>)
     b5a:	4798      	blx	r3
	module->character_size = config->character_size;
     b5c:	7af3      	ldrb	r3, [r6, #11]
     b5e:	716b      	strb	r3, [r5, #5]
	module->receiver_enabled = config->receiver_enable;
     b60:	2324      	movs	r3, #36	; 0x24
     b62:	5cf3      	ldrb	r3, [r6, r3]
     b64:	71ab      	strb	r3, [r5, #6]
	module->transmitter_enabled = config->transmitter_enable;
     b66:	2325      	movs	r3, #37	; 0x25
     b68:	5cf3      	ldrb	r3, [r6, r3]
     b6a:	71eb      	strb	r3, [r5, #7]
	module->lin_slave_enabled = config->lin_slave_enable;
     b6c:	7ef3      	ldrb	r3, [r6, #27]
     b6e:	722b      	strb	r3, [r5, #8]
	module->start_frame_detection_enabled = config->start_frame_detection_enable;
     b70:	7f33      	ldrb	r3, [r6, #28]
     b72:	726b      	strb	r3, [r5, #9]
	SercomUsart *const usart_hw = &(module->hw->USART);
     b74:	682b      	ldr	r3, [r5, #0]
     b76:	4698      	mov	r8, r3
	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     b78:	0018      	movs	r0, r3
     b7a:	4ba0      	ldr	r3, [pc, #640]	; (dfc <usart_init+0x30c>)
     b7c:	4798      	blx	r3
	uint32_t gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     b7e:	3014      	adds	r0, #20
	uint16_t baud  = 0;
     b80:	2200      	movs	r2, #0
     b82:	230e      	movs	r3, #14
     b84:	a906      	add	r1, sp, #24
     b86:	468c      	mov	ip, r1
     b88:	4463      	add	r3, ip
     b8a:	801a      	strh	r2, [r3, #0]
	switch (config->sample_rate) {
     b8c:	8a32      	ldrh	r2, [r6, #16]
     b8e:	9202      	str	r2, [sp, #8]
     b90:	2380      	movs	r3, #128	; 0x80
     b92:	01db      	lsls	r3, r3, #7
     b94:	429a      	cmp	r2, r3
     b96:	d100      	bne.n	b9a <usart_init+0xaa>
     b98:	e09e      	b.n	cd8 <usart_init+0x1e8>
     b9a:	d90f      	bls.n	bbc <usart_init+0xcc>
     b9c:	23c0      	movs	r3, #192	; 0xc0
     b9e:	01db      	lsls	r3, r3, #7
     ba0:	9a02      	ldr	r2, [sp, #8]
     ba2:	429a      	cmp	r2, r3
     ba4:	d100      	bne.n	ba8 <usart_init+0xb8>
     ba6:	e092      	b.n	cce <usart_init+0x1de>
     ba8:	2380      	movs	r3, #128	; 0x80
     baa:	021b      	lsls	r3, r3, #8
     bac:	429a      	cmp	r2, r3
     bae:	d000      	beq.n	bb2 <usart_init+0xc2>
     bb0:	e11f      	b.n	df2 <usart_init+0x302>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_3;
     bb2:	2303      	movs	r3, #3
     bb4:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     bb6:	2300      	movs	r3, #0
     bb8:	9307      	str	r3, [sp, #28]
     bba:	e008      	b.n	bce <usart_init+0xde>
	switch (config->sample_rate) {
     bbc:	2380      	movs	r3, #128	; 0x80
     bbe:	019b      	lsls	r3, r3, #6
     bc0:	429a      	cmp	r2, r3
     bc2:	d000      	beq.n	bc6 <usart_init+0xd6>
     bc4:	e115      	b.n	df2 <usart_init+0x302>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
     bc6:	2310      	movs	r3, #16
     bc8:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
     bca:	3b0f      	subs	r3, #15
     bcc:	9307      	str	r3, [sp, #28]
	ctrla = (uint32_t)config->data_order |
     bce:	6833      	ldr	r3, [r6, #0]
     bd0:	9305      	str	r3, [sp, #20]
		(uint32_t)config->mux_setting |
     bd2:	68f3      	ldr	r3, [r6, #12]
     bd4:	9303      	str	r3, [sp, #12]
		config->sample_adjustment |
     bd6:	6973      	ldr	r3, [r6, #20]
     bd8:	9304      	str	r3, [sp, #16]
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     bda:	7e33      	ldrb	r3, [r6, #24]
     bdc:	469b      	mov	fp, r3
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     bde:	2326      	movs	r3, #38	; 0x26
     be0:	5cf3      	ldrb	r3, [r6, r3]
     be2:	469a      	mov	sl, r3
	transfer_mode = (uint32_t)config->transfer_mode;
     be4:	6873      	ldr	r3, [r6, #4]
     be6:	4699      	mov	r9, r3
	switch (transfer_mode)
     be8:	2b00      	cmp	r3, #0
     bea:	d100      	bne.n	bee <usart_init+0xfe>
     bec:	e0a0      	b.n	d30 <usart_init+0x240>
     bee:	2380      	movs	r3, #128	; 0x80
     bf0:	055b      	lsls	r3, r3, #21
     bf2:	4599      	cmp	r9, r3
     bf4:	d100      	bne.n	bf8 <usart_init+0x108>
     bf6:	e084      	b.n	d02 <usart_init+0x212>
	if(config->encoding_format_enable) {
     bf8:	7e73      	ldrb	r3, [r6, #25]
     bfa:	2b00      	cmp	r3, #0
     bfc:	d002      	beq.n	c04 <usart_init+0x114>
		usart_hw->RXPL.reg = config->receive_pulse_length;
     bfe:	7eb3      	ldrb	r3, [r6, #26]
     c00:	4642      	mov	r2, r8
     c02:	7393      	strb	r3, [r2, #14]
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomUsart *const usart_hw = &(module->hw->USART);
     c04:	682a      	ldr	r2, [r5, #0]
     c06:	9f02      	ldr	r7, [sp, #8]

#ifdef FEATURE_USART_SYNC_SCHEME_V2
	return (usart_hw->SYNCBUSY.reg);
     c08:	69d3      	ldr	r3, [r2, #28]
		const struct usart_module *const module)
{
	/* Sanity check */
	Assert(module);

	while (usart_is_syncing(module)) {
     c0a:	2b00      	cmp	r3, #0
     c0c:	d1fc      	bne.n	c08 <usart_init+0x118>
	usart_hw->BAUD.reg = baud;
     c0e:	330e      	adds	r3, #14
     c10:	aa06      	add	r2, sp, #24
     c12:	4694      	mov	ip, r2
     c14:	4463      	add	r3, ip
     c16:	881b      	ldrh	r3, [r3, #0]
     c18:	4642      	mov	r2, r8
     c1a:	8193      	strh	r3, [r2, #12]
	ctrla |= transfer_mode;
     c1c:	9b05      	ldr	r3, [sp, #20]
     c1e:	9a03      	ldr	r2, [sp, #12]
     c20:	4313      	orrs	r3, r2
     c22:	9a04      	ldr	r2, [sp, #16]
     c24:	4313      	orrs	r3, r2
     c26:	464a      	mov	r2, r9
     c28:	4313      	orrs	r3, r2
     c2a:	431f      	orrs	r7, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     c2c:	465b      	mov	r3, fp
     c2e:	021b      	lsls	r3, r3, #8
	ctrla |= transfer_mode;
     c30:	431f      	orrs	r7, r3
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     c32:	4653      	mov	r3, sl
     c34:	075b      	lsls	r3, r3, #29
	ctrla |= transfer_mode;
     c36:	431f      	orrs	r7, r3
	if (config->use_external_clock == false) {
     c38:	2327      	movs	r3, #39	; 0x27
     c3a:	5cf3      	ldrb	r3, [r6, r3]
     c3c:	2b00      	cmp	r3, #0
     c3e:	d101      	bne.n	c44 <usart_init+0x154>
		ctrla |= SERCOM_USART_CTRLA_MODE(0x1);
     c40:	3304      	adds	r3, #4
     c42:	431f      	orrs	r7, r3
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
     c44:	7e73      	ldrb	r3, [r6, #25]
     c46:	029b      	lsls	r3, r3, #10
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
     c48:	7f32      	ldrb	r2, [r6, #28]
     c4a:	0252      	lsls	r2, r2, #9
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
     c4c:	4313      	orrs	r3, r2
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
     c4e:	7f72      	ldrb	r2, [r6, #29]
     c50:	0212      	lsls	r2, r2, #8
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
     c52:	4313      	orrs	r3, r2
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
     c54:	2224      	movs	r2, #36	; 0x24
     c56:	5cb2      	ldrb	r2, [r6, r2]
     c58:	0452      	lsls	r2, r2, #17
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
     c5a:	4313      	orrs	r3, r2
			(config->transmitter_enable << SERCOM_USART_CTRLB_TXEN_Pos);
     c5c:	2225      	movs	r2, #37	; 0x25
     c5e:	5cb2      	ldrb	r2, [r6, r2]
     c60:	0412      	lsls	r2, r2, #16
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
     c62:	4313      	orrs	r3, r2
	ctrlb |= (uint32_t)config->character_size;
     c64:	7ab1      	ldrb	r1, [r6, #10]
     c66:	7af2      	ldrb	r2, [r6, #11]
     c68:	4311      	orrs	r1, r2
     c6a:	4319      	orrs	r1, r3
	if (config->parity != USART_PARITY_NONE) {
     c6c:	8933      	ldrh	r3, [r6, #8]
     c6e:	2bff      	cmp	r3, #255	; 0xff
     c70:	d100      	bne.n	c74 <usart_init+0x184>
     c72:	e081      	b.n	d78 <usart_init+0x288>
		ctrla |= SERCOM_USART_CTRLA_FORM(1);
     c74:	2280      	movs	r2, #128	; 0x80
     c76:	0452      	lsls	r2, r2, #17
     c78:	4317      	orrs	r7, r2
		ctrlb |= config->parity;
     c7a:	4319      	orrs	r1, r3
	if (config->run_in_standby || system_is_debugger_present()) {
     c7c:	232c      	movs	r3, #44	; 0x2c
     c7e:	5cf3      	ldrb	r3, [r6, r3]
     c80:	2b00      	cmp	r3, #0
     c82:	d103      	bne.n	c8c <usart_init+0x19c>
     c84:	4b62      	ldr	r3, [pc, #392]	; (e10 <usart_init+0x320>)
     c86:	789b      	ldrb	r3, [r3, #2]
     c88:	079b      	lsls	r3, r3, #30
     c8a:	d501      	bpl.n	c90 <usart_init+0x1a0>
		ctrla |= SERCOM_USART_CTRLA_RUNSTDBY;
     c8c:	2380      	movs	r3, #128	; 0x80
     c8e:	431f      	orrs	r7, r3
	SercomUsart *const usart_hw = &(module->hw->USART);
     c90:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
     c92:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
     c94:	2b00      	cmp	r3, #0
     c96:	d1fc      	bne.n	c92 <usart_init+0x1a2>
	usart_hw->CTRLB.reg = ctrlb;
     c98:	4643      	mov	r3, r8
     c9a:	6059      	str	r1, [r3, #4]
	SercomUsart *const usart_hw = &(module->hw->USART);
     c9c:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
     c9e:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
     ca0:	2b00      	cmp	r3, #0
     ca2:	d1fc      	bne.n	c9e <usart_init+0x1ae>
	usart_hw->CTRLA.reg = ctrla;
     ca4:	4643      	mov	r3, r8
     ca6:	601f      	str	r7, [r3, #0]
	config->mux_position = SYSTEM_PINMUX_GPIO;
     ca8:	ab0e      	add	r3, sp, #56	; 0x38
     caa:	2280      	movs	r2, #128	; 0x80
     cac:	701a      	strb	r2, [r3, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     cae:	2200      	movs	r2, #0
     cb0:	705a      	strb	r2, [r3, #1]
	config->powersave    = false;
     cb2:	70da      	strb	r2, [r3, #3]
	pin_conf.input_pull = SYSTEM_PINMUX_PIN_PULL_NONE;
     cb4:	709a      	strb	r2, [r3, #2]
	uint32_t pad_pinmuxes[] = {
     cb6:	6b33      	ldr	r3, [r6, #48]	; 0x30
     cb8:	930a      	str	r3, [sp, #40]	; 0x28
     cba:	6b73      	ldr	r3, [r6, #52]	; 0x34
     cbc:	930b      	str	r3, [sp, #44]	; 0x2c
     cbe:	6bb3      	ldr	r3, [r6, #56]	; 0x38
     cc0:	930c      	str	r3, [sp, #48]	; 0x30
     cc2:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
     cc4:	9302      	str	r3, [sp, #8]
     cc6:	930d      	str	r3, [sp, #52]	; 0x34
     cc8:	2700      	movs	r7, #0
		uint32_t current_pinmux = pad_pinmuxes[pad];
     cca:	ae0a      	add	r6, sp, #40	; 0x28
     ccc:	e063      	b.n	d96 <usart_init+0x2a6>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
     cce:	2308      	movs	r3, #8
     cd0:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
     cd2:	3b07      	subs	r3, #7
     cd4:	9307      	str	r3, [sp, #28]
     cd6:	e77a      	b.n	bce <usart_init+0xde>
	ctrla = (uint32_t)config->data_order |
     cd8:	6833      	ldr	r3, [r6, #0]
     cda:	9305      	str	r3, [sp, #20]
		(uint32_t)config->mux_setting |
     cdc:	68f3      	ldr	r3, [r6, #12]
     cde:	9303      	str	r3, [sp, #12]
		config->sample_adjustment |
     ce0:	6973      	ldr	r3, [r6, #20]
     ce2:	9304      	str	r3, [sp, #16]
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     ce4:	7e33      	ldrb	r3, [r6, #24]
     ce6:	469b      	mov	fp, r3
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     ce8:	2326      	movs	r3, #38	; 0x26
     cea:	5cf3      	ldrb	r3, [r6, r3]
     cec:	469a      	mov	sl, r3
	transfer_mode = (uint32_t)config->transfer_mode;
     cee:	6873      	ldr	r3, [r6, #4]
     cf0:	4699      	mov	r9, r3
	switch (transfer_mode)
     cf2:	2b00      	cmp	r3, #0
     cf4:	d018      	beq.n	d28 <usart_init+0x238>
     cf6:	2380      	movs	r3, #128	; 0x80
     cf8:	055b      	lsls	r3, r3, #21
     cfa:	4599      	cmp	r9, r3
     cfc:	d001      	beq.n	d02 <usart_init+0x212>
	enum status_code status_code = STATUS_OK;
     cfe:	2000      	movs	r0, #0
     d00:	e025      	b.n	d4e <usart_init+0x25e>
			if (!config->use_external_clock) {
     d02:	2327      	movs	r3, #39	; 0x27
     d04:	5cf3      	ldrb	r3, [r6, r3]
     d06:	2b00      	cmp	r3, #0
     d08:	d000      	beq.n	d0c <usart_init+0x21c>
     d0a:	e775      	b.n	bf8 <usart_init+0x108>
				status_code = _sercom_get_sync_baud_val(config->baudrate,
     d0c:	6a33      	ldr	r3, [r6, #32]
     d0e:	001f      	movs	r7, r3
     d10:	b2c0      	uxtb	r0, r0
     d12:	4b40      	ldr	r3, [pc, #256]	; (e14 <usart_init+0x324>)
     d14:	4798      	blx	r3
     d16:	0001      	movs	r1, r0
     d18:	220e      	movs	r2, #14
     d1a:	ab06      	add	r3, sp, #24
     d1c:	469c      	mov	ip, r3
     d1e:	4462      	add	r2, ip
     d20:	0038      	movs	r0, r7
     d22:	4b3d      	ldr	r3, [pc, #244]	; (e18 <usart_init+0x328>)
     d24:	4798      	blx	r3
     d26:	e012      	b.n	d4e <usart_init+0x25e>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
     d28:	2308      	movs	r3, #8
     d2a:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     d2c:	2300      	movs	r3, #0
     d2e:	9307      	str	r3, [sp, #28]
			if (config->use_external_clock) {
     d30:	2327      	movs	r3, #39	; 0x27
     d32:	5cf3      	ldrb	r3, [r6, r3]
     d34:	2b00      	cmp	r3, #0
     d36:	d00e      	beq.n	d56 <usart_init+0x266>
				status_code =
     d38:	9b06      	ldr	r3, [sp, #24]
     d3a:	9300      	str	r3, [sp, #0]
     d3c:	9b07      	ldr	r3, [sp, #28]
     d3e:	220e      	movs	r2, #14
     d40:	a906      	add	r1, sp, #24
     d42:	468c      	mov	ip, r1
     d44:	4462      	add	r2, ip
     d46:	6ab1      	ldr	r1, [r6, #40]	; 0x28
     d48:	6a30      	ldr	r0, [r6, #32]
     d4a:	4f34      	ldr	r7, [pc, #208]	; (e1c <usart_init+0x32c>)
     d4c:	47b8      	blx	r7
	if (status_code != STATUS_OK) {
     d4e:	2800      	cmp	r0, #0
     d50:	d000      	beq.n	d54 <usart_init+0x264>
     d52:	e6e0      	b.n	b16 <usart_init+0x26>
     d54:	e750      	b.n	bf8 <usart_init+0x108>
						_sercom_get_async_baud_val(config->baudrate,
     d56:	6a33      	ldr	r3, [r6, #32]
     d58:	001f      	movs	r7, r3
     d5a:	b2c0      	uxtb	r0, r0
     d5c:	4b2d      	ldr	r3, [pc, #180]	; (e14 <usart_init+0x324>)
     d5e:	4798      	blx	r3
     d60:	0001      	movs	r1, r0
				status_code =
     d62:	9b06      	ldr	r3, [sp, #24]
     d64:	9300      	str	r3, [sp, #0]
     d66:	9b07      	ldr	r3, [sp, #28]
     d68:	220e      	movs	r2, #14
     d6a:	a806      	add	r0, sp, #24
     d6c:	4684      	mov	ip, r0
     d6e:	4462      	add	r2, ip
     d70:	0038      	movs	r0, r7
     d72:	4f2a      	ldr	r7, [pc, #168]	; (e1c <usart_init+0x32c>)
     d74:	47b8      	blx	r7
     d76:	e7ea      	b.n	d4e <usart_init+0x25e>
		if(config->lin_slave_enable) {
     d78:	7ef3      	ldrb	r3, [r6, #27]
     d7a:	2b00      	cmp	r3, #0
     d7c:	d100      	bne.n	d80 <usart_init+0x290>
     d7e:	e77d      	b.n	c7c <usart_init+0x18c>
			ctrla |= SERCOM_USART_CTRLA_FORM(0x4);
     d80:	2380      	movs	r3, #128	; 0x80
     d82:	04db      	lsls	r3, r3, #19
     d84:	431f      	orrs	r7, r3
     d86:	e779      	b.n	c7c <usart_init+0x18c>
			current_pinmux = _sercom_get_default_pad(hw, pad);
     d88:	0020      	movs	r0, r4
     d8a:	4b25      	ldr	r3, [pc, #148]	; (e20 <usart_init+0x330>)
     d8c:	4798      	blx	r3
     d8e:	e007      	b.n	da0 <usart_init+0x2b0>
     d90:	3701      	adds	r7, #1
	for (uint8_t pad = 0; pad < 4; pad++) {
     d92:	2f04      	cmp	r7, #4
     d94:	d00d      	beq.n	db2 <usart_init+0x2c2>
     d96:	b2f9      	uxtb	r1, r7
		uint32_t current_pinmux = pad_pinmuxes[pad];
     d98:	00bb      	lsls	r3, r7, #2
     d9a:	5998      	ldr	r0, [r3, r6]
		if (current_pinmux == PINMUX_DEFAULT) {
     d9c:	2800      	cmp	r0, #0
     d9e:	d0f3      	beq.n	d88 <usart_init+0x298>
		if (current_pinmux != PINMUX_UNUSED) {
     da0:	1c43      	adds	r3, r0, #1
     da2:	d0f5      	beq.n	d90 <usart_init+0x2a0>
			pin_conf.mux_position = current_pinmux & 0xFFFF;
     da4:	a90e      	add	r1, sp, #56	; 0x38
     da6:	7008      	strb	r0, [r1, #0]
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
     da8:	0c00      	lsrs	r0, r0, #16
     daa:	b2c0      	uxtb	r0, r0
     dac:	4b1d      	ldr	r3, [pc, #116]	; (e24 <usart_init+0x334>)
     dae:	4798      	blx	r3
     db0:	e7ee      	b.n	d90 <usart_init+0x2a0>
		module->callback[i]            = NULL;
     db2:	2300      	movs	r3, #0
     db4:	60eb      	str	r3, [r5, #12]
     db6:	612b      	str	r3, [r5, #16]
     db8:	616b      	str	r3, [r5, #20]
     dba:	61ab      	str	r3, [r5, #24]
     dbc:	61eb      	str	r3, [r5, #28]
     dbe:	622b      	str	r3, [r5, #32]
	module->tx_buffer_ptr              = NULL;
     dc0:	62ab      	str	r3, [r5, #40]	; 0x28
	module->rx_buffer_ptr              = NULL;
     dc2:	626b      	str	r3, [r5, #36]	; 0x24
	module->remaining_tx_buffer_length = 0x0000;
     dc4:	2200      	movs	r2, #0
     dc6:	85eb      	strh	r3, [r5, #46]	; 0x2e
	module->remaining_rx_buffer_length = 0x0000;
     dc8:	85ab      	strh	r3, [r5, #44]	; 0x2c
	module->callback_reg_mask          = 0x00;
     dca:	3330      	adds	r3, #48	; 0x30
     dcc:	54ea      	strb	r2, [r5, r3]
	module->callback_enable_mask       = 0x00;
     dce:	3301      	adds	r3, #1
     dd0:	54ea      	strb	r2, [r5, r3]
	module->rx_status                  = STATUS_OK;
     dd2:	3301      	adds	r3, #1
     dd4:	54ea      	strb	r2, [r5, r3]
	module->tx_status                  = STATUS_OK;
     dd6:	3301      	adds	r3, #1
     dd8:	54ea      	strb	r2, [r5, r3]
	uint8_t instance_index = _sercom_get_sercom_inst_index(module->hw);
     dda:	6828      	ldr	r0, [r5, #0]
     ddc:	4b07      	ldr	r3, [pc, #28]	; (dfc <usart_init+0x30c>)
     dde:	4798      	blx	r3
     de0:	0004      	movs	r4, r0
	_sercom_set_handler(instance_index, _usart_interrupt_handler);
     de2:	4911      	ldr	r1, [pc, #68]	; (e28 <usart_init+0x338>)
     de4:	4b11      	ldr	r3, [pc, #68]	; (e2c <usart_init+0x33c>)
     de6:	4798      	blx	r3
	_sercom_instances[instance_index] = module;
     de8:	00a4      	lsls	r4, r4, #2
     dea:	4b11      	ldr	r3, [pc, #68]	; (e30 <usart_init+0x340>)
     dec:	50e5      	str	r5, [r4, r3]
	return status_code;
     dee:	2000      	movs	r0, #0
     df0:	e691      	b.n	b16 <usart_init+0x26>
	enum sercom_asynchronous_sample_num sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
     df2:	2310      	movs	r3, #16
     df4:	9306      	str	r3, [sp, #24]
	enum sercom_asynchronous_operation_mode mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     df6:	2300      	movs	r3, #0
     df8:	9307      	str	r3, [sp, #28]
     dfa:	e6e8      	b.n	bce <usart_init+0xde>
     dfc:	00000495 	.word	0x00000495
     e00:	40000400 	.word	0x40000400
     e04:	00001a11 	.word	0x00001a11
     e08:	00001985 	.word	0x00001985
     e0c:	000002d1 	.word	0x000002d1
     e10:	41002000 	.word	0x41002000
     e14:	00001a2d 	.word	0x00001a2d
     e18:	00000213 	.word	0x00000213
     e1c:	0000023d 	.word	0x0000023d
     e20:	0000031d 	.word	0x0000031d
     e24:	00001b09 	.word	0x00001b09
     e28:	00000f39 	.word	0x00000f39
     e2c:	000004d1 	.word	0x000004d1
     e30:	20000a54 	.word	0x20000a54

00000e34 <usart_write_wait>:

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	/* Check that the transmitter is enabled */
	if (!(module->transmitter_enabled)) {
     e34:	79c2      	ldrb	r2, [r0, #7]
		return STATUS_ERR_DENIED;
     e36:	231c      	movs	r3, #28
	if (!(module->transmitter_enabled)) {
     e38:	2a00      	cmp	r2, #0
     e3a:	d101      	bne.n	e40 <usart_write_wait+0xc>
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
		/* Wait until data is sent */
	}

	return STATUS_OK;
}
     e3c:	0018      	movs	r0, r3
     e3e:	4770      	bx	lr
	if (module->remaining_tx_buffer_length > 0) {
     e40:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
     e42:	b292      	uxth	r2, r2
		return STATUS_BUSY;
     e44:	3b17      	subs	r3, #23
	if (module->remaining_tx_buffer_length > 0) {
     e46:	2a00      	cmp	r2, #0
     e48:	d1f8      	bne.n	e3c <usart_write_wait+0x8>
	SercomUsart *const usart_hw = &(module->hw->USART);
     e4a:	6803      	ldr	r3, [r0, #0]
	return (usart_hw->SYNCBUSY.reg);
     e4c:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
     e4e:	2a00      	cmp	r2, #0
     e50:	d1fc      	bne.n	e4c <usart_write_wait+0x18>
	usart_hw->DATA.reg = tx_data;
     e52:	8519      	strh	r1, [r3, #40]	; 0x28
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
     e54:	2102      	movs	r1, #2
     e56:	7e1a      	ldrb	r2, [r3, #24]
     e58:	420a      	tst	r2, r1
     e5a:	d0fc      	beq.n	e56 <usart_write_wait+0x22>
	return STATUS_OK;
     e5c:	2300      	movs	r3, #0
     e5e:	e7ed      	b.n	e3c <usart_write_wait+0x8>

00000e60 <usart_write_buffer_wait>:
 */
enum status_code usart_write_buffer_wait(
		struct usart_module *const module,
		const uint8_t *tx_data,
		uint16_t length)
{
     e60:	b5f0      	push	{r4, r5, r6, r7, lr}
     e62:	46ce      	mov	lr, r9
     e64:	4647      	mov	r7, r8
     e66:	b580      	push	{r7, lr}
     e68:	b083      	sub	sp, #12
     e6a:	0005      	movs	r5, r0
     e6c:	9101      	str	r1, [sp, #4]
	Assert(module);
	Assert(module->hw);

	/* Check if the buffer length is valid */
	if (length == 0) {
		return STATUS_ERR_INVALID_ARG;
     e6e:	2017      	movs	r0, #23
	if (length == 0) {
     e70:	2a00      	cmp	r2, #0
     e72:	d104      	bne.n	e7e <usart_write_buffer_wait+0x1e>
			return STATUS_ERR_TIMEOUT;
		}
	}

	return STATUS_OK;
}
     e74:	b003      	add	sp, #12
     e76:	bc0c      	pop	{r2, r3}
     e78:	4690      	mov	r8, r2
     e7a:	4699      	mov	r9, r3
     e7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (!(module->transmitter_enabled)) {
     e7e:	79eb      	ldrb	r3, [r5, #7]
		return STATUS_ERR_DENIED;
     e80:	3005      	adds	r0, #5
	if (!(module->transmitter_enabled)) {
     e82:	2b00      	cmp	r3, #0
     e84:	d0f6      	beq.n	e74 <usart_write_buffer_wait+0x14>
	SercomUsart *const usart_hw = &(module->hw->USART);
     e86:	682c      	ldr	r4, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
     e88:	69e3      	ldr	r3, [r4, #28]
	while (usart_is_syncing(module)) {
     e8a:	2b00      	cmp	r3, #0
     e8c:	d1fc      	bne.n	e88 <usart_write_buffer_wait+0x28>
	while (length--) {
     e8e:	3a01      	subs	r2, #1
     e90:	b293      	uxth	r3, r2
     e92:	4699      	mov	r9, r3
     e94:	2600      	movs	r6, #0
			if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) {
     e96:	2701      	movs	r7, #1
	while (length--) {
     e98:	4b1f      	ldr	r3, [pc, #124]	; (f18 <usart_write_buffer_wait+0xb8>)
     e9a:	4698      	mov	r8, r3
     e9c:	e011      	b.n	ec2 <usart_write_buffer_wait+0x62>
		uint16_t data_to_send = tx_data[tx_pos++];
     e9e:	1c73      	adds	r3, r6, #1
     ea0:	b29b      	uxth	r3, r3
     ea2:	9a01      	ldr	r2, [sp, #4]
     ea4:	5d91      	ldrb	r1, [r2, r6]
		if (module->character_size == USART_CHARACTER_SIZE_9BIT) {
     ea6:	796a      	ldrb	r2, [r5, #5]
     ea8:	2a01      	cmp	r2, #1
     eaa:	d017      	beq.n	edc <usart_write_buffer_wait+0x7c>
		uint16_t data_to_send = tx_data[tx_pos++];
     eac:	b289      	uxth	r1, r1
     eae:	001e      	movs	r6, r3
		usart_write_wait(module, data_to_send);
     eb0:	0028      	movs	r0, r5
     eb2:	4b1a      	ldr	r3, [pc, #104]	; (f1c <usart_write_buffer_wait+0xbc>)
     eb4:	4798      	blx	r3
	while (length--) {
     eb6:	464b      	mov	r3, r9
     eb8:	3b01      	subs	r3, #1
     eba:	b29b      	uxth	r3, r3
     ebc:	4699      	mov	r9, r3
     ebe:	4543      	cmp	r3, r8
     ec0:	d013      	beq.n	eea <usart_write_buffer_wait+0x8a>
			if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) {
     ec2:	7e23      	ldrb	r3, [r4, #24]
     ec4:	423b      	tst	r3, r7
     ec6:	d1ea      	bne.n	e9e <usart_write_buffer_wait+0x3e>
     ec8:	4b13      	ldr	r3, [pc, #76]	; (f18 <usart_write_buffer_wait+0xb8>)
     eca:	7e22      	ldrb	r2, [r4, #24]
     ecc:	423a      	tst	r2, r7
     ece:	d1e6      	bne.n	e9e <usart_write_buffer_wait+0x3e>
			} else if (i == USART_TIMEOUT) {
     ed0:	2b01      	cmp	r3, #1
     ed2:	d019      	beq.n	f08 <usart_write_buffer_wait+0xa8>
     ed4:	3b01      	subs	r3, #1
		for (uint32_t i = 0; i <= USART_TIMEOUT; i++) {
     ed6:	2b00      	cmp	r3, #0
     ed8:	d1f7      	bne.n	eca <usart_write_buffer_wait+0x6a>
     eda:	e7e0      	b.n	e9e <usart_write_buffer_wait+0x3e>
			data_to_send |= (tx_data[tx_pos++] << 8);
     edc:	3602      	adds	r6, #2
     ede:	b2b6      	uxth	r6, r6
     ee0:	9a01      	ldr	r2, [sp, #4]
     ee2:	5cd3      	ldrb	r3, [r2, r3]
     ee4:	021b      	lsls	r3, r3, #8
     ee6:	4319      	orrs	r1, r3
     ee8:	e7e2      	b.n	eb0 <usart_write_buffer_wait+0x50>
		if (usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) {
     eea:	7e23      	ldrb	r3, [r4, #24]
     eec:	079b      	lsls	r3, r3, #30
     eee:	d40d      	bmi.n	f0c <usart_write_buffer_wait+0xac>
     ef0:	4b09      	ldr	r3, [pc, #36]	; (f18 <usart_write_buffer_wait+0xb8>)
     ef2:	2102      	movs	r1, #2
     ef4:	7e22      	ldrb	r2, [r4, #24]
     ef6:	420a      	tst	r2, r1
     ef8:	d10a      	bne.n	f10 <usart_write_buffer_wait+0xb0>
		} else if (i == USART_TIMEOUT) {
     efa:	2b01      	cmp	r3, #1
     efc:	d00a      	beq.n	f14 <usart_write_buffer_wait+0xb4>
     efe:	3b01      	subs	r3, #1
	for (uint32_t i = 0; i <= USART_TIMEOUT; i++) {
     f00:	2b00      	cmp	r3, #0
     f02:	d1f7      	bne.n	ef4 <usart_write_buffer_wait+0x94>
	return STATUS_OK;
     f04:	2000      	movs	r0, #0
     f06:	e7b5      	b.n	e74 <usart_write_buffer_wait+0x14>
				return STATUS_ERR_TIMEOUT;
     f08:	2012      	movs	r0, #18
     f0a:	e7b3      	b.n	e74 <usart_write_buffer_wait+0x14>
	return STATUS_OK;
     f0c:	2000      	movs	r0, #0
     f0e:	e7b1      	b.n	e74 <usart_write_buffer_wait+0x14>
     f10:	2000      	movs	r0, #0
     f12:	e7af      	b.n	e74 <usart_write_buffer_wait+0x14>
			return STATUS_ERR_TIMEOUT;
     f14:	2012      	movs	r0, #18
     f16:	e7ad      	b.n	e74 <usart_write_buffer_wait+0x14>
     f18:	0000ffff 	.word	0x0000ffff
     f1c:	00000e35 	.word	0x00000e35

00000f20 <usart_register_callback>:
	/* Sanity check arguments */
	Assert(module);
	Assert(callback_func);

	/* Register callback function */
	module->callback[callback_type] = callback_func;
     f20:	1c93      	adds	r3, r2, #2
     f22:	009b      	lsls	r3, r3, #2
     f24:	18c3      	adds	r3, r0, r3
     f26:	6059      	str	r1, [r3, #4]

	/* Set the bit corresponding to the callback_type */
	module->callback_reg_mask |= (1 << callback_type);
     f28:	2130      	movs	r1, #48	; 0x30
     f2a:	2301      	movs	r3, #1
     f2c:	4093      	lsls	r3, r2
     f2e:	001a      	movs	r2, r3
     f30:	5c43      	ldrb	r3, [r0, r1]
     f32:	4313      	orrs	r3, r2
     f34:	5443      	strb	r3, [r0, r1]
}
     f36:	4770      	bx	lr

00000f38 <_usart_interrupt_handler>:
 * \param[in]  instance  ID of the SERCOM instance calling the interrupt
 *                       handler.
 */
void _usart_interrupt_handler(
		uint8_t instance)
{
     f38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint16_t callback_status;
	uint8_t error_code;


	/* Get device instance from the look-up table */
	struct usart_module *module
     f3a:	0080      	lsls	r0, r0, #2
     f3c:	4b62      	ldr	r3, [pc, #392]	; (10c8 <_usart_interrupt_handler+0x190>)
     f3e:	58c5      	ldr	r5, [r0, r3]
		= (struct usart_module *)_sercom_instances[instance];

	/* Pointer to the hardware module instance */
	SercomUsart *const usart_hw
		= &(module->hw->USART);
     f40:	682c      	ldr	r4, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
     f42:	69e3      	ldr	r3, [r4, #28]
	while (usart_is_syncing(module)) {
     f44:	2b00      	cmp	r3, #0
     f46:	d1fc      	bne.n	f42 <_usart_interrupt_handler+0xa>

	/* Wait for the synchronization to complete */
	_usart_wait_for_sync(module);

	/* Read and mask interrupt flag register */
	interrupt_status = usart_hw->INTFLAG.reg;
     f48:	7e23      	ldrb	r3, [r4, #24]
	interrupt_status &= usart_hw->INTENSET.reg;
     f4a:	7da6      	ldrb	r6, [r4, #22]
     f4c:	401e      	ands	r6, r3
	callback_status = module->callback_reg_mask &
     f4e:	2330      	movs	r3, #48	; 0x30
     f50:	5ceb      	ldrb	r3, [r5, r3]
     f52:	2231      	movs	r2, #49	; 0x31
     f54:	5caf      	ldrb	r7, [r5, r2]
     f56:	401f      	ands	r7, r3
			module->callback_enable_mask;

	/* Check if a DATA READY interrupt has occurred,
	 * and if there is more to transfer */
	if (interrupt_status & SERCOM_USART_INTFLAG_DRE) {
     f58:	07f3      	lsls	r3, r6, #31
     f5a:	d522      	bpl.n	fa2 <_usart_interrupt_handler+0x6a>
		if (module->remaining_tx_buffer_length) {
     f5c:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
     f5e:	b29b      	uxth	r3, r3
     f60:	2b00      	cmp	r3, #0
     f62:	d01c      	beq.n	f9e <_usart_interrupt_handler+0x66>
			/* Write value will be at least 8-bits long */
			uint16_t data_to_send = *(module->tx_buffer_ptr);
     f64:	6aaa      	ldr	r2, [r5, #40]	; 0x28
     f66:	7813      	ldrb	r3, [r2, #0]
     f68:	b2db      	uxtb	r3, r3
			/* Increment 8-bit pointer */
			(module->tx_buffer_ptr)++;
     f6a:	1c51      	adds	r1, r2, #1
     f6c:	62a9      	str	r1, [r5, #40]	; 0x28

			if (module->character_size == USART_CHARACTER_SIZE_9BIT) {
     f6e:	7969      	ldrb	r1, [r5, #5]
     f70:	2901      	cmp	r1, #1
     f72:	d00e      	beq.n	f92 <_usart_interrupt_handler+0x5a>
			uint16_t data_to_send = *(module->tx_buffer_ptr);
     f74:	b29b      	uxth	r3, r3
				data_to_send |= (*(module->tx_buffer_ptr) << 8);
				/* Increment 8-bit pointer */
				(module->tx_buffer_ptr)++;
			}
			/* Write the data to send */
			usart_hw->DATA.reg = (data_to_send & SERCOM_USART_DATA_MASK);
     f76:	05db      	lsls	r3, r3, #23
     f78:	0ddb      	lsrs	r3, r3, #23
     f7a:	8523      	strh	r3, [r4, #40]	; 0x28

			if (--(module->remaining_tx_buffer_length) == 0) {
     f7c:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
     f7e:	3b01      	subs	r3, #1
     f80:	b29b      	uxth	r3, r3
     f82:	85eb      	strh	r3, [r5, #46]	; 0x2e
     f84:	2b00      	cmp	r3, #0
     f86:	d10c      	bne.n	fa2 <_usart_interrupt_handler+0x6a>
				/* Disable the Data Register Empty Interrupt */
				usart_hw->INTENCLR.reg = SERCOM_USART_INTFLAG_DRE;
     f88:	3301      	adds	r3, #1
     f8a:	7523      	strb	r3, [r4, #20]
				/* Enable Transmission Complete interrupt */
				usart_hw->INTENSET.reg = SERCOM_USART_INTFLAG_TXC;
     f8c:	3301      	adds	r3, #1
     f8e:	75a3      	strb	r3, [r4, #22]
     f90:	e007      	b.n	fa2 <_usart_interrupt_handler+0x6a>
				data_to_send |= (*(module->tx_buffer_ptr) << 8);
     f92:	7851      	ldrb	r1, [r2, #1]
     f94:	0209      	lsls	r1, r1, #8
     f96:	430b      	orrs	r3, r1
				(module->tx_buffer_ptr)++;
     f98:	3202      	adds	r2, #2
     f9a:	62aa      	str	r2, [r5, #40]	; 0x28
     f9c:	e7eb      	b.n	f76 <_usart_interrupt_handler+0x3e>

			}
		} else {
			usart_hw->INTENCLR.reg = SERCOM_USART_INTFLAG_DRE;
     f9e:	2301      	movs	r3, #1
     fa0:	7523      	strb	r3, [r4, #20]
		}
	}

	/* Check if the Transmission Complete interrupt has occurred and
	 * that the transmit buffer is empty */
	if (interrupt_status & SERCOM_USART_INTFLAG_TXC) {
     fa2:	07b3      	lsls	r3, r6, #30
     fa4:	d506      	bpl.n	fb4 <_usart_interrupt_handler+0x7c>

		/* Disable TX Complete Interrupt, and set STATUS_OK */
		usart_hw->INTENCLR.reg = SERCOM_USART_INTFLAG_TXC;
     fa6:	2302      	movs	r3, #2
     fa8:	7523      	strb	r3, [r4, #20]
		module->tx_status = STATUS_OK;
     faa:	2200      	movs	r2, #0
     fac:	3331      	adds	r3, #49	; 0x31
     fae:	54ea      	strb	r2, [r5, r3]

		/* Run callback if registered and enabled */
		if (callback_status & (1 << USART_CALLBACK_BUFFER_TRANSMITTED)) {
     fb0:	07fb      	lsls	r3, r7, #31
     fb2:	d41a      	bmi.n	fea <_usart_interrupt_handler+0xb2>
		}
	}

	/* Check if the Receive Complete interrupt has occurred, and that
	 * there's more data to receive */
	if (interrupt_status & SERCOM_USART_INTFLAG_RXC) {
     fb4:	0773      	lsls	r3, r6, #29
     fb6:	d565      	bpl.n	1084 <_usart_interrupt_handler+0x14c>

		if (module->remaining_rx_buffer_length) {
     fb8:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
     fba:	b29b      	uxth	r3, r3
     fbc:	2b00      	cmp	r3, #0
     fbe:	d05f      	beq.n	1080 <_usart_interrupt_handler+0x148>
			/* Read out the status code and mask away all but the 4 LSBs*/
			error_code = (uint8_t)(usart_hw->STATUS.reg & SERCOM_USART_STATUS_MASK);
     fc0:	8b63      	ldrh	r3, [r4, #26]
     fc2:	b2db      	uxtb	r3, r3
#if !SAMD20
			/* CTS status should not be considered as an error */
			if(error_code & SERCOM_USART_STATUS_CTS) {
     fc4:	071a      	lsls	r2, r3, #28
     fc6:	d414      	bmi.n	ff2 <_usart_interrupt_handler+0xba>
			error_code = (uint8_t)(usart_hw->STATUS.reg & SERCOM_USART_STATUS_MASK);
     fc8:	223f      	movs	r2, #63	; 0x3f
     fca:	4013      	ands	r3, r2
			if(error_code & SERCOM_USART_STATUS_TXE) {
				error_code &= ~SERCOM_USART_STATUS_TXE;
			}
#endif
			/* Check if an error has occurred during the receiving */
			if (error_code) {
     fcc:	2b00      	cmp	r3, #0
     fce:	d034      	beq.n	103a <_usart_interrupt_handler+0x102>
				/* Check which error occurred */
				if (error_code & SERCOM_USART_STATUS_FERR) {
     fd0:	079a      	lsls	r2, r3, #30
     fd2:	d511      	bpl.n	ff8 <_usart_interrupt_handler+0xc0>
					/* Store the error code and clear flag by writing 1 to it */
					module->rx_status = STATUS_ERR_BAD_FORMAT;
     fd4:	221a      	movs	r2, #26
     fd6:	2332      	movs	r3, #50	; 0x32
     fd8:	54ea      	strb	r2, [r5, r3]
					usart_hw->STATUS.reg = SERCOM_USART_STATUS_FERR;
     fda:	3b30      	subs	r3, #48	; 0x30
     fdc:	8363      	strh	r3, [r4, #26]
					usart_hw->STATUS.reg = SERCOM_USART_STATUS_COLL;
				}
#endif

				/* Run callback if registered and enabled */
				if (callback_status
     fde:	077b      	lsls	r3, r7, #29
     fe0:	d550      	bpl.n	1084 <_usart_interrupt_handler+0x14c>
						& (1 << USART_CALLBACK_ERROR)) {
					(*(module->callback[USART_CALLBACK_ERROR]))(module);
     fe2:	0028      	movs	r0, r5
     fe4:	696b      	ldr	r3, [r5, #20]
     fe6:	4798      	blx	r3
     fe8:	e04c      	b.n	1084 <_usart_interrupt_handler+0x14c>
			(*(module->callback[USART_CALLBACK_BUFFER_TRANSMITTED]))(module);
     fea:	0028      	movs	r0, r5
     fec:	68eb      	ldr	r3, [r5, #12]
     fee:	4798      	blx	r3
     ff0:	e7e0      	b.n	fb4 <_usart_interrupt_handler+0x7c>
				error_code &= ~SERCOM_USART_STATUS_CTS;
     ff2:	2237      	movs	r2, #55	; 0x37
     ff4:	4013      	ands	r3, r2
     ff6:	e7e9      	b.n	fcc <_usart_interrupt_handler+0x94>
				} else if (error_code & SERCOM_USART_STATUS_BUFOVF) {
     ff8:	075a      	lsls	r2, r3, #29
     ffa:	d505      	bpl.n	1008 <_usart_interrupt_handler+0xd0>
					module->rx_status = STATUS_ERR_OVERFLOW;
     ffc:	221e      	movs	r2, #30
     ffe:	2332      	movs	r3, #50	; 0x32
    1000:	54ea      	strb	r2, [r5, r3]
					usart_hw->STATUS.reg = SERCOM_USART_STATUS_BUFOVF;
    1002:	3b2e      	subs	r3, #46	; 0x2e
    1004:	8363      	strh	r3, [r4, #26]
    1006:	e7ea      	b.n	fde <_usart_interrupt_handler+0xa6>
				} else if (error_code & SERCOM_USART_STATUS_PERR) {
    1008:	07da      	lsls	r2, r3, #31
    100a:	d505      	bpl.n	1018 <_usart_interrupt_handler+0xe0>
					module->rx_status = STATUS_ERR_BAD_DATA;
    100c:	2213      	movs	r2, #19
    100e:	2332      	movs	r3, #50	; 0x32
    1010:	54ea      	strb	r2, [r5, r3]
					usart_hw->STATUS.reg = SERCOM_USART_STATUS_PERR;
    1012:	3b31      	subs	r3, #49	; 0x31
    1014:	8363      	strh	r3, [r4, #26]
    1016:	e7e2      	b.n	fde <_usart_interrupt_handler+0xa6>
				else if (error_code & SERCOM_USART_STATUS_ISF) {
    1018:	06da      	lsls	r2, r3, #27
    101a:	d505      	bpl.n	1028 <_usart_interrupt_handler+0xf0>
					module->rx_status = STATUS_ERR_PROTOCOL;
    101c:	2242      	movs	r2, #66	; 0x42
    101e:	2332      	movs	r3, #50	; 0x32
    1020:	54ea      	strb	r2, [r5, r3]
					usart_hw->STATUS.reg = SERCOM_USART_STATUS_ISF;
    1022:	3b22      	subs	r3, #34	; 0x22
    1024:	8363      	strh	r3, [r4, #26]
    1026:	e7da      	b.n	fde <_usart_interrupt_handler+0xa6>
				else if (error_code & SERCOM_USART_STATUS_COLL) {
    1028:	2220      	movs	r2, #32
    102a:	421a      	tst	r2, r3
    102c:	d0d7      	beq.n	fde <_usart_interrupt_handler+0xa6>
					module->rx_status = STATUS_ERR_PACKET_COLLISION;
    102e:	3221      	adds	r2, #33	; 0x21
    1030:	2332      	movs	r3, #50	; 0x32
    1032:	54ea      	strb	r2, [r5, r3]
					usart_hw->STATUS.reg = SERCOM_USART_STATUS_COLL;
    1034:	3b12      	subs	r3, #18
    1036:	8363      	strh	r3, [r4, #26]
    1038:	e7d1      	b.n	fde <_usart_interrupt_handler+0xa6>

			} else {

				/* Read current packet from DATA register,
				 * increment buffer pointer and decrement buffer length */
				uint16_t received_data = (usart_hw->DATA.reg & SERCOM_USART_DATA_MASK);
    103a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    103c:	05db      	lsls	r3, r3, #23
    103e:	0ddb      	lsrs	r3, r3, #23

				/* Read value will be at least 8-bits long */
				*(module->rx_buffer_ptr) = received_data;
    1040:	b2da      	uxtb	r2, r3
    1042:	6a69      	ldr	r1, [r5, #36]	; 0x24
    1044:	700a      	strb	r2, [r1, #0]
				/* Increment 8-bit pointer */
				module->rx_buffer_ptr += 1;
    1046:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    1048:	1c51      	adds	r1, r2, #1
    104a:	6269      	str	r1, [r5, #36]	; 0x24

				if (module->character_size == USART_CHARACTER_SIZE_9BIT) {
    104c:	7969      	ldrb	r1, [r5, #5]
    104e:	2901      	cmp	r1, #1
    1050:	d010      	beq.n	1074 <_usart_interrupt_handler+0x13c>
					/* Increment 8-bit pointer */
					module->rx_buffer_ptr += 1;
				}

				/* Check if the last character have been received */
				if(--(module->remaining_rx_buffer_length) == 0) {
    1052:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    1054:	3b01      	subs	r3, #1
    1056:	b29b      	uxth	r3, r3
    1058:	85ab      	strh	r3, [r5, #44]	; 0x2c
    105a:	2b00      	cmp	r3, #0
    105c:	d112      	bne.n	1084 <_usart_interrupt_handler+0x14c>
					/* Disable RX Complete Interrupt,
					 * and set STATUS_OK */
					usart_hw->INTENCLR.reg = SERCOM_USART_INTFLAG_RXC;
    105e:	3304      	adds	r3, #4
    1060:	7523      	strb	r3, [r4, #20]
					module->rx_status = STATUS_OK;
    1062:	2200      	movs	r2, #0
    1064:	332e      	adds	r3, #46	; 0x2e
    1066:	54ea      	strb	r2, [r5, r3]

					/* Run callback if registered and enabled */
					if (callback_status
    1068:	07bb      	lsls	r3, r7, #30
    106a:	d50b      	bpl.n	1084 <_usart_interrupt_handler+0x14c>
							& (1 << USART_CALLBACK_BUFFER_RECEIVED)) {
						(*(module->callback[USART_CALLBACK_BUFFER_RECEIVED]))(module);
    106c:	0028      	movs	r0, r5
    106e:	692b      	ldr	r3, [r5, #16]
    1070:	4798      	blx	r3
    1072:	e007      	b.n	1084 <_usart_interrupt_handler+0x14c>
					*(module->rx_buffer_ptr) = (received_data >> 8);
    1074:	0a1b      	lsrs	r3, r3, #8
    1076:	7053      	strb	r3, [r2, #1]
					module->rx_buffer_ptr += 1;
    1078:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    107a:	3301      	adds	r3, #1
    107c:	626b      	str	r3, [r5, #36]	; 0x24
    107e:	e7e8      	b.n	1052 <_usart_interrupt_handler+0x11a>
					}
				}
			}
		} else {
			/* This should not happen. Disable Receive Complete interrupt. */
			usart_hw->INTENCLR.reg = SERCOM_USART_INTFLAG_RXC;
    1080:	2304      	movs	r3, #4
    1082:	7523      	strb	r3, [r4, #20]
		}
	}

#ifdef FEATURE_USART_HARDWARE_FLOW_CONTROL
	if (interrupt_status & SERCOM_USART_INTFLAG_CTSIC) {
    1084:	06f3      	lsls	r3, r6, #27
    1086:	d504      	bpl.n	1092 <_usart_interrupt_handler+0x15a>
		/* Disable interrupts */
		usart_hw->INTENCLR.reg = SERCOM_USART_INTENCLR_CTSIC;
    1088:	2310      	movs	r3, #16
    108a:	7523      	strb	r3, [r4, #20]
		/* Clear interrupt flag */
		usart_hw->INTFLAG.reg = SERCOM_USART_INTFLAG_CTSIC;
    108c:	7623      	strb	r3, [r4, #24]

		/* Run callback if registered and enabled */
		if (callback_status & (1 << USART_CALLBACK_CTS_INPUT_CHANGE)) {
    108e:	06fb      	lsls	r3, r7, #27
    1090:	d40e      	bmi.n	10b0 <_usart_interrupt_handler+0x178>
		}
	}
#endif

#ifdef FEATURE_USART_LIN_SLAVE
	if (interrupt_status & SERCOM_USART_INTFLAG_RXBRK) {
    1092:	06b3      	lsls	r3, r6, #26
    1094:	d504      	bpl.n	10a0 <_usart_interrupt_handler+0x168>
		/* Disable interrupts */
		usart_hw->INTENCLR.reg = SERCOM_USART_INTENCLR_RXBRK;
    1096:	2320      	movs	r3, #32
    1098:	7523      	strb	r3, [r4, #20]
		/* Clear interrupt flag */
		usart_hw->INTFLAG.reg = SERCOM_USART_INTFLAG_RXBRK;
    109a:	7623      	strb	r3, [r4, #24]

		/* Run callback if registered and enabled */
		if (callback_status & (1 << USART_CALLBACK_BREAK_RECEIVED)) {
    109c:	073b      	lsls	r3, r7, #28
    109e:	d40b      	bmi.n	10b8 <_usart_interrupt_handler+0x180>
		}
	}
#endif

#ifdef FEATURE_USART_START_FRAME_DECTION
	if (interrupt_status & SERCOM_USART_INTFLAG_RXS) {
    10a0:	0733      	lsls	r3, r6, #28
    10a2:	d504      	bpl.n	10ae <_usart_interrupt_handler+0x176>
		/* Disable interrupts */
		usart_hw->INTENCLR.reg = SERCOM_USART_INTENCLR_RXS;
    10a4:	2308      	movs	r3, #8
    10a6:	7523      	strb	r3, [r4, #20]
		/* Clear interrupt flag */
		usart_hw->INTFLAG.reg = SERCOM_USART_INTFLAG_RXS;
    10a8:	7623      	strb	r3, [r4, #24]

		/* Run callback if registered and enabled */
		if (callback_status & (1 << USART_CALLBACK_START_RECEIVED)) {
    10aa:	06bb      	lsls	r3, r7, #26
    10ac:	d408      	bmi.n	10c0 <_usart_interrupt_handler+0x188>
			(*(module->callback[USART_CALLBACK_START_RECEIVED]))(module);
		}
	}
#endif
}
    10ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			(*(module->callback[USART_CALLBACK_CTS_INPUT_CHANGE]))(module);
    10b0:	0028      	movs	r0, r5
    10b2:	69eb      	ldr	r3, [r5, #28]
    10b4:	4798      	blx	r3
    10b6:	e7ec      	b.n	1092 <_usart_interrupt_handler+0x15a>
			(*(module->callback[USART_CALLBACK_BREAK_RECEIVED]))(module);
    10b8:	0028      	movs	r0, r5
    10ba:	69ab      	ldr	r3, [r5, #24]
    10bc:	4798      	blx	r3
    10be:	e7ef      	b.n	10a0 <_usart_interrupt_handler+0x168>
			(*(module->callback[USART_CALLBACK_START_RECEIVED]))(module);
    10c0:	6a2b      	ldr	r3, [r5, #32]
    10c2:	0028      	movs	r0, r5
    10c4:	4798      	blx	r3
}
    10c6:	e7f2      	b.n	10ae <_usart_interrupt_handler+0x176>
    10c8:	20000a54 	.word	0x20000a54

000010cc <pspi_init>:



#warning come back to this and separate this function for readability
void pspi_init()
{
    10cc:	b570      	push	{r4, r5, r6, lr}
    10ce:	b08e      	sub	sp, #56	; 0x38
	config->mode             = SPI_MODE_MASTER;
    10d0:	2401      	movs	r4, #1
    10d2:	466b      	mov	r3, sp
    10d4:	701c      	strb	r4, [r3, #0]
	config->data_order       = SPI_DATA_ORDER_MSB;
    10d6:	2300      	movs	r3, #0
    10d8:	9301      	str	r3, [sp, #4]
	config->transfer_mode    = SPI_TRANSFER_MODE_0;
    10da:	9302      	str	r3, [sp, #8]
	config->character_size   = SPI_CHARACTER_SIZE_8BIT;
    10dc:	466a      	mov	r2, sp
    10de:	7413      	strb	r3, [r2, #16]
	config->run_in_standby   = false;
    10e0:	7453      	strb	r3, [r2, #17]
	config->receiver_enable  = true;
    10e2:	7494      	strb	r4, [r2, #18]
	config->select_slave_low_detect_enable= true;
    10e4:	74d4      	strb	r4, [r2, #19]
	config->master_slave_select_enable= false;
    10e6:	7513      	strb	r3, [r2, #20]
	config->generator_source = GCLK_GENERATOR_0;
    10e8:	2224      	movs	r2, #36	; 0x24
    10ea:	4669      	mov	r1, sp
    10ec:	548b      	strb	r3, [r1, r2]
	memset(&(config->mode_specific), 0, sizeof(config->mode_specific));
    10ee:	3a18      	subs	r2, #24
    10f0:	2100      	movs	r1, #0
    10f2:	a806      	add	r0, sp, #24
    10f4:	4b13      	ldr	r3, [pc, #76]	; (1144 <pspi_init+0x78>)
    10f6:	4798      	blx	r3
	struct spi_config sercom_1_conf;
	spi_get_config_defaults(&sercom_1_conf);
	sercom_1_conf.character_size = SERCOM_1_CHAR_SIZE;
	sercom_1_conf.mode_specific.master.baudrate = SERCOM_1_BAUD;
    10f8:	4b13      	ldr	r3, [pc, #76]	; (1148 <pspi_init+0x7c>)
    10fa:	9306      	str	r3, [sp, #24]
	sercom_1_conf.pinmux_pad0 = EXT2_SPI_SERCOM_PINMUX_PAD0;
    10fc:	4b13      	ldr	r3, [pc, #76]	; (114c <pspi_init+0x80>)
    10fe:	930a      	str	r3, [sp, #40]	; 0x28
	sercom_1_conf.pinmux_pad1 = EXT2_SPI_SERCOM_PINMUX_PAD1;
    1100:	4b13      	ldr	r3, [pc, #76]	; (1150 <pspi_init+0x84>)
    1102:	930b      	str	r3, [sp, #44]	; 0x2c
	sercom_1_conf.pinmux_pad2 = EXT2_SPI_SERCOM_PINMUX_PAD2;
    1104:	4b13      	ldr	r3, [pc, #76]	; (1154 <pspi_init+0x88>)
    1106:	930c      	str	r3, [sp, #48]	; 0x30
	sercom_1_conf.pinmux_pad3 = EXT2_SPI_SERCOM_PINMUX_PAD3;
    1108:	4b13      	ldr	r3, [pc, #76]	; (1158 <pspi_init+0x8c>)
    110a:	930d      	str	r3, [sp, #52]	; 0x34
	sercom_1_conf.mux_setting = EXT2_SPI_SERCOM_MUX_SETTING; //Extremely important
    110c:	2380      	movs	r3, #128	; 0x80
    110e:	025b      	lsls	r3, r3, #9
    1110:	9303      	str	r3, [sp, #12]
	
	
	
	spi_init(&spi_sercom1_mod, SERCOM1, &sercom_1_conf);
    1112:	4e12      	ldr	r6, [pc, #72]	; (115c <pspi_init+0x90>)
    1114:	466a      	mov	r2, sp
    1116:	4912      	ldr	r1, [pc, #72]	; (1160 <pspi_init+0x94>)
    1118:	0030      	movs	r0, r6
    111a:	4b12      	ldr	r3, [pc, #72]	; (1164 <pspi_init+0x98>)
    111c:	4798      	blx	r3
	SercomSpi *const spi_module = &(module->hw->SPI);
    111e:	6835      	ldr	r5, [r6, #0]
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    1120:	0028      	movs	r0, r5
    1122:	4b11      	ldr	r3, [pc, #68]	; (1168 <pspi_init+0x9c>)
    1124:	4798      	blx	r3
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    1126:	231f      	movs	r3, #31
    1128:	4018      	ands	r0, r3
    112a:	4084      	lsls	r4, r0
    112c:	4b0f      	ldr	r3, [pc, #60]	; (116c <pspi_init+0xa0>)
    112e:	601c      	str	r4, [r3, #0]
	SercomSpi *const spi_module = &(module->hw->SPI);
    1130:	6832      	ldr	r2, [r6, #0]
	return (spi_module->SYNCBUSY.reg);
    1132:	69d3      	ldr	r3, [r2, #28]
	while (spi_is_syncing(module)) {
    1134:	2b00      	cmp	r3, #0
    1136:	d1fc      	bne.n	1132 <pspi_init+0x66>
	spi_module->CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
    1138:	682b      	ldr	r3, [r5, #0]
    113a:	2202      	movs	r2, #2
    113c:	4313      	orrs	r3, r2
    113e:	602b      	str	r3, [r5, #0]
	
	
	 
	
	
}
    1140:	b00e      	add	sp, #56	; 0x38
    1142:	bd70      	pop	{r4, r5, r6, pc}
    1144:	00002ad5 	.word	0x00002ad5
    1148:	003d0900 	.word	0x003d0900
    114c:	00100002 	.word	0x00100002
    1150:	00110002 	.word	0x00110002
    1154:	00120002 	.word	0x00120002
    1158:	00130002 	.word	0x00130002
    115c:	20000a70 	.word	0x20000a70
    1160:	42000c00 	.word	0x42000c00
    1164:	0000059d 	.word	0x0000059d
    1168:	0000050d 	.word	0x0000050d
    116c:	e000e100 	.word	0xe000e100

00001170 <debug_tx_cb>:
{
	pprint("%s", &debug_buffer[0]);
}

void debug_tx_cb(struct usart_module* const mod)
{
    1170:	b510      	push	{r4, lr}
	const char* pprint_buffer_temp = pprint_buffer;
	uint16_t temp_ctr = 0;
	while(*pprint_buffer_temp++)
    1172:	4b0a      	ldr	r3, [pc, #40]	; (119c <debug_tx_cb+0x2c>)
    1174:	781b      	ldrb	r3, [r3, #0]
    1176:	2b00      	cmp	r3, #0
    1178:	d00d      	beq.n	1196 <debug_tx_cb+0x26>
    117a:	4b09      	ldr	r3, [pc, #36]	; (11a0 <debug_tx_cb+0x30>)
    117c:	2200      	movs	r2, #0
	{
		temp_ctr++;
    117e:	3201      	adds	r2, #1
    1180:	b292      	uxth	r2, r2
    1182:	3301      	adds	r3, #1
	while(*pprint_buffer_temp++)
    1184:	1e59      	subs	r1, r3, #1
    1186:	7809      	ldrb	r1, [r1, #0]
    1188:	2900      	cmp	r1, #0
    118a:	d1f8      	bne.n	117e <debug_tx_cb+0xe>
	};
	memset(pprint_buffer, '\0', temp_ctr);
    118c:	2100      	movs	r1, #0
    118e:	4803      	ldr	r0, [pc, #12]	; (119c <debug_tx_cb+0x2c>)
    1190:	4b04      	ldr	r3, [pc, #16]	; (11a4 <debug_tx_cb+0x34>)
    1192:	4798      	blx	r3
}
    1194:	bd10      	pop	{r4, pc}
	uint16_t temp_ctr = 0;
    1196:	2200      	movs	r2, #0
    1198:	e7f8      	b.n	118c <debug_tx_cb+0x1c>
    119a:	46c0      	nop			; (mov r8, r8)
    119c:	20000ae0 	.word	0x20000ae0
    11a0:	20000ae1 	.word	0x20000ae1
    11a4:	00002ad5 	.word	0x00002ad5

000011a8 <pprint>:
{
    11a8:	b40e      	push	{r1, r2, r3}
    11aa:	b510      	push	{r4, lr}
    11ac:	b083      	sub	sp, #12
    11ae:	aa05      	add	r2, sp, #20
    11b0:	ca02      	ldmia	r2!, {r1}
	va_start(args, str);
    11b2:	9201      	str	r2, [sp, #4]
	vsprintf(pprint_buffer, str, args);
    11b4:	4c08      	ldr	r4, [pc, #32]	; (11d8 <pprint+0x30>)
    11b6:	0020      	movs	r0, r4
    11b8:	4b08      	ldr	r3, [pc, #32]	; (11dc <pprint+0x34>)
    11ba:	4798      	blx	r3
	uint16_t strsize = (uint16_t)strlen(pprint_buffer);
    11bc:	0020      	movs	r0, r4
    11be:	4b08      	ldr	r3, [pc, #32]	; (11e0 <pprint+0x38>)
    11c0:	4798      	blx	r3
	usart_write_buffer_wait(DEBUG_MOD, pprint_buffer, strsize);	
    11c2:	b282      	uxth	r2, r0
    11c4:	0021      	movs	r1, r4
    11c6:	4807      	ldr	r0, [pc, #28]	; (11e4 <pprint+0x3c>)
    11c8:	4b07      	ldr	r3, [pc, #28]	; (11e8 <pprint+0x40>)
    11ca:	4798      	blx	r3
}
    11cc:	b003      	add	sp, #12
    11ce:	bc10      	pop	{r4}
    11d0:	bc08      	pop	{r3}
    11d2:	b003      	add	sp, #12
    11d4:	4718      	bx	r3
    11d6:	46c0      	nop			; (mov r8, r8)
    11d8:	20000ae0 	.word	0x20000ae0
    11dc:	00002bfd 	.word	0x00002bfd
    11e0:	00002b69 	.word	0x00002b69
    11e4:	20000aac 	.word	0x20000aac
    11e8:	00000e61 	.word	0x00000e61

000011ec <pusart_init>:
{
    11ec:	b570      	push	{r4, r5, r6, lr}
    11ee:	b090      	sub	sp, #64	; 0x40
{
	/* Sanity check arguments */
	Assert(config);

	/* Set default config in the config struct */
	config->data_order       = USART_DATAORDER_LSB;
    11f0:	2380      	movs	r3, #128	; 0x80
    11f2:	05db      	lsls	r3, r3, #23
    11f4:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    11f6:	2300      	movs	r3, #0
    11f8:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
    11fa:	22ff      	movs	r2, #255	; 0xff
    11fc:	4669      	mov	r1, sp
    11fe:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
    1200:	2200      	movs	r2, #0
    1202:	728b      	strb	r3, [r1, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    1204:	72cb      	strb	r3, [r1, #11]
	config->baudrate         = 9600;
	config->receiver_enable  = true;
    1206:	2401      	movs	r4, #1
    1208:	2124      	movs	r1, #36	; 0x24
    120a:	4668      	mov	r0, sp
    120c:	5444      	strb	r4, [r0, r1]
	config->transmitter_enable = true;
    120e:	3101      	adds	r1, #1
    1210:	5444      	strb	r4, [r0, r1]
	config->clock_polarity_inverted = false;
    1212:	3101      	adds	r1, #1
    1214:	5443      	strb	r3, [r0, r1]
	config->use_external_clock = false;
    1216:	3101      	adds	r1, #1
    1218:	5443      	strb	r3, [r0, r1]
	config->ext_clock_freq   = 0;
    121a:	930a      	str	r3, [sp, #40]	; 0x28
	config->mux_setting      = USART_RX_1_TX_2_XCK_3;
	config->run_in_standby   = false;
    121c:	3105      	adds	r1, #5
    121e:	5443      	strb	r3, [r0, r1]
	config->generator_source = GCLK_GENERATOR_0;
    1220:	3101      	adds	r1, #1
    1222:	5443      	strb	r3, [r0, r1]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->pinmux_pad2      = PINMUX_DEFAULT;
	config->pinmux_pad3      = PINMUX_DEFAULT;
#ifdef FEATURE_USART_OVER_SAMPLE
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    1224:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    1226:	8203      	strh	r3, [r0, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
	config->lin_slave_enable      = false;
    1228:	76c3      	strb	r3, [r0, #27]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
	config->immediate_buffer_overflow_notification  = false;
    122a:	7602      	strb	r2, [r0, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
	config->start_frame_detection_enable            = false;
    122c:	7702      	strb	r2, [r0, #28]
#endif
#ifdef FEATURE_USART_IRDA
	config->encoding_format_enable                  = false;
    122e:	7642      	strb	r2, [r0, #25]
	config->receive_pulse_length                    = 19;
    1230:	2313      	movs	r3, #19
    1232:	7683      	strb	r3, [r0, #26]
	config->iso7816_config.inhibit_nack             = ISO7816_INHIBIT_NACK_DISABLE;
	config->iso7816_config.successive_recv_nack     = ISO7816_SUCCESSIVE_RECV_NACK_DISABLE;
	config->iso7816_config.max_iterations           = 7;
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
	config->collision_detection_enable              = false;
    1234:	7742      	strb	r2, [r0, #29]
	debug_conf.baudrate =		SERCOM_3_BAUD;
    1236:	23e1      	movs	r3, #225	; 0xe1
    1238:	025b      	lsls	r3, r3, #9
    123a:	9308      	str	r3, [sp, #32]
	debug_conf.pinmux_pad0 =	SERCOM_3_PIN0;
    123c:	4b1d      	ldr	r3, [pc, #116]	; (12b4 <pusart_init+0xc8>)
    123e:	930c      	str	r3, [sp, #48]	; 0x30
	debug_conf.pinmux_pad1 =	SERCOM_3_PIN1;
    1240:	4b1d      	ldr	r3, [pc, #116]	; (12b8 <pusart_init+0xcc>)
    1242:	930d      	str	r3, [sp, #52]	; 0x34
	debug_conf.pinmux_pad2 =	SERCOM_3_PIN2;
    1244:	2301      	movs	r3, #1
    1246:	425b      	negs	r3, r3
    1248:	930e      	str	r3, [sp, #56]	; 0x38
	debug_conf.pinmux_pad3 =	SERCOM_3_PIN3;
    124a:	930f      	str	r3, [sp, #60]	; 0x3c
	debug_conf.mux_setting =	SERCOM_3_MUX_SETTING;
    124c:	2380      	movs	r3, #128	; 0x80
    124e:	035b      	lsls	r3, r3, #13
    1250:	9303      	str	r3, [sp, #12]
	usart_init(DEBUG_MOD, DEBUG_SERCOM, &debug_conf);
    1252:	4e1a      	ldr	r6, [pc, #104]	; (12bc <pusart_init+0xd0>)
    1254:	466a      	mov	r2, sp
    1256:	491a      	ldr	r1, [pc, #104]	; (12c0 <pusart_init+0xd4>)
    1258:	0030      	movs	r0, r6
    125a:	4b1a      	ldr	r3, [pc, #104]	; (12c4 <pusart_init+0xd8>)
    125c:	4798      	blx	r3
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    125e:	6835      	ldr	r5, [r6, #0]

#if USART_CALLBACK_MODE == true
	/* Enable Global interrupt for module */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    1260:	0028      	movs	r0, r5
    1262:	4b19      	ldr	r3, [pc, #100]	; (12c8 <pusart_init+0xdc>)
    1264:	4798      	blx	r3
    1266:	231f      	movs	r3, #31
    1268:	4018      	ands	r0, r3
    126a:	4084      	lsls	r4, r0
    126c:	4b17      	ldr	r3, [pc, #92]	; (12cc <pusart_init+0xe0>)
    126e:	601c      	str	r4, [r3, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    1270:	6832      	ldr	r2, [r6, #0]
	return (usart_hw->SYNCBUSY.reg);
    1272:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    1274:	2b00      	cmp	r3, #0
    1276:	d1fc      	bne.n	1272 <pusart_init+0x86>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Enable USART module */
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    1278:	682b      	ldr	r3, [r5, #0]
    127a:	2202      	movs	r2, #2
    127c:	4313      	orrs	r3, r2
    127e:	602b      	str	r3, [r5, #0]
	usart_register_callback(DEBUG_MOD, debug_rx_cb, USART_CALLBACK_BUFFER_RECEIVED);
    1280:	4c0e      	ldr	r4, [pc, #56]	; (12bc <pusart_init+0xd0>)
    1282:	3a01      	subs	r2, #1
    1284:	4912      	ldr	r1, [pc, #72]	; (12d0 <pusart_init+0xe4>)
    1286:	0020      	movs	r0, r4
    1288:	4e12      	ldr	r6, [pc, #72]	; (12d4 <pusart_init+0xe8>)
    128a:	47b0      	blx	r6
{
	/* Sanity check arguments */
	Assert(module);

	/* Enable callback */
	module->callback_enable_mask |= (1 << callback_type);
    128c:	2531      	movs	r5, #49	; 0x31
    128e:	5d63      	ldrb	r3, [r4, r5]
    1290:	2202      	movs	r2, #2
    1292:	4313      	orrs	r3, r2
    1294:	5563      	strb	r3, [r4, r5]
	usart_register_callback(DEBUG_MOD, debug_tx_cb, USART_CALLBACK_BUFFER_TRANSMITTED);
    1296:	2200      	movs	r2, #0
    1298:	490f      	ldr	r1, [pc, #60]	; (12d8 <pusart_init+0xec>)
    129a:	0020      	movs	r0, r4
    129c:	47b0      	blx	r6
    129e:	5d63      	ldrb	r3, [r4, r5]
    12a0:	2201      	movs	r2, #1
    12a2:	4313      	orrs	r3, r2
    12a4:	5563      	strb	r3, [r4, r5]
	pprint(DEBUG_MOD, DEBUG_STARTUP_MSG);
    12a6:	490d      	ldr	r1, [pc, #52]	; (12dc <pusart_init+0xf0>)
    12a8:	0020      	movs	r0, r4
    12aa:	4b0d      	ldr	r3, [pc, #52]	; (12e0 <pusart_init+0xf4>)
    12ac:	4798      	blx	r3
}
    12ae:	b010      	add	sp, #64	; 0x40
    12b0:	bd70      	pop	{r4, r5, r6, pc}
    12b2:	46c0      	nop			; (mov r8, r8)
    12b4:	00160002 	.word	0x00160002
    12b8:	00170002 	.word	0x00170002
    12bc:	20000aac 	.word	0x20000aac
    12c0:	42001400 	.word	0x42001400
    12c4:	00000af1 	.word	0x00000af1
    12c8:	0000050d 	.word	0x0000050d
    12cc:	e000e100 	.word	0xe000e100
    12d0:	000012e5 	.word	0x000012e5
    12d4:	00000f21 	.word	0x00000f21
    12d8:	00001171 	.word	0x00001171
    12dc:	00008048 	.word	0x00008048
    12e0:	000011a9 	.word	0x000011a9

000012e4 <debug_rx_cb>:
{
    12e4:	b510      	push	{r4, lr}
	pprint("%s", &debug_buffer[0]);
    12e6:	4902      	ldr	r1, [pc, #8]	; (12f0 <debug_rx_cb+0xc>)
    12e8:	4802      	ldr	r0, [pc, #8]	; (12f4 <debug_rx_cb+0x10>)
    12ea:	4b03      	ldr	r3, [pc, #12]	; (12f8 <debug_rx_cb+0x14>)
    12ec:	4798      	blx	r3
}
    12ee:	bd10      	pop	{r4, pc}
    12f0:	20000be0 	.word	0x20000be0
    12f4:	00008044 	.word	0x00008044
    12f8:	000011a9 	.word	0x000011a9

000012fc <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
    12fc:	4b0c      	ldr	r3, [pc, #48]	; (1330 <cpu_irq_enter_critical+0x34>)
    12fe:	681b      	ldr	r3, [r3, #0]
    1300:	2b00      	cmp	r3, #0
    1302:	d106      	bne.n	1312 <cpu_irq_enter_critical+0x16>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    1304:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
    1308:	2b00      	cmp	r3, #0
    130a:	d007      	beq.n	131c <cpu_irq_enter_critical+0x20>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
    130c:	2200      	movs	r2, #0
    130e:	4b09      	ldr	r3, [pc, #36]	; (1334 <cpu_irq_enter_critical+0x38>)
    1310:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
    1312:	4a07      	ldr	r2, [pc, #28]	; (1330 <cpu_irq_enter_critical+0x34>)
    1314:	6813      	ldr	r3, [r2, #0]
    1316:	3301      	adds	r3, #1
    1318:	6013      	str	r3, [r2, #0]
}
    131a:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
    131c:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
    131e:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
    1322:	2200      	movs	r2, #0
    1324:	4b04      	ldr	r3, [pc, #16]	; (1338 <cpu_irq_enter_critical+0x3c>)
    1326:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
    1328:	3201      	adds	r2, #1
    132a:	4b02      	ldr	r3, [pc, #8]	; (1334 <cpu_irq_enter_critical+0x38>)
    132c:	701a      	strb	r2, [r3, #0]
    132e:	e7f0      	b.n	1312 <cpu_irq_enter_critical+0x16>
    1330:	200009f8 	.word	0x200009f8
    1334:	200009fc 	.word	0x200009fc
    1338:	2000000c 	.word	0x2000000c

0000133c <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
    133c:	4b08      	ldr	r3, [pc, #32]	; (1360 <cpu_irq_leave_critical+0x24>)
    133e:	681a      	ldr	r2, [r3, #0]
    1340:	3a01      	subs	r2, #1
    1342:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
    1344:	681b      	ldr	r3, [r3, #0]
    1346:	2b00      	cmp	r3, #0
    1348:	d109      	bne.n	135e <cpu_irq_leave_critical+0x22>
    134a:	4b06      	ldr	r3, [pc, #24]	; (1364 <cpu_irq_leave_critical+0x28>)
    134c:	781b      	ldrb	r3, [r3, #0]
    134e:	2b00      	cmp	r3, #0
    1350:	d005      	beq.n	135e <cpu_irq_leave_critical+0x22>
		cpu_irq_enable();
    1352:	2201      	movs	r2, #1
    1354:	4b04      	ldr	r3, [pc, #16]	; (1368 <cpu_irq_leave_critical+0x2c>)
    1356:	701a      	strb	r2, [r3, #0]
    1358:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    135c:	b662      	cpsie	i
	}
}
    135e:	4770      	bx	lr
    1360:	200009f8 	.word	0x200009f8
    1364:	200009fc 	.word	0x200009fc
    1368:	2000000c 	.word	0x2000000c

0000136c <system_board_init>:
void board_init(void);
#  pragma weak board_init=system_board_init
#endif

void system_board_init(void)
{
    136c:	b5f0      	push	{r4, r5, r6, r7, lr}
    136e:	b083      	sub	sp, #12
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->direction  = PORT_PIN_DIR_INPUT;
	config->input_pull = PORT_PIN_PULL_UP;
    1370:	ac01      	add	r4, sp, #4
    1372:	2501      	movs	r5, #1
    1374:	7065      	strb	r5, [r4, #1]
	config->powersave  = false;
    1376:	2700      	movs	r7, #0
    1378:	70a7      	strb	r7, [r4, #2]
	struct port_config pin_conf;
	port_get_config_defaults(&pin_conf);

	/* Configure LEDs as outputs, turn them off */
	pin_conf.direction  = PORT_PIN_DIR_OUTPUT;
    137a:	7025      	strb	r5, [r4, #0]
	port_pin_set_config(LED_0_PIN, &pin_conf);
    137c:	0021      	movs	r1, r4
    137e:	203e      	movs	r0, #62	; 0x3e
    1380:	4e06      	ldr	r6, [pc, #24]	; (139c <system_board_init+0x30>)
    1382:	47b0      	blx	r6
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
    1384:	2280      	movs	r2, #128	; 0x80
    1386:	05d2      	lsls	r2, r2, #23
    1388:	4b05      	ldr	r3, [pc, #20]	; (13a0 <system_board_init+0x34>)
    138a:	619a      	str	r2, [r3, #24]
	port_pin_set_output_level(LED_0_PIN, LED_0_INACTIVE);

	/* Set buttons as inputs */
	pin_conf.direction  = PORT_PIN_DIR_INPUT;
    138c:	7027      	strb	r7, [r4, #0]
	pin_conf.input_pull = PORT_PIN_PULL_UP;
    138e:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(BUTTON_0_PIN, &pin_conf);
    1390:	0021      	movs	r1, r4
    1392:	200f      	movs	r0, #15
    1394:	47b0      	blx	r6
	port_pin_set_output_level(AT86RFX_RST_PIN, true);
	port_pin_set_output_level(AT86RFX_SLP_PIN, true);
	pin_conf.direction  = PORT_PIN_DIR_INPUT;
	port_pin_set_config(AT86RFX_SPI_MISO, &pin_conf);
#endif	
}
    1396:	b003      	add	sp, #12
    1398:	bdf0      	pop	{r4, r5, r6, r7, pc}
    139a:	46c0      	nop			; (mov r8, r8)
    139c:	000013a5 	.word	0x000013a5
    13a0:	41004480 	.word	0x41004480

000013a4 <port_pin_set_config>:
 *  \param[in] config    Configuration settings for the pin
 */
void port_pin_set_config(
		const uint8_t gpio_pin,
		const struct port_config *const config)
{
    13a4:	b500      	push	{lr}
    13a6:	b083      	sub	sp, #12
	config->mux_position = SYSTEM_PINMUX_GPIO;
    13a8:	ab01      	add	r3, sp, #4
    13aa:	2280      	movs	r2, #128	; 0x80
    13ac:	701a      	strb	r2, [r3, #0]

	struct system_pinmux_config pinmux_config;
	system_pinmux_get_config_defaults(&pinmux_config);

	pinmux_config.mux_position = SYSTEM_PINMUX_GPIO;
	pinmux_config.direction    = (enum system_pinmux_pin_dir)config->direction;
    13ae:	780a      	ldrb	r2, [r1, #0]
    13b0:	705a      	strb	r2, [r3, #1]
	pinmux_config.input_pull   = (enum system_pinmux_pin_pull)config->input_pull;
    13b2:	784a      	ldrb	r2, [r1, #1]
    13b4:	709a      	strb	r2, [r3, #2]
	pinmux_config.powersave    = config->powersave;
    13b6:	788a      	ldrb	r2, [r1, #2]
    13b8:	70da      	strb	r2, [r3, #3]

	system_pinmux_pin_set_config(gpio_pin, &pinmux_config);
    13ba:	0019      	movs	r1, r3
    13bc:	4b01      	ldr	r3, [pc, #4]	; (13c4 <port_pin_set_config+0x20>)
    13be:	4798      	blx	r3
}
    13c0:	b003      	add	sp, #12
    13c2:	bd00      	pop	{pc}
    13c4:	00001b09 	.word	0x00001b09

000013c8 <system_clock_source_get_hz>:
 *
 * \returns Frequency of the given clock source, in Hz.
 */
uint32_t system_clock_source_get_hz(
		const enum system_clock_source clock_source)
{
    13c8:	b510      	push	{r4, lr}
	switch (clock_source) {
    13ca:	2808      	cmp	r0, #8
    13cc:	d803      	bhi.n	13d6 <system_clock_source_get_hz+0xe>
    13ce:	0080      	lsls	r0, r0, #2
    13d0:	4b1c      	ldr	r3, [pc, #112]	; (1444 <system_clock_source_get_hz+0x7c>)
    13d2:	581b      	ldr	r3, [r3, r0]
    13d4:	469f      	mov	pc, r3

		return _system_clock_inst.dpll.frequency;
#endif

	default:
		return 0;
    13d6:	2000      	movs	r0, #0
    13d8:	e032      	b.n	1440 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.xosc.frequency;
    13da:	4b1b      	ldr	r3, [pc, #108]	; (1448 <system_clock_source_get_hz+0x80>)
    13dc:	6918      	ldr	r0, [r3, #16]
    13de:	e02f      	b.n	1440 <system_clock_source_get_hz+0x78>
		return 8000000UL >> SYSCTRL->OSC8M.bit.PRESC;
    13e0:	4b1a      	ldr	r3, [pc, #104]	; (144c <system_clock_source_get_hz+0x84>)
    13e2:	6a1b      	ldr	r3, [r3, #32]
    13e4:	059b      	lsls	r3, r3, #22
    13e6:	0f9b      	lsrs	r3, r3, #30
    13e8:	4819      	ldr	r0, [pc, #100]	; (1450 <system_clock_source_get_hz+0x88>)
    13ea:	40d8      	lsrs	r0, r3
    13ec:	e028      	b.n	1440 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.xosc32k.frequency;
    13ee:	4b16      	ldr	r3, [pc, #88]	; (1448 <system_clock_source_get_hz+0x80>)
    13f0:	6958      	ldr	r0, [r3, #20]
    13f2:	e025      	b.n	1440 <system_clock_source_get_hz+0x78>
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
    13f4:	4b14      	ldr	r3, [pc, #80]	; (1448 <system_clock_source_get_hz+0x80>)
    13f6:	681b      	ldr	r3, [r3, #0]
			return 0;
    13f8:	2000      	movs	r0, #0
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
    13fa:	079b      	lsls	r3, r3, #30
    13fc:	d520      	bpl.n	1440 <system_clock_source_get_hz+0x78>
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
    13fe:	4913      	ldr	r1, [pc, #76]	; (144c <system_clock_source_get_hz+0x84>)
    1400:	2210      	movs	r2, #16
    1402:	68cb      	ldr	r3, [r1, #12]
    1404:	421a      	tst	r2, r3
    1406:	d0fc      	beq.n	1402 <system_clock_source_get_hz+0x3a>
		switch(_system_clock_inst.dfll.control &
    1408:	4b0f      	ldr	r3, [pc, #60]	; (1448 <system_clock_source_get_hz+0x80>)
    140a:	681a      	ldr	r2, [r3, #0]
    140c:	2324      	movs	r3, #36	; 0x24
    140e:	4013      	ands	r3, r2
    1410:	2b04      	cmp	r3, #4
    1412:	d001      	beq.n	1418 <system_clock_source_get_hz+0x50>
			return 48000000UL;
    1414:	480f      	ldr	r0, [pc, #60]	; (1454 <system_clock_source_get_hz+0x8c>)
    1416:	e013      	b.n	1440 <system_clock_source_get_hz+0x78>
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
    1418:	2000      	movs	r0, #0
    141a:	4b0f      	ldr	r3, [pc, #60]	; (1458 <system_clock_source_get_hz+0x90>)
    141c:	4798      	blx	r3
					(_system_clock_inst.dfll.mul & 0xffff);
    141e:	4b0a      	ldr	r3, [pc, #40]	; (1448 <system_clock_source_get_hz+0x80>)
    1420:	689b      	ldr	r3, [r3, #8]
    1422:	041b      	lsls	r3, r3, #16
    1424:	0c1b      	lsrs	r3, r3, #16
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
    1426:	4358      	muls	r0, r3
    1428:	e00a      	b.n	1440 <system_clock_source_get_hz+0x78>
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
    142a:	2350      	movs	r3, #80	; 0x50
    142c:	4a07      	ldr	r2, [pc, #28]	; (144c <system_clock_source_get_hz+0x84>)
    142e:	5cd3      	ldrb	r3, [r2, r3]
			return 0;
    1430:	2000      	movs	r0, #0
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
    1432:	075b      	lsls	r3, r3, #29
    1434:	d504      	bpl.n	1440 <system_clock_source_get_hz+0x78>
		return _system_clock_inst.dpll.frequency;
    1436:	4b04      	ldr	r3, [pc, #16]	; (1448 <system_clock_source_get_hz+0x80>)
    1438:	68d8      	ldr	r0, [r3, #12]
    143a:	e001      	b.n	1440 <system_clock_source_get_hz+0x78>
		return 32768UL;
    143c:	2080      	movs	r0, #128	; 0x80
    143e:	0200      	lsls	r0, r0, #8
	}
}
    1440:	bd10      	pop	{r4, pc}
    1442:	46c0      	nop			; (mov r8, r8)
    1444:	0000805c 	.word	0x0000805c
    1448:	20000a00 	.word	0x20000a00
    144c:	40000800 	.word	0x40000800
    1450:	007a1200 	.word	0x007a1200
    1454:	02dc6c00 	.word	0x02dc6c00
    1458:	00001a2d 	.word	0x00001a2d

0000145c <system_clock_source_osc8m_set_config>:
 *
 * \param[in] config  OSC8M configuration structure containing the new config
 */
void system_clock_source_osc8m_set_config(
		struct system_clock_source_osc8m_config *const config)
{
    145c:	b570      	push	{r4, r5, r6, lr}
	SYSCTRL_OSC8M_Type temp = SYSCTRL->OSC8M;
    145e:	490c      	ldr	r1, [pc, #48]	; (1490 <system_clock_source_osc8m_set_config+0x34>)
    1460:	6a0b      	ldr	r3, [r1, #32]

	/* Use temporary struct to reduce register access */
	temp.bit.PRESC    = config->prescaler;
    1462:	7804      	ldrb	r4, [r0, #0]
	temp.bit.ONDEMAND = config->on_demand;
    1464:	7885      	ldrb	r5, [r0, #2]
	temp.bit.RUNSTDBY = config->run_in_standby;

	SYSCTRL->OSC8M = temp;
    1466:	7840      	ldrb	r0, [r0, #1]
    1468:	2201      	movs	r2, #1
    146a:	4010      	ands	r0, r2
    146c:	0180      	lsls	r0, r0, #6
    146e:	2640      	movs	r6, #64	; 0x40
    1470:	43b3      	bics	r3, r6
    1472:	4303      	orrs	r3, r0
    1474:	402a      	ands	r2, r5
    1476:	01d2      	lsls	r2, r2, #7
    1478:	2080      	movs	r0, #128	; 0x80
    147a:	4383      	bics	r3, r0
    147c:	4313      	orrs	r3, r2
    147e:	2203      	movs	r2, #3
    1480:	4022      	ands	r2, r4
    1482:	0212      	lsls	r2, r2, #8
    1484:	4803      	ldr	r0, [pc, #12]	; (1494 <system_clock_source_osc8m_set_config+0x38>)
    1486:	4003      	ands	r3, r0
    1488:	4313      	orrs	r3, r2
    148a:	620b      	str	r3, [r1, #32]
}
    148c:	bd70      	pop	{r4, r5, r6, pc}
    148e:	46c0      	nop			; (mov r8, r8)
    1490:	40000800 	.word	0x40000800
    1494:	fffffcff 	.word	0xfffffcff

00001498 <system_clock_source_xosc32k_set_config>:
 *
 * \param[in] config  XOSC32K configuration structure containing the new config
 */
void system_clock_source_xosc32k_set_config(
		struct system_clock_source_xosc32k_config *const config)
{
    1498:	b5f0      	push	{r4, r5, r6, r7, lr}
    149a:	46de      	mov	lr, fp
    149c:	4657      	mov	r7, sl
    149e:	464e      	mov	r6, r9
    14a0:	4645      	mov	r5, r8
    14a2:	b5e0      	push	{r5, r6, r7, lr}
    14a4:	0001      	movs	r1, r0
	SYSCTRL_XOSC32K_Type temp = SYSCTRL->XOSC32K;
    14a6:	4b26      	ldr	r3, [pc, #152]	; (1540 <system_clock_source_xosc32k_set_config+0xa8>)
    14a8:	469b      	mov	fp, r3
    14aa:	8a9b      	ldrh	r3, [r3, #20]

	temp.bit.STARTUP = config->startup_time;
    14ac:	7845      	ldrb	r5, [r0, #1]

	if (config->external_clock == SYSTEM_CLOCK_EXTERNAL_CRYSTAL) {
    14ae:	7800      	ldrb	r0, [r0, #0]
    14b0:	4242      	negs	r2, r0
    14b2:	4142      	adcs	r2, r0
    14b4:	4691      	mov	r9, r2
		temp.bit.XTALEN = 1;
	} else {
		temp.bit.XTALEN = 0;
	}

	temp.bit.AAMPEN = config->auto_gain_control;
    14b6:	7888      	ldrb	r0, [r1, #2]
	temp.bit.EN1K = config->enable_1khz_output;
    14b8:	78ca      	ldrb	r2, [r1, #3]
    14ba:	4694      	mov	ip, r2
	temp.bit.EN32K = config->enable_32khz_output;
    14bc:	790a      	ldrb	r2, [r1, #4]
    14be:	4690      	mov	r8, r2

	temp.bit.ONDEMAND = config->on_demand;
    14c0:	7b4e      	ldrb	r6, [r1, #13]
	temp.bit.RUNSTDBY = config->run_in_standby;
    14c2:	7b0f      	ldrb	r7, [r1, #12]
	temp.bit.WRTLOCK  = config->write_once;
    14c4:	7b8c      	ldrb	r4, [r1, #14]

	/* Cache the new frequency in case the user needs to check the current
	 * operating frequency later */
	_system_clock_inst.xosc32k.frequency = config->frequency;
    14c6:	688a      	ldr	r2, [r1, #8]
    14c8:	491e      	ldr	r1, [pc, #120]	; (1544 <system_clock_source_xosc32k_set_config+0xac>)
    14ca:	614a      	str	r2, [r1, #20]

	SYSCTRL->XOSC32K = temp;
    14cc:	2101      	movs	r1, #1
    14ce:	464a      	mov	r2, r9
    14d0:	0092      	lsls	r2, r2, #2
    14d2:	4691      	mov	r9, r2
    14d4:	2204      	movs	r2, #4
    14d6:	4393      	bics	r3, r2
    14d8:	464a      	mov	r2, r9
    14da:	4313      	orrs	r3, r2
    14dc:	4642      	mov	r2, r8
    14de:	400a      	ands	r2, r1
    14e0:	00d2      	lsls	r2, r2, #3
    14e2:	4690      	mov	r8, r2
    14e4:	2208      	movs	r2, #8
    14e6:	4393      	bics	r3, r2
    14e8:	4642      	mov	r2, r8
    14ea:	4313      	orrs	r3, r2
    14ec:	4662      	mov	r2, ip
    14ee:	400a      	ands	r2, r1
    14f0:	0112      	lsls	r2, r2, #4
    14f2:	4694      	mov	ip, r2
    14f4:	2210      	movs	r2, #16
    14f6:	4393      	bics	r3, r2
    14f8:	4662      	mov	r2, ip
    14fa:	4313      	orrs	r3, r2
    14fc:	4008      	ands	r0, r1
    14fe:	0140      	lsls	r0, r0, #5
    1500:	2220      	movs	r2, #32
    1502:	4393      	bics	r3, r2
    1504:	4303      	orrs	r3, r0
    1506:	400f      	ands	r7, r1
    1508:	01bf      	lsls	r7, r7, #6
    150a:	2040      	movs	r0, #64	; 0x40
    150c:	4383      	bics	r3, r0
    150e:	433b      	orrs	r3, r7
    1510:	400e      	ands	r6, r1
    1512:	01f6      	lsls	r6, r6, #7
    1514:	3040      	adds	r0, #64	; 0x40
    1516:	4383      	bics	r3, r0
    1518:	4333      	orrs	r3, r6
    151a:	3879      	subs	r0, #121	; 0x79
    151c:	4005      	ands	r5, r0
    151e:	022d      	lsls	r5, r5, #8
    1520:	4809      	ldr	r0, [pc, #36]	; (1548 <system_clock_source_xosc32k_set_config+0xb0>)
    1522:	4003      	ands	r3, r0
    1524:	432b      	orrs	r3, r5
    1526:	4021      	ands	r1, r4
    1528:	0309      	lsls	r1, r1, #12
    152a:	4808      	ldr	r0, [pc, #32]	; (154c <system_clock_source_xosc32k_set_config+0xb4>)
    152c:	4003      	ands	r3, r0
    152e:	430b      	orrs	r3, r1
    1530:	465a      	mov	r2, fp
    1532:	8293      	strh	r3, [r2, #20]
}
    1534:	bc3c      	pop	{r2, r3, r4, r5}
    1536:	4690      	mov	r8, r2
    1538:	4699      	mov	r9, r3
    153a:	46a2      	mov	sl, r4
    153c:	46ab      	mov	fp, r5
    153e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1540:	40000800 	.word	0x40000800
    1544:	20000a00 	.word	0x20000a00
    1548:	fffff8ff 	.word	0xfffff8ff
    154c:	ffffefff 	.word	0xffffefff

00001550 <system_clock_source_dfll_set_config>:
 *
 * \param[in] config  DFLL configuration structure containing the new config
 */
void system_clock_source_dfll_set_config(
		struct system_clock_source_dfll_config *const config)
{
    1550:	b510      	push	{r4, lr}
	_system_clock_inst.dfll.val =
			SYSCTRL_DFLLVAL_COARSE(config->coarse_value) |
    1552:	7a03      	ldrb	r3, [r0, #8]
    1554:	069b      	lsls	r3, r3, #26
    1556:	0c1b      	lsrs	r3, r3, #16
			SYSCTRL_DFLLVAL_FINE(config->fine_value);
    1558:	8942      	ldrh	r2, [r0, #10]
    155a:	0592      	lsls	r2, r2, #22
    155c:	0d92      	lsrs	r2, r2, #22
			SYSCTRL_DFLLVAL_COARSE(config->coarse_value) |
    155e:	4313      	orrs	r3, r2
	_system_clock_inst.dfll.val =
    1560:	4918      	ldr	r1, [pc, #96]	; (15c4 <system_clock_source_dfll_set_config+0x74>)
    1562:	604b      	str	r3, [r1, #4]

	_system_clock_inst.dfll.control =
			(uint32_t)config->wakeup_lock     |
    1564:	7983      	ldrb	r3, [r0, #6]
    1566:	79c2      	ldrb	r2, [r0, #7]
    1568:	4313      	orrs	r3, r2
			(uint32_t)config->stable_tracking |
			(uint32_t)config->quick_lock      |
    156a:	8842      	ldrh	r2, [r0, #2]
    156c:	8884      	ldrh	r4, [r0, #4]
    156e:	4322      	orrs	r2, r4
    1570:	4313      	orrs	r3, r2
			(uint32_t)config->chill_cycle     |
			((uint32_t)config->on_demand << SYSCTRL_DFLLCTRL_ONDEMAND_Pos);
    1572:	7842      	ldrb	r2, [r0, #1]
    1574:	01d2      	lsls	r2, r2, #7
			(uint32_t)config->chill_cycle     |
    1576:	4313      	orrs	r3, r2
	_system_clock_inst.dfll.control =
    1578:	600b      	str	r3, [r1, #0]

	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_CLOSED) {
    157a:	7803      	ldrb	r3, [r0, #0]
    157c:	2b04      	cmp	r3, #4
    157e:	d011      	beq.n	15a4 <system_clock_source_dfll_set_config+0x54>
				SYSCTRL_DFLLMUL_MUL(config->multiply_factor);

		/* Enable the closed loop mode */
		_system_clock_inst.dfll.control |= config->loop_mode;
	}
	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_USB_RECOVERY) {
    1580:	2b20      	cmp	r3, #32
    1582:	d10e      	bne.n	15a2 <system_clock_source_dfll_set_config+0x52>

		_system_clock_inst.dfll.mul =
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
    1584:	7b03      	ldrb	r3, [r0, #12]
    1586:	069b      	lsls	r3, r3, #26
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
				SYSCTRL_DFLLMUL_MUL(config->multiply_factor);
    1588:	8a02      	ldrh	r2, [r0, #16]
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
    158a:	4313      	orrs	r3, r2
    158c:	89c2      	ldrh	r2, [r0, #14]
    158e:	0412      	lsls	r2, r2, #16
    1590:	490d      	ldr	r1, [pc, #52]	; (15c8 <system_clock_source_dfll_set_config+0x78>)
    1592:	400a      	ands	r2, r1
    1594:	4313      	orrs	r3, r2
		_system_clock_inst.dfll.mul =
    1596:	4a0b      	ldr	r2, [pc, #44]	; (15c4 <system_clock_source_dfll_set_config+0x74>)
    1598:	6093      	str	r3, [r2, #8]

		/* Enable the USB recovery mode */
		_system_clock_inst.dfll.control |= config->loop_mode |
    159a:	6811      	ldr	r1, [r2, #0]
    159c:	4b0b      	ldr	r3, [pc, #44]	; (15cc <system_clock_source_dfll_set_config+0x7c>)
    159e:	430b      	orrs	r3, r1
    15a0:	6013      	str	r3, [r2, #0]
				SYSCTRL_DFLLCTRL_MODE | SYSCTRL_DFLLCTRL_BPLCKC;
	}
}
    15a2:	bd10      	pop	{r4, pc}
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
    15a4:	7b03      	ldrb	r3, [r0, #12]
    15a6:	069b      	lsls	r3, r3, #26
				SYSCTRL_DFLLMUL_MUL(config->multiply_factor);
    15a8:	8a02      	ldrh	r2, [r0, #16]
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
    15aa:	4313      	orrs	r3, r2
    15ac:	89c2      	ldrh	r2, [r0, #14]
    15ae:	0412      	lsls	r2, r2, #16
    15b0:	4905      	ldr	r1, [pc, #20]	; (15c8 <system_clock_source_dfll_set_config+0x78>)
    15b2:	400a      	ands	r2, r1
    15b4:	4313      	orrs	r3, r2
		_system_clock_inst.dfll.mul =
    15b6:	4a03      	ldr	r2, [pc, #12]	; (15c4 <system_clock_source_dfll_set_config+0x74>)
    15b8:	6093      	str	r3, [r2, #8]
		_system_clock_inst.dfll.control |= config->loop_mode;
    15ba:	6813      	ldr	r3, [r2, #0]
    15bc:	2104      	movs	r1, #4
    15be:	430b      	orrs	r3, r1
    15c0:	6013      	str	r3, [r2, #0]
    15c2:	e7ee      	b.n	15a2 <system_clock_source_dfll_set_config+0x52>
    15c4:	20000a00 	.word	0x20000a00
    15c8:	03ff0000 	.word	0x03ff0000
    15cc:	00000424 	.word	0x00000424

000015d0 <system_clock_source_enable>:
 *                                 device
 */
enum status_code system_clock_source_enable(
		const enum system_clock_source clock_source)
{
	switch (clock_source) {
    15d0:	2808      	cmp	r0, #8
    15d2:	d803      	bhi.n	15dc <system_clock_source_enable+0xc>
    15d4:	0080      	lsls	r0, r0, #2
    15d6:	4b25      	ldr	r3, [pc, #148]	; (166c <system_clock_source_enable+0x9c>)
    15d8:	581b      	ldr	r3, [r3, r0]
    15da:	469f      	mov	pc, r3
		/* Always enabled */
		return STATUS_OK;

	default:
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
    15dc:	2017      	movs	r0, #23
    15de:	e044      	b.n	166a <system_clock_source_enable+0x9a>
		SYSCTRL->OSC8M.reg |= SYSCTRL_OSC8M_ENABLE;
    15e0:	4a23      	ldr	r2, [pc, #140]	; (1670 <system_clock_source_enable+0xa0>)
    15e2:	6a13      	ldr	r3, [r2, #32]
    15e4:	2102      	movs	r1, #2
    15e6:	430b      	orrs	r3, r1
    15e8:	6213      	str	r3, [r2, #32]
		return STATUS_OK;
    15ea:	2000      	movs	r0, #0
    15ec:	e03d      	b.n	166a <system_clock_source_enable+0x9a>
		SYSCTRL->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
    15ee:	4a20      	ldr	r2, [pc, #128]	; (1670 <system_clock_source_enable+0xa0>)
    15f0:	6993      	ldr	r3, [r2, #24]
    15f2:	2102      	movs	r1, #2
    15f4:	430b      	orrs	r3, r1
    15f6:	6193      	str	r3, [r2, #24]
	}

	return STATUS_OK;
    15f8:	2000      	movs	r0, #0
		break;
    15fa:	e036      	b.n	166a <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC.reg |= SYSCTRL_XOSC_ENABLE;
    15fc:	4a1c      	ldr	r2, [pc, #112]	; (1670 <system_clock_source_enable+0xa0>)
    15fe:	8a13      	ldrh	r3, [r2, #16]
    1600:	2102      	movs	r1, #2
    1602:	430b      	orrs	r3, r1
    1604:	8213      	strh	r3, [r2, #16]
	return STATUS_OK;
    1606:	2000      	movs	r0, #0
		break;
    1608:	e02f      	b.n	166a <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC32K.reg |= SYSCTRL_XOSC32K_ENABLE;
    160a:	4a19      	ldr	r2, [pc, #100]	; (1670 <system_clock_source_enable+0xa0>)
    160c:	8a93      	ldrh	r3, [r2, #20]
    160e:	2102      	movs	r1, #2
    1610:	430b      	orrs	r3, r1
    1612:	8293      	strh	r3, [r2, #20]
	return STATUS_OK;
    1614:	2000      	movs	r0, #0
		break;
    1616:	e028      	b.n	166a <system_clock_source_enable+0x9a>
		_system_clock_inst.dfll.control |= SYSCTRL_DFLLCTRL_ENABLE;
    1618:	4916      	ldr	r1, [pc, #88]	; (1674 <system_clock_source_enable+0xa4>)
    161a:	680b      	ldr	r3, [r1, #0]
    161c:	2202      	movs	r2, #2
    161e:	4313      	orrs	r3, r2
    1620:	600b      	str	r3, [r1, #0]
	SYSCTRL->DFLLCTRL.reg = SYSCTRL_DFLLCTRL_ENABLE;
    1622:	4b13      	ldr	r3, [pc, #76]	; (1670 <system_clock_source_enable+0xa0>)
    1624:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
    1626:	0019      	movs	r1, r3
    1628:	320e      	adds	r2, #14
    162a:	68cb      	ldr	r3, [r1, #12]
    162c:	421a      	tst	r2, r3
    162e:	d0fc      	beq.n	162a <system_clock_source_enable+0x5a>
	SYSCTRL->DFLLMUL.reg = _system_clock_inst.dfll.mul;
    1630:	4a10      	ldr	r2, [pc, #64]	; (1674 <system_clock_source_enable+0xa4>)
    1632:	6891      	ldr	r1, [r2, #8]
    1634:	4b0e      	ldr	r3, [pc, #56]	; (1670 <system_clock_source_enable+0xa0>)
    1636:	62d9      	str	r1, [r3, #44]	; 0x2c
	SYSCTRL->DFLLVAL.reg = _system_clock_inst.dfll.val;
    1638:	6852      	ldr	r2, [r2, #4]
    163a:	629a      	str	r2, [r3, #40]	; 0x28
	SYSCTRL->DFLLCTRL.reg = 0;
    163c:	2200      	movs	r2, #0
    163e:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
    1640:	0019      	movs	r1, r3
    1642:	3210      	adds	r2, #16
    1644:	68cb      	ldr	r3, [r1, #12]
    1646:	421a      	tst	r2, r3
    1648:	d0fc      	beq.n	1644 <system_clock_source_enable+0x74>
	SYSCTRL->DFLLCTRL.reg = _system_clock_inst.dfll.control;
    164a:	4b0a      	ldr	r3, [pc, #40]	; (1674 <system_clock_source_enable+0xa4>)
    164c:	681b      	ldr	r3, [r3, #0]
    164e:	b29b      	uxth	r3, r3
    1650:	4a07      	ldr	r2, [pc, #28]	; (1670 <system_clock_source_enable+0xa0>)
    1652:	8493      	strh	r3, [r2, #36]	; 0x24
	return STATUS_OK;
    1654:	2000      	movs	r0, #0
    1656:	e008      	b.n	166a <system_clock_source_enable+0x9a>
		SYSCTRL->DPLLCTRLA.reg |= SYSCTRL_DPLLCTRLA_ENABLE;
    1658:	4905      	ldr	r1, [pc, #20]	; (1670 <system_clock_source_enable+0xa0>)
    165a:	2244      	movs	r2, #68	; 0x44
    165c:	5c8b      	ldrb	r3, [r1, r2]
    165e:	2002      	movs	r0, #2
    1660:	4303      	orrs	r3, r0
    1662:	548b      	strb	r3, [r1, r2]
	return STATUS_OK;
    1664:	2000      	movs	r0, #0
		break;
    1666:	e000      	b.n	166a <system_clock_source_enable+0x9a>
		return STATUS_OK;
    1668:	2000      	movs	r0, #0
}
    166a:	4770      	bx	lr
    166c:	00008080 	.word	0x00008080
    1670:	40000800 	.word	0x40000800
    1674:	20000a00 	.word	0x20000a00

00001678 <system_clock_init>:
 * \note OSC8M is always enabled and if user selects other clocks for GCLK generators,
 * the OSC8M default enable can be disabled after system_clock_init. Make sure the
 * clock switch successfully before disabling OSC8M.
 */
void system_clock_init(void)
{
    1678:	b5f0      	push	{r4, r5, r6, r7, lr}
    167a:	b08f      	sub	sp, #60	; 0x3c
	/* Various bits in the INTFLAG register can be set to one at startup.
	   This will ensure that these bits are cleared */
	SYSCTRL->INTFLAG.reg = SYSCTRL_INTFLAG_BOD33RDY | SYSCTRL_INTFLAG_BOD33DET |
    167c:	22c2      	movs	r2, #194	; 0xc2
    167e:	00d2      	lsls	r2, r2, #3
    1680:	4b47      	ldr	r3, [pc, #284]	; (17a0 <system_clock_init+0x128>)
    1682:	609a      	str	r2, [r3, #8]
static inline void system_flash_set_waitstates(uint8_t wait_states)
{
	Assert(NVMCTRL_CTRLB_RWS((uint32_t)wait_states) ==
			((uint32_t)wait_states << NVMCTRL_CTRLB_RWS_Pos));

	NVMCTRL->CTRLB.bit.RWS = wait_states;
    1684:	4a47      	ldr	r2, [pc, #284]	; (17a4 <system_clock_init+0x12c>)
    1686:	6853      	ldr	r3, [r2, #4]
    1688:	211e      	movs	r1, #30
    168a:	438b      	bics	r3, r1
    168c:	391a      	subs	r1, #26
    168e:	430b      	orrs	r3, r1
    1690:	6053      	str	r3, [r2, #4]
	gclk_conf.source_generator = GCLK_GENERATOR_2;
    1692:	2202      	movs	r2, #2
    1694:	ab01      	add	r3, sp, #4
    1696:	701a      	strb	r2, [r3, #0]
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
    1698:	2400      	movs	r4, #0
		system_gclk_chan_set_config(gclk_id, &gclk_conf);
    169a:	4d43      	ldr	r5, [pc, #268]	; (17a8 <system_clock_init+0x130>)
    169c:	b2e0      	uxtb	r0, r4
    169e:	a901      	add	r1, sp, #4
    16a0:	47a8      	blx	r5
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
    16a2:	3401      	adds	r4, #1
    16a4:	2c25      	cmp	r4, #37	; 0x25
    16a6:	d1f9      	bne.n	169c <system_clock_init+0x24>
	config->external_clock      = SYSTEM_CLOCK_EXTERNAL_CRYSTAL;
    16a8:	a80a      	add	r0, sp, #40	; 0x28
    16aa:	2300      	movs	r3, #0
    16ac:	7003      	strb	r3, [r0, #0]
	config->auto_gain_control   = false;
    16ae:	7083      	strb	r3, [r0, #2]
	config->frequency           = 32768UL;
    16b0:	2280      	movs	r2, #128	; 0x80
    16b2:	0212      	lsls	r2, r2, #8
    16b4:	6082      	str	r2, [r0, #8]
	config->enable_1khz_output  = false;
    16b6:	70c3      	strb	r3, [r0, #3]
	config->enable_32khz_output = true;
    16b8:	2201      	movs	r2, #1
    16ba:	7102      	strb	r2, [r0, #4]
	config->run_in_standby      = false;
    16bc:	7303      	strb	r3, [r0, #12]
	config->write_once          = false;
    16be:	7383      	strb	r3, [r0, #14]
	struct system_clock_source_xosc32k_config xosc32k_conf;
	system_clock_source_xosc32k_get_config_defaults(&xosc32k_conf);

	xosc32k_conf.frequency           = 32768UL;
	xosc32k_conf.external_clock      = CONF_CLOCK_XOSC32K_EXTERNAL_CRYSTAL;
	xosc32k_conf.startup_time        = CONF_CLOCK_XOSC32K_STARTUP_TIME;
    16c0:	3202      	adds	r2, #2
    16c2:	7042      	strb	r2, [r0, #1]
	xosc32k_conf.auto_gain_control   = CONF_CLOCK_XOSC32K_AUTO_AMPLITUDE_CONTROL;
	xosc32k_conf.enable_1khz_output  = CONF_CLOCK_XOSC32K_ENABLE_1KHZ_OUPUT;
	xosc32k_conf.enable_32khz_output = CONF_CLOCK_XOSC32K_ENABLE_32KHZ_OUTPUT;
	xosc32k_conf.on_demand           = false;
    16c4:	7343      	strb	r3, [r0, #13]
	xosc32k_conf.run_in_standby      = CONF_CLOCK_XOSC32K_RUN_IN_STANDBY;

	system_clock_source_xosc32k_set_config(&xosc32k_conf);
    16c6:	4b39      	ldr	r3, [pc, #228]	; (17ac <system_clock_init+0x134>)
    16c8:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_XOSC32K);
    16ca:	2005      	movs	r0, #5
    16cc:	4b38      	ldr	r3, [pc, #224]	; (17b0 <system_clock_init+0x138>)
    16ce:	4798      	blx	r3
	return ((SYSCTRL->PCLKSR.reg & mask) == mask);
    16d0:	4933      	ldr	r1, [pc, #204]	; (17a0 <system_clock_init+0x128>)
    16d2:	2202      	movs	r2, #2
    16d4:	68cb      	ldr	r3, [r1, #12]
	while(!system_clock_source_is_ready(SYSTEM_CLOCK_SOURCE_XOSC32K));
    16d6:	421a      	tst	r2, r3
    16d8:	d0fc      	beq.n	16d4 <system_clock_init+0x5c>
	if (CONF_CLOCK_XOSC32K_ON_DEMAND) {
		SYSCTRL->XOSC32K.bit.ONDEMAND = 1;
    16da:	4a31      	ldr	r2, [pc, #196]	; (17a0 <system_clock_init+0x128>)
    16dc:	8a93      	ldrh	r3, [r2, #20]
    16de:	2180      	movs	r1, #128	; 0x80
    16e0:	430b      	orrs	r3, r1
    16e2:	8293      	strh	r3, [r2, #20]
	config->quick_lock      = SYSTEM_CLOCK_DFLL_QUICK_LOCK_ENABLE;
    16e4:	ab05      	add	r3, sp, #20
    16e6:	2100      	movs	r1, #0
    16e8:	2200      	movs	r2, #0
    16ea:	8059      	strh	r1, [r3, #2]
	config->chill_cycle     = SYSTEM_CLOCK_DFLL_CHILL_CYCLE_ENABLE;
    16ec:	8099      	strh	r1, [r3, #4]
	config->wakeup_lock     = SYSTEM_CLOCK_DFLL_WAKEUP_LOCK_KEEP;
    16ee:	719a      	strb	r2, [r3, #6]
	config->stable_tracking = SYSTEM_CLOCK_DFLL_STABLE_TRACKING_TRACK_AFTER_LOCK;
    16f0:	71da      	strb	r2, [r3, #7]
	config->fine_value      = 0xff / 4; /* Midpoint */
    16f2:	313f      	adds	r1, #63	; 0x3f
    16f4:	8159      	strh	r1, [r3, #10]
	/* DFLL Config (Open and Closed Loop) */
#if CONF_CLOCK_DFLL_ENABLE == true
	struct system_clock_source_dfll_config dfll_conf;
	system_clock_source_dfll_get_config_defaults(&dfll_conf);

	dfll_conf.loop_mode      = CONF_CLOCK_DFLL_LOOP_MODE;
    16f6:	393b      	subs	r1, #59	; 0x3b
    16f8:	7019      	strb	r1, [r3, #0]
	dfll_conf.on_demand      = false;
    16fa:	705a      	strb	r2, [r3, #1]
	/* Using DFLL48M COARSE CAL value from NVM Software Calibration Area Mapping
	   in DFLL.COARSE helps to output a frequency close to 48 MHz.*/
#define NVM_DFLL_COARSE_POS    58 /* DFLL48M Coarse calibration value bit position.*/
#define NVM_DFLL_COARSE_SIZE   6  /* DFLL48M Coarse calibration value bit size.*/

	uint32_t coarse =( *((uint32_t *)(NVMCTRL_OTP4)
    16fc:	4b2d      	ldr	r3, [pc, #180]	; (17b4 <system_clock_init+0x13c>)
    16fe:	681b      	ldr	r3, [r3, #0]
    1700:	0e9b      	lsrs	r3, r3, #26
			+ (NVM_DFLL_COARSE_POS / 32))
		>> (NVM_DFLL_COARSE_POS % 32))
		& ((1 << NVM_DFLL_COARSE_SIZE) - 1);
	/* In some revision chip, the coarse calibration value is not correct. */
	if (coarse == 0x3f) {
    1702:	2b3f      	cmp	r3, #63	; 0x3f
    1704:	d04a      	beq.n	179c <system_clock_init+0x124>
		coarse = 0x1f;
	}
	dfll_conf.coarse_value = coarse;
    1706:	a805      	add	r0, sp, #20
    1708:	7203      	strb	r3, [r0, #8]
#  else
	dfll_conf.chill_cycle = SYSTEM_CLOCK_DFLL_CHILL_CYCLE_DISABLE;
#  endif

	if (CONF_CLOCK_DFLL_LOOP_MODE == SYSTEM_CLOCK_DFLL_LOOP_MODE_CLOSED) {
		dfll_conf.multiply_factor = CONF_CLOCK_DFLL_MULTIPLY_FACTOR;
    170a:	4b2b      	ldr	r3, [pc, #172]	; (17b8 <system_clock_init+0x140>)
    170c:	8203      	strh	r3, [r0, #16]
	}

	dfll_conf.coarse_max_step = CONF_CLOCK_DFLL_MAX_COARSE_STEP_SIZE;
    170e:	2307      	movs	r3, #7
    1710:	7303      	strb	r3, [r0, #12]
	dfll_conf.fine_max_step   = CONF_CLOCK_DFLL_MAX_FINE_STEP_SIZE;
    1712:	3338      	adds	r3, #56	; 0x38
    1714:	81c3      	strh	r3, [r0, #14]
		dfll_conf.chill_cycle = SYSTEM_CLOCK_DFLL_CHILL_CYCLE_DISABLE;

		dfll_conf.multiply_factor = 48000;
	}

	system_clock_source_dfll_set_config(&dfll_conf);
    1716:	4b29      	ldr	r3, [pc, #164]	; (17bc <system_clock_init+0x144>)
    1718:	4798      	blx	r3
	config->run_in_standby  = false;
    171a:	a804      	add	r0, sp, #16
    171c:	2500      	movs	r5, #0
    171e:	7045      	strb	r5, [r0, #1]
	config->on_demand       = true;
    1720:	2601      	movs	r6, #1
    1722:	7086      	strb	r6, [r0, #2]

	/* OSC8M */
	struct system_clock_source_osc8m_config osc8m_conf;
	system_clock_source_osc8m_get_config_defaults(&osc8m_conf);

	osc8m_conf.prescaler       = CONF_CLOCK_OSC8M_PRESCALER;
    1724:	7005      	strb	r5, [r0, #0]
	osc8m_conf.on_demand       = CONF_CLOCK_OSC8M_ON_DEMAND;
	osc8m_conf.run_in_standby  = CONF_CLOCK_OSC8M_RUN_IN_STANDBY;

	system_clock_source_osc8m_set_config(&osc8m_conf);
    1726:	4b26      	ldr	r3, [pc, #152]	; (17c0 <system_clock_init+0x148>)
    1728:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_OSC8M);
    172a:	2006      	movs	r0, #6
    172c:	4f20      	ldr	r7, [pc, #128]	; (17b0 <system_clock_init+0x138>)
    172e:	47b8      	blx	r7


	/* GCLK */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	system_gclk_init();
    1730:	4b24      	ldr	r3, [pc, #144]	; (17c4 <system_clock_init+0x14c>)
    1732:	4798      	blx	r3
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->division_factor    = 1;
    1734:	ac01      	add	r4, sp, #4
    1736:	9602      	str	r6, [sp, #8]
	config->high_when_disabled = false;
    1738:	7065      	strb	r5, [r4, #1]
#elif (SAMC20) || (SAMC21)
	config->source_clock       = GCLK_SOURCE_OSC48M;
#else
	config->source_clock       = GCLK_SOURCE_OSC8M;
#endif
	config->run_in_standby     = false;
    173a:	7225      	strb	r5, [r4, #8]
	config->output_enable      = false;
    173c:	7265      	strb	r5, [r4, #9]

	/* Configure all GCLK generators except for the main generator, which
	 * is configured later after all other clock systems are set up */
	MREPEAT(GCLK_GEN_NUM, _CONF_CLOCK_GCLK_CONFIG_NONMAIN, ~);
    173e:	2305      	movs	r3, #5
    1740:	7023      	strb	r3, [r4, #0]
    1742:	0021      	movs	r1, r4
    1744:	2001      	movs	r0, #1
    1746:	4b20      	ldr	r3, [pc, #128]	; (17c8 <system_clock_init+0x150>)
    1748:	4798      	blx	r3
    174a:	2001      	movs	r0, #1
    174c:	4b1f      	ldr	r3, [pc, #124]	; (17cc <system_clock_init+0x154>)
    174e:	4798      	blx	r3
	/* Enable DFLL reference clock if in closed loop mode */
	if (CONF_CLOCK_DFLL_LOOP_MODE == SYSTEM_CLOCK_DFLL_LOOP_MODE_CLOSED) {
		struct system_gclk_chan_config dfll_gclk_chan_conf;

		system_gclk_chan_get_config_defaults(&dfll_gclk_chan_conf);
		dfll_gclk_chan_conf.source_generator = CONF_CLOCK_DFLL_SOURCE_GCLK_GENERATOR;
    1750:	7026      	strb	r6, [r4, #0]
		system_gclk_chan_set_config(SYSCTRL_GCLK_ID_DFLL48, &dfll_gclk_chan_conf);
    1752:	0021      	movs	r1, r4
    1754:	2000      	movs	r0, #0
    1756:	4b14      	ldr	r3, [pc, #80]	; (17a8 <system_clock_init+0x130>)
    1758:	4798      	blx	r3
		system_gclk_chan_enable(SYSCTRL_GCLK_ID_DFLL48);
    175a:	2000      	movs	r0, #0
    175c:	4b1c      	ldr	r3, [pc, #112]	; (17d0 <system_clock_init+0x158>)
    175e:	4798      	blx	r3
#endif


	/* DFLL Enable (Open and Closed Loop) */
#if CONF_CLOCK_DFLL_ENABLE == true
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_DFLL);
    1760:	2007      	movs	r0, #7
    1762:	47b8      	blx	r7
	return ((SYSCTRL->PCLKSR.reg & mask) == mask);
    1764:	490e      	ldr	r1, [pc, #56]	; (17a0 <system_clock_init+0x128>)
    1766:	22d0      	movs	r2, #208	; 0xd0
    1768:	68cb      	ldr	r3, [r1, #12]
    176a:	4013      	ands	r3, r2
	while(!system_clock_source_is_ready(SYSTEM_CLOCK_SOURCE_DFLL));
    176c:	2bd0      	cmp	r3, #208	; 0xd0
    176e:	d1fb      	bne.n	1768 <system_clock_init+0xf0>
	PM->CPUSEL.reg = (uint32_t)divider;
    1770:	4a18      	ldr	r2, [pc, #96]	; (17d4 <system_clock_init+0x15c>)
    1772:	2300      	movs	r3, #0
    1774:	7213      	strb	r3, [r2, #8]
			PM->APBASEL.reg = (uint32_t)divider;
    1776:	7253      	strb	r3, [r2, #9]
			PM->APBBSEL.reg = (uint32_t)divider;
    1778:	7293      	strb	r3, [r2, #10]
			PM->APBCSEL.reg = (uint32_t)divider;
    177a:	72d3      	strb	r3, [r2, #11]
	config->division_factor    = 1;
    177c:	a901      	add	r1, sp, #4
    177e:	2201      	movs	r2, #1
    1780:	604a      	str	r2, [r1, #4]
	config->high_when_disabled = false;
    1782:	704b      	strb	r3, [r1, #1]
	config->run_in_standby     = false;
    1784:	720b      	strb	r3, [r1, #8]
	config->output_enable      = false;
    1786:	724b      	strb	r3, [r1, #9]
	system_apb_clock_set_divider(SYSTEM_CLOCK_APB_APBC, CONF_CLOCK_APBC_DIVIDER);

	/* GCLK 0 */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	/* Configure the main GCLK last as it might depend on other generators */
	_CONF_CLOCK_GCLK_CONFIG(0, ~);
    1788:	3307      	adds	r3, #7
    178a:	700b      	strb	r3, [r1, #0]
    178c:	2000      	movs	r0, #0
    178e:	4b0e      	ldr	r3, [pc, #56]	; (17c8 <system_clock_init+0x150>)
    1790:	4798      	blx	r3
    1792:	2000      	movs	r0, #0
    1794:	4b0d      	ldr	r3, [pc, #52]	; (17cc <system_clock_init+0x154>)
    1796:	4798      	blx	r3
#endif
}
    1798:	b00f      	add	sp, #60	; 0x3c
    179a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		coarse = 0x1f;
    179c:	3b20      	subs	r3, #32
    179e:	e7b2      	b.n	1706 <system_clock_init+0x8e>
    17a0:	40000800 	.word	0x40000800
    17a4:	41004000 	.word	0x41004000
    17a8:	00001a11 	.word	0x00001a11
    17ac:	00001499 	.word	0x00001499
    17b0:	000015d1 	.word	0x000015d1
    17b4:	00806024 	.word	0x00806024
    17b8:	000005b9 	.word	0x000005b9
    17bc:	00001551 	.word	0x00001551
    17c0:	0000145d 	.word	0x0000145d
    17c4:	000017d9 	.word	0x000017d9
    17c8:	000017fd 	.word	0x000017fd
    17cc:	000018b5 	.word	0x000018b5
    17d0:	00001985 	.word	0x00001985
    17d4:	40000400 	.word	0x40000400

000017d8 <system_gclk_init>:
			PM->APBAMASK.reg |= mask;
    17d8:	4a06      	ldr	r2, [pc, #24]	; (17f4 <system_gclk_init+0x1c>)
    17da:	6993      	ldr	r3, [r2, #24]
    17dc:	2108      	movs	r1, #8
    17de:	430b      	orrs	r3, r1
    17e0:	6193      	str	r3, [r2, #24]
{
	/* Turn on the digital interface clock */
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBA, PM_APBAMASK_GCLK);

	/* Software reset the module to ensure it is re-initialized correctly */
	GCLK->CTRL.reg = GCLK_CTRL_SWRST;
    17e2:	2201      	movs	r2, #1
    17e4:	4b04      	ldr	r3, [pc, #16]	; (17f8 <system_gclk_init+0x20>)
    17e6:	701a      	strb	r2, [r3, #0]
	while (GCLK->CTRL.reg & GCLK_CTRL_SWRST) {
    17e8:	0019      	movs	r1, r3
    17ea:	780b      	ldrb	r3, [r1, #0]
    17ec:	4213      	tst	r3, r2
    17ee:	d1fc      	bne.n	17ea <system_gclk_init+0x12>
		/* Wait for reset to complete */
	}
}
    17f0:	4770      	bx	lr
    17f2:	46c0      	nop			; (mov r8, r8)
    17f4:	40000400 	.word	0x40000400
    17f8:	40000c00 	.word	0x40000c00

000017fc <system_gclk_gen_set_config>:
 * \param[in] config     Configuration settings for the generator
 */
void system_gclk_gen_set_config(
		const uint8_t generator,
		struct system_gclk_gen_config *const config)
{
    17fc:	b570      	push	{r4, r5, r6, lr}
    17fe:	0006      	movs	r6, r0
	/* Sanity check arguments */
	Assert(config);

	/* Cache new register configurations to minimize sync requirements. */
	uint32_t new_genctrl_config = (generator << GCLK_GENCTRL_ID_Pos);
    1800:	0004      	movs	r4, r0
	uint32_t new_gendiv_config  = (generator << GCLK_GENDIV_ID_Pos);

	/* Select the requested source clock for the generator */
	new_genctrl_config |= config->source_clock << GCLK_GENCTRL_SRC_Pos;
    1802:	780d      	ldrb	r5, [r1, #0]
    1804:	022d      	lsls	r5, r5, #8
    1806:	4305      	orrs	r5, r0

	/* Configure the clock to be either high or low when disabled */
	if (config->high_when_disabled) {
    1808:	784b      	ldrb	r3, [r1, #1]
    180a:	2b00      	cmp	r3, #0
    180c:	d002      	beq.n	1814 <system_gclk_gen_set_config+0x18>
		new_genctrl_config |= GCLK_GENCTRL_OOV;
    180e:	2380      	movs	r3, #128	; 0x80
    1810:	02db      	lsls	r3, r3, #11
    1812:	431d      	orrs	r5, r3
	}

	/* Configure if the clock output to I/O pin should be enabled. */
	if (config->output_enable) {
    1814:	7a4b      	ldrb	r3, [r1, #9]
    1816:	2b00      	cmp	r3, #0
    1818:	d002      	beq.n	1820 <system_gclk_gen_set_config+0x24>
		new_genctrl_config |= GCLK_GENCTRL_OE;
    181a:	2380      	movs	r3, #128	; 0x80
    181c:	031b      	lsls	r3, r3, #12
    181e:	431d      	orrs	r5, r3
	}

	/* Set division factor */
	if (config->division_factor > 1) {
    1820:	6848      	ldr	r0, [r1, #4]
    1822:	2801      	cmp	r0, #1
    1824:	d910      	bls.n	1848 <system_gclk_gen_set_config+0x4c>
		/* Check if division is a power of two */
		if (((config->division_factor & (config->division_factor - 1)) == 0)) {
    1826:	1e43      	subs	r3, r0, #1
    1828:	4218      	tst	r0, r3
    182a:	d134      	bne.n	1896 <system_gclk_gen_set_config+0x9a>
			 * register */

			uint32_t div2_count = 0;

			uint32_t mask;
			for (mask = (1UL << 1); mask < config->division_factor;
    182c:	2802      	cmp	r0, #2
    182e:	d930      	bls.n	1892 <system_gclk_gen_set_config+0x96>
    1830:	2302      	movs	r3, #2
    1832:	2200      	movs	r2, #0
						mask <<= 1) {
				div2_count++;
    1834:	3201      	adds	r2, #1
						mask <<= 1) {
    1836:	005b      	lsls	r3, r3, #1
			for (mask = (1UL << 1); mask < config->division_factor;
    1838:	4298      	cmp	r0, r3
    183a:	d8fb      	bhi.n	1834 <system_gclk_gen_set_config+0x38>
			}

			/* Set binary divider power of 2 division factor */
			new_gendiv_config  |= div2_count << GCLK_GENDIV_DIV_Pos;
    183c:	0212      	lsls	r2, r2, #8
    183e:	4332      	orrs	r2, r6
    1840:	0014      	movs	r4, r2
			new_genctrl_config |= GCLK_GENCTRL_DIVSEL;
    1842:	2380      	movs	r3, #128	; 0x80
    1844:	035b      	lsls	r3, r3, #13
    1846:	431d      	orrs	r5, r3
		}

	}

	/* Enable or disable the clock in standby mode */
	if (config->run_in_standby) {
    1848:	7a0b      	ldrb	r3, [r1, #8]
    184a:	2b00      	cmp	r3, #0
    184c:	d002      	beq.n	1854 <system_gclk_gen_set_config+0x58>
		new_genctrl_config |= GCLK_GENCTRL_RUNSTDBY;
    184e:	2380      	movs	r3, #128	; 0x80
    1850:	039b      	lsls	r3, r3, #14
    1852:	431d      	orrs	r5, r3
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    1854:	4a13      	ldr	r2, [pc, #76]	; (18a4 <system_gclk_gen_set_config+0xa8>)
    1856:	7853      	ldrb	r3, [r2, #1]
	}

	while (system_gclk_is_syncing()) {
    1858:	b25b      	sxtb	r3, r3
    185a:	2b00      	cmp	r3, #0
    185c:	dbfb      	blt.n	1856 <system_gclk_gen_set_config+0x5a>
	cpu_irq_enter_critical();
    185e:	4b12      	ldr	r3, [pc, #72]	; (18a8 <system_gclk_gen_set_config+0xac>)
    1860:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the correct generator */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
    1862:	4b12      	ldr	r3, [pc, #72]	; (18ac <system_gclk_gen_set_config+0xb0>)
    1864:	701e      	strb	r6, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    1866:	4a0f      	ldr	r2, [pc, #60]	; (18a4 <system_gclk_gen_set_config+0xa8>)
    1868:	7853      	ldrb	r3, [r2, #1]

	/* Write the new generator configuration */
	while (system_gclk_is_syncing()) {
    186a:	b25b      	sxtb	r3, r3
    186c:	2b00      	cmp	r3, #0
    186e:	dbfb      	blt.n	1868 <system_gclk_gen_set_config+0x6c>
		/* Wait for synchronization */
	};
	GCLK->GENDIV.reg  = new_gendiv_config;
    1870:	4b0c      	ldr	r3, [pc, #48]	; (18a4 <system_gclk_gen_set_config+0xa8>)
    1872:	609c      	str	r4, [r3, #8]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    1874:	001a      	movs	r2, r3
    1876:	7853      	ldrb	r3, [r2, #1]

	while (system_gclk_is_syncing()) {
    1878:	b25b      	sxtb	r3, r3
    187a:	2b00      	cmp	r3, #0
    187c:	dbfb      	blt.n	1876 <system_gclk_gen_set_config+0x7a>
		/* Wait for synchronization */
	};
	GCLK->GENCTRL.reg = new_genctrl_config | (GCLK->GENCTRL.reg & GCLK_GENCTRL_GENEN);
    187e:	4a09      	ldr	r2, [pc, #36]	; (18a4 <system_gclk_gen_set_config+0xa8>)
    1880:	6853      	ldr	r3, [r2, #4]
    1882:	2180      	movs	r1, #128	; 0x80
    1884:	0249      	lsls	r1, r1, #9
    1886:	400b      	ands	r3, r1
    1888:	431d      	orrs	r5, r3
    188a:	6055      	str	r5, [r2, #4]
	cpu_irq_leave_critical();
    188c:	4b08      	ldr	r3, [pc, #32]	; (18b0 <system_gclk_gen_set_config+0xb4>)
    188e:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    1890:	bd70      	pop	{r4, r5, r6, pc}
			for (mask = (1UL << 1); mask < config->division_factor;
    1892:	2200      	movs	r2, #0
    1894:	e7d2      	b.n	183c <system_gclk_gen_set_config+0x40>
					(config->division_factor) << GCLK_GENDIV_DIV_Pos;
    1896:	0204      	lsls	r4, r0, #8
			new_gendiv_config  |=
    1898:	4334      	orrs	r4, r6
			new_genctrl_config |= GCLK_GENCTRL_IDC;
    189a:	2380      	movs	r3, #128	; 0x80
    189c:	029b      	lsls	r3, r3, #10
    189e:	431d      	orrs	r5, r3
    18a0:	e7d2      	b.n	1848 <system_gclk_gen_set_config+0x4c>
    18a2:	46c0      	nop			; (mov r8, r8)
    18a4:	40000c00 	.word	0x40000c00
    18a8:	000012fd 	.word	0x000012fd
    18ac:	40000c08 	.word	0x40000c08
    18b0:	0000133d 	.word	0x0000133d

000018b4 <system_gclk_gen_enable>:
 *
 * \param[in] generator  Generic Clock Generator index to enable
 */
void system_gclk_gen_enable(
		const uint8_t generator)
{
    18b4:	b510      	push	{r4, lr}
    18b6:	0004      	movs	r4, r0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    18b8:	4a0b      	ldr	r2, [pc, #44]	; (18e8 <system_gclk_gen_enable+0x34>)
    18ba:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    18bc:	b25b      	sxtb	r3, r3
    18be:	2b00      	cmp	r3, #0
    18c0:	dbfb      	blt.n	18ba <system_gclk_gen_enable+0x6>
	cpu_irq_enter_critical();
    18c2:	4b0a      	ldr	r3, [pc, #40]	; (18ec <system_gclk_gen_enable+0x38>)
    18c4:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the requested generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
    18c6:	4b0a      	ldr	r3, [pc, #40]	; (18f0 <system_gclk_gen_enable+0x3c>)
    18c8:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    18ca:	4a07      	ldr	r2, [pc, #28]	; (18e8 <system_gclk_gen_enable+0x34>)
    18cc:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    18ce:	b25b      	sxtb	r3, r3
    18d0:	2b00      	cmp	r3, #0
    18d2:	dbfb      	blt.n	18cc <system_gclk_gen_enable+0x18>
		/* Wait for synchronization */
	};

	/* Enable generator */
	GCLK->GENCTRL.reg |= GCLK_GENCTRL_GENEN;
    18d4:	4a04      	ldr	r2, [pc, #16]	; (18e8 <system_gclk_gen_enable+0x34>)
    18d6:	6851      	ldr	r1, [r2, #4]
    18d8:	2380      	movs	r3, #128	; 0x80
    18da:	025b      	lsls	r3, r3, #9
    18dc:	430b      	orrs	r3, r1
    18de:	6053      	str	r3, [r2, #4]
	cpu_irq_leave_critical();
    18e0:	4b04      	ldr	r3, [pc, #16]	; (18f4 <system_gclk_gen_enable+0x40>)
    18e2:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    18e4:	bd10      	pop	{r4, pc}
    18e6:	46c0      	nop			; (mov r8, r8)
    18e8:	40000c00 	.word	0x40000c00
    18ec:	000012fd 	.word	0x000012fd
    18f0:	40000c04 	.word	0x40000c04
    18f4:	0000133d 	.word	0x0000133d

000018f8 <system_gclk_gen_get_hz>:
 *
 * \return The frequency of the generic clock generator, in Hz.
 */
uint32_t system_gclk_gen_get_hz(
		const uint8_t generator)
{
    18f8:	b570      	push	{r4, r5, r6, lr}
    18fa:	0004      	movs	r4, r0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    18fc:	4a1a      	ldr	r2, [pc, #104]	; (1968 <system_gclk_gen_get_hz+0x70>)
    18fe:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    1900:	b25b      	sxtb	r3, r3
    1902:	2b00      	cmp	r3, #0
    1904:	dbfb      	blt.n	18fe <system_gclk_gen_get_hz+0x6>
	cpu_irq_enter_critical();
    1906:	4b19      	ldr	r3, [pc, #100]	; (196c <system_gclk_gen_get_hz+0x74>)
    1908:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the appropriate generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
    190a:	4b19      	ldr	r3, [pc, #100]	; (1970 <system_gclk_gen_get_hz+0x78>)
    190c:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    190e:	4a16      	ldr	r2, [pc, #88]	; (1968 <system_gclk_gen_get_hz+0x70>)
    1910:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    1912:	b25b      	sxtb	r3, r3
    1914:	2b00      	cmp	r3, #0
    1916:	dbfb      	blt.n	1910 <system_gclk_gen_get_hz+0x18>
		/* Wait for synchronization */
	};

	/* Get the frequency of the source connected to the GCLK generator */
	uint32_t gen_input_hz = system_clock_source_get_hz(
			(enum system_clock_source)GCLK->GENCTRL.bit.SRC);
    1918:	4e13      	ldr	r6, [pc, #76]	; (1968 <system_gclk_gen_get_hz+0x70>)
    191a:	6870      	ldr	r0, [r6, #4]
    191c:	04c0      	lsls	r0, r0, #19
    191e:	0ec0      	lsrs	r0, r0, #27
	uint32_t gen_input_hz = system_clock_source_get_hz(
    1920:	4b14      	ldr	r3, [pc, #80]	; (1974 <system_gclk_gen_get_hz+0x7c>)
    1922:	4798      	blx	r3
    1924:	0005      	movs	r5, r0

	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
    1926:	4b12      	ldr	r3, [pc, #72]	; (1970 <system_gclk_gen_get_hz+0x78>)
    1928:	701c      	strb	r4, [r3, #0]

	uint8_t divsel = GCLK->GENCTRL.bit.DIVSEL;
    192a:	6876      	ldr	r6, [r6, #4]
    192c:	02f6      	lsls	r6, r6, #11
    192e:	0ff6      	lsrs	r6, r6, #31

	/* Select the appropriate generator division register */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
    1930:	4b11      	ldr	r3, [pc, #68]	; (1978 <system_gclk_gen_get_hz+0x80>)
    1932:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    1934:	4a0c      	ldr	r2, [pc, #48]	; (1968 <system_gclk_gen_get_hz+0x70>)
    1936:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    1938:	b25b      	sxtb	r3, r3
    193a:	2b00      	cmp	r3, #0
    193c:	dbfb      	blt.n	1936 <system_gclk_gen_get_hz+0x3e>
		/* Wait for synchronization */
	};

	uint32_t divider = GCLK->GENDIV.bit.DIV;
    193e:	4b0a      	ldr	r3, [pc, #40]	; (1968 <system_gclk_gen_get_hz+0x70>)
    1940:	689c      	ldr	r4, [r3, #8]
    1942:	0224      	lsls	r4, r4, #8
    1944:	0c24      	lsrs	r4, r4, #16
	cpu_irq_leave_critical();
    1946:	4b0d      	ldr	r3, [pc, #52]	; (197c <system_gclk_gen_get_hz+0x84>)
    1948:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Check if the generator is using fractional or binary division */
	if (!divsel && divider > 1) {
    194a:	2e00      	cmp	r6, #0
    194c:	d107      	bne.n	195e <system_gclk_gen_get_hz+0x66>
    194e:	2c01      	cmp	r4, #1
    1950:	d907      	bls.n	1962 <system_gclk_gen_get_hz+0x6a>
		gen_input_hz /= divider;
    1952:	0021      	movs	r1, r4
    1954:	0028      	movs	r0, r5
    1956:	4b0a      	ldr	r3, [pc, #40]	; (1980 <system_gclk_gen_get_hz+0x88>)
    1958:	4798      	blx	r3
    195a:	0005      	movs	r5, r0
    195c:	e001      	b.n	1962 <system_gclk_gen_get_hz+0x6a>
	} else if (divsel) {
		gen_input_hz >>= (divider+1);
    195e:	3401      	adds	r4, #1
    1960:	40e5      	lsrs	r5, r4
	}

	return gen_input_hz;
}
    1962:	0028      	movs	r0, r5
    1964:	bd70      	pop	{r4, r5, r6, pc}
    1966:	46c0      	nop			; (mov r8, r8)
    1968:	40000c00 	.word	0x40000c00
    196c:	000012fd 	.word	0x000012fd
    1970:	40000c04 	.word	0x40000c04
    1974:	000013c9 	.word	0x000013c9
    1978:	40000c08 	.word	0x40000c08
    197c:	0000133d 	.word	0x0000133d
    1980:	00001dfd 	.word	0x00001dfd

00001984 <system_gclk_chan_enable>:
 *
 * \param[in] channel   Generic Clock channel to enable
 */
void system_gclk_chan_enable(
		const uint8_t channel)
{
    1984:	b510      	push	{r4, lr}
    1986:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    1988:	4b06      	ldr	r3, [pc, #24]	; (19a4 <system_gclk_chan_enable+0x20>)
    198a:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    198c:	4b06      	ldr	r3, [pc, #24]	; (19a8 <system_gclk_chan_enable+0x24>)
    198e:	701c      	strb	r4, [r3, #0]

	/* Enable the generic clock */
	GCLK->CLKCTRL.reg |= GCLK_CLKCTRL_CLKEN;
    1990:	4a06      	ldr	r2, [pc, #24]	; (19ac <system_gclk_chan_enable+0x28>)
    1992:	8853      	ldrh	r3, [r2, #2]
    1994:	2180      	movs	r1, #128	; 0x80
    1996:	01c9      	lsls	r1, r1, #7
    1998:	430b      	orrs	r3, r1
    199a:	8053      	strh	r3, [r2, #2]
	cpu_irq_leave_critical();
    199c:	4b04      	ldr	r3, [pc, #16]	; (19b0 <system_gclk_chan_enable+0x2c>)
    199e:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    19a0:	bd10      	pop	{r4, pc}
    19a2:	46c0      	nop			; (mov r8, r8)
    19a4:	000012fd 	.word	0x000012fd
    19a8:	40000c02 	.word	0x40000c02
    19ac:	40000c00 	.word	0x40000c00
    19b0:	0000133d 	.word	0x0000133d

000019b4 <system_gclk_chan_disable>:
 *
 * \param[in] channel  Generic Clock channel to disable
 */
void system_gclk_chan_disable(
		const uint8_t channel)
{
    19b4:	b510      	push	{r4, lr}
    19b6:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    19b8:	4b0f      	ldr	r3, [pc, #60]	; (19f8 <system_gclk_chan_disable+0x44>)
    19ba:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    19bc:	4b0f      	ldr	r3, [pc, #60]	; (19fc <system_gclk_chan_disable+0x48>)
    19be:	701c      	strb	r4, [r3, #0]

	/* Sanity check WRTLOCK */
	Assert(!GCLK->CLKCTRL.bit.WRTLOCK);

	/* Switch to known-working source so that the channel can be disabled */
	uint32_t prev_gen_id = GCLK->CLKCTRL.bit.GEN;
    19c0:	4a0f      	ldr	r2, [pc, #60]	; (1a00 <system_gclk_chan_disable+0x4c>)
    19c2:	8853      	ldrh	r3, [r2, #2]
    19c4:	051b      	lsls	r3, r3, #20
    19c6:	0f18      	lsrs	r0, r3, #28
	GCLK->CLKCTRL.bit.GEN = 0;
    19c8:	8853      	ldrh	r3, [r2, #2]
    19ca:	490e      	ldr	r1, [pc, #56]	; (1a04 <system_gclk_chan_disable+0x50>)
    19cc:	400b      	ands	r3, r1
    19ce:	8053      	strh	r3, [r2, #2]

	/* Disable the generic clock */
	GCLK->CLKCTRL.reg &= ~GCLK_CLKCTRL_CLKEN;
    19d0:	8853      	ldrh	r3, [r2, #2]
    19d2:	490d      	ldr	r1, [pc, #52]	; (1a08 <system_gclk_chan_disable+0x54>)
    19d4:	400b      	ands	r3, r1
    19d6:	8053      	strh	r3, [r2, #2]
	while (GCLK->CLKCTRL.reg & GCLK_CLKCTRL_CLKEN) {
    19d8:	0011      	movs	r1, r2
    19da:	2280      	movs	r2, #128	; 0x80
    19dc:	01d2      	lsls	r2, r2, #7
    19de:	884b      	ldrh	r3, [r1, #2]
    19e0:	4213      	tst	r3, r2
    19e2:	d1fc      	bne.n	19de <system_gclk_chan_disable+0x2a>
		/* Wait for clock to become disabled */
	}

	/* Restore previous configured clock generator */
	GCLK->CLKCTRL.bit.GEN = prev_gen_id;
    19e4:	4906      	ldr	r1, [pc, #24]	; (1a00 <system_gclk_chan_disable+0x4c>)
    19e6:	884a      	ldrh	r2, [r1, #2]
    19e8:	0203      	lsls	r3, r0, #8
    19ea:	4806      	ldr	r0, [pc, #24]	; (1a04 <system_gclk_chan_disable+0x50>)
    19ec:	4002      	ands	r2, r0
    19ee:	4313      	orrs	r3, r2
    19f0:	804b      	strh	r3, [r1, #2]
	cpu_irq_leave_critical();
    19f2:	4b06      	ldr	r3, [pc, #24]	; (1a0c <system_gclk_chan_disable+0x58>)
    19f4:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    19f6:	bd10      	pop	{r4, pc}
    19f8:	000012fd 	.word	0x000012fd
    19fc:	40000c02 	.word	0x40000c02
    1a00:	40000c00 	.word	0x40000c00
    1a04:	fffff0ff 	.word	0xfffff0ff
    1a08:	ffffbfff 	.word	0xffffbfff
    1a0c:	0000133d 	.word	0x0000133d

00001a10 <system_gclk_chan_set_config>:
{
    1a10:	b510      	push	{r4, lr}
	new_clkctrl_config |= config->source_generator << GCLK_CLKCTRL_GEN_Pos;
    1a12:	780c      	ldrb	r4, [r1, #0]
    1a14:	0224      	lsls	r4, r4, #8
    1a16:	4304      	orrs	r4, r0
	system_gclk_chan_disable(channel);
    1a18:	4b02      	ldr	r3, [pc, #8]	; (1a24 <system_gclk_chan_set_config+0x14>)
    1a1a:	4798      	blx	r3
	GCLK->CLKCTRL.reg = new_clkctrl_config;
    1a1c:	b2a4      	uxth	r4, r4
    1a1e:	4b02      	ldr	r3, [pc, #8]	; (1a28 <system_gclk_chan_set_config+0x18>)
    1a20:	805c      	strh	r4, [r3, #2]
}
    1a22:	bd10      	pop	{r4, pc}
    1a24:	000019b5 	.word	0x000019b5
    1a28:	40000c00 	.word	0x40000c00

00001a2c <system_gclk_chan_get_hz>:
 *
 * \return The frequency of the generic clock channel, in Hz.
 */
uint32_t system_gclk_chan_get_hz(
		const uint8_t channel)
{
    1a2c:	b510      	push	{r4, lr}
    1a2e:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    1a30:	4b06      	ldr	r3, [pc, #24]	; (1a4c <system_gclk_chan_get_hz+0x20>)
    1a32:	4798      	blx	r3
	uint8_t gen_id;

	system_interrupt_enter_critical_section();

	/* Select the requested generic clock channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    1a34:	4b06      	ldr	r3, [pc, #24]	; (1a50 <system_gclk_chan_get_hz+0x24>)
    1a36:	701c      	strb	r4, [r3, #0]
	gen_id = GCLK->CLKCTRL.bit.GEN;
    1a38:	4b06      	ldr	r3, [pc, #24]	; (1a54 <system_gclk_chan_get_hz+0x28>)
    1a3a:	885c      	ldrh	r4, [r3, #2]
    1a3c:	0524      	lsls	r4, r4, #20
    1a3e:	0f24      	lsrs	r4, r4, #28
	cpu_irq_leave_critical();
    1a40:	4b05      	ldr	r3, [pc, #20]	; (1a58 <system_gclk_chan_get_hz+0x2c>)
    1a42:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Return the clock speed of the associated GCLK generator */
	return system_gclk_gen_get_hz(gen_id);
    1a44:	0020      	movs	r0, r4
    1a46:	4b05      	ldr	r3, [pc, #20]	; (1a5c <system_gclk_chan_get_hz+0x30>)
    1a48:	4798      	blx	r3
}
    1a4a:	bd10      	pop	{r4, pc}
    1a4c:	000012fd 	.word	0x000012fd
    1a50:	40000c02 	.word	0x40000c02
    1a54:	40000c00 	.word	0x40000c00
    1a58:	0000133d 	.word	0x0000133d
    1a5c:	000018f9 	.word	0x000018f9

00001a60 <_system_pinmux_config>:
 */
static void _system_pinmux_config(
		PortGroup *const port,
		const uint32_t pin_mask,
		const struct system_pinmux_config *const config)
{
    1a60:	b530      	push	{r4, r5, lr}

	/* Track the configuration bits into a temporary variable before writing */
	uint32_t pin_cfg = 0;

	/* Enabled powersave mode, don't create configuration */
	if (!config->powersave) {
    1a62:	78d3      	ldrb	r3, [r2, #3]
    1a64:	2b00      	cmp	r3, #0
    1a66:	d135      	bne.n	1ad4 <_system_pinmux_config+0x74>
		/* Enable the pin peripheral MUX flag if non-GPIO selected (pinmux will
		 * be written later) and store the new MUX mask */
		if (config->mux_position != SYSTEM_PINMUX_GPIO) {
    1a68:	7813      	ldrb	r3, [r2, #0]
    1a6a:	2b80      	cmp	r3, #128	; 0x80
    1a6c:	d029      	beq.n	1ac2 <_system_pinmux_config+0x62>
			pin_cfg |= PORT_WRCONFIG_PMUXEN;
			pin_cfg |= (config->mux_position << PORT_WRCONFIG_PMUX_Pos);
    1a6e:	061b      	lsls	r3, r3, #24
    1a70:	2480      	movs	r4, #128	; 0x80
    1a72:	0264      	lsls	r4, r4, #9
    1a74:	4323      	orrs	r3, r4
		}

		/* Check if the user has requested that the input buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_INPUT) ||
    1a76:	7854      	ldrb	r4, [r2, #1]
    1a78:	2502      	movs	r5, #2
    1a7a:	43ac      	bics	r4, r5
    1a7c:	d106      	bne.n	1a8c <_system_pinmux_config+0x2c>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Enable input buffer flag */
			pin_cfg |= PORT_WRCONFIG_INEN;

			/* Enable pull-up/pull-down control flag if requested */
			if (config->input_pull != SYSTEM_PINMUX_PIN_PULL_NONE) {
    1a7e:	7894      	ldrb	r4, [r2, #2]
    1a80:	2c00      	cmp	r4, #0
    1a82:	d120      	bne.n	1ac6 <_system_pinmux_config+0x66>
			pin_cfg |= PORT_WRCONFIG_INEN;
    1a84:	2480      	movs	r4, #128	; 0x80
    1a86:	02a4      	lsls	r4, r4, #10
    1a88:	4323      	orrs	r3, r4
				pin_cfg |= PORT_WRCONFIG_PULLEN;
			}

			/* Clear the port DIR bits to disable the output buffer */
			port->DIRCLR.reg = pin_mask;
    1a8a:	6041      	str	r1, [r0, #4]
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    1a8c:	7854      	ldrb	r4, [r2, #1]
    1a8e:	3c01      	subs	r4, #1
    1a90:	2c01      	cmp	r4, #1
    1a92:	d91c      	bls.n	1ace <_system_pinmux_config+0x6e>
		port->DIRCLR.reg = pin_mask;
	}

	/* The Write Configuration register (WRCONFIG) requires the
	 * pins to to grouped into two 16-bit half-words - split them out here */
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    1a94:	040d      	lsls	r5, r1, #16
    1a96:	0c2d      	lsrs	r5, r5, #16

	/* Configure the lower 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    1a98:	24a0      	movs	r4, #160	; 0xa0
    1a9a:	05e4      	lsls	r4, r4, #23
    1a9c:	432c      	orrs	r4, r5
    1a9e:	431c      	orrs	r4, r3
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1aa0:	6284      	str	r4, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    1aa2:	0c0d      	lsrs	r5, r1, #16

	/* Configure the upper 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    1aa4:	24d0      	movs	r4, #208	; 0xd0
    1aa6:	0624      	lsls	r4, r4, #24
    1aa8:	432c      	orrs	r4, r5
    1aaa:	431c      	orrs	r4, r3
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1aac:	6284      	str	r4, [r0, #40]	; 0x28
			PORT_WRCONFIG_HWSEL;

	if(!config->powersave) {
    1aae:	78d4      	ldrb	r4, [r2, #3]
    1ab0:	2c00      	cmp	r4, #0
    1ab2:	d122      	bne.n	1afa <_system_pinmux_config+0x9a>
		/* Set the pull-up state once the port pins are configured if one was
		 * requested and it does not violate the valid set of port
		 * configurations */
		if (pin_cfg & PORT_WRCONFIG_PULLEN) {
    1ab4:	035b      	lsls	r3, r3, #13
    1ab6:	d51c      	bpl.n	1af2 <_system_pinmux_config+0x92>
			/* Set the OUT register bits to enable the pull-up if requested,
			 * clear to enable pull-down */
			if (config->input_pull == SYSTEM_PINMUX_PIN_PULL_UP) {
    1ab8:	7893      	ldrb	r3, [r2, #2]
    1aba:	2b01      	cmp	r3, #1
    1abc:	d01e      	beq.n	1afc <_system_pinmux_config+0x9c>
				port->OUTSET.reg = pin_mask;
			} else {
				port->OUTCLR.reg = pin_mask;
    1abe:	6141      	str	r1, [r0, #20]
    1ac0:	e017      	b.n	1af2 <_system_pinmux_config+0x92>
	uint32_t pin_cfg = 0;
    1ac2:	2300      	movs	r3, #0
    1ac4:	e7d7      	b.n	1a76 <_system_pinmux_config+0x16>
				pin_cfg |= PORT_WRCONFIG_PULLEN;
    1ac6:	24c0      	movs	r4, #192	; 0xc0
    1ac8:	02e4      	lsls	r4, r4, #11
    1aca:	4323      	orrs	r3, r4
    1acc:	e7dd      	b.n	1a8a <_system_pinmux_config+0x2a>
			pin_cfg &= ~PORT_WRCONFIG_PULLEN;
    1ace:	4c0d      	ldr	r4, [pc, #52]	; (1b04 <_system_pinmux_config+0xa4>)
    1ad0:	4023      	ands	r3, r4
    1ad2:	e7df      	b.n	1a94 <_system_pinmux_config+0x34>
		port->DIRCLR.reg = pin_mask;
    1ad4:	6041      	str	r1, [r0, #4]
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    1ad6:	040c      	lsls	r4, r1, #16
    1ad8:	0c24      	lsrs	r4, r4, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    1ada:	23a0      	movs	r3, #160	; 0xa0
    1adc:	05db      	lsls	r3, r3, #23
    1ade:	4323      	orrs	r3, r4
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1ae0:	6283      	str	r3, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    1ae2:	0c0c      	lsrs	r4, r1, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    1ae4:	23d0      	movs	r3, #208	; 0xd0
    1ae6:	061b      	lsls	r3, r3, #24
    1ae8:	4323      	orrs	r3, r4
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1aea:	6283      	str	r3, [r0, #40]	; 0x28
	if(!config->powersave) {
    1aec:	78d3      	ldrb	r3, [r2, #3]
    1aee:	2b00      	cmp	r3, #0
    1af0:	d103      	bne.n	1afa <_system_pinmux_config+0x9a>
			}
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    1af2:	7853      	ldrb	r3, [r2, #1]
    1af4:	3b01      	subs	r3, #1
    1af6:	2b01      	cmp	r3, #1
    1af8:	d902      	bls.n	1b00 <_system_pinmux_config+0xa0>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Set the port DIR bits to enable the output buffer */
			port->DIRSET.reg = pin_mask;
		}
	}
}
    1afa:	bd30      	pop	{r4, r5, pc}
				port->OUTSET.reg = pin_mask;
    1afc:	6181      	str	r1, [r0, #24]
    1afe:	e7f8      	b.n	1af2 <_system_pinmux_config+0x92>
			port->DIRSET.reg = pin_mask;
    1b00:	6081      	str	r1, [r0, #8]
}
    1b02:	e7fa      	b.n	1afa <_system_pinmux_config+0x9a>
    1b04:	fffbffff 	.word	0xfffbffff

00001b08 <system_pinmux_pin_set_config>:
 * \param[in] config    Configuration settings for the pin
 */
void system_pinmux_pin_set_config(
		const uint8_t gpio_pin,
		const struct system_pinmux_config *const config)
{
    1b08:	b510      	push	{r4, lr}
    1b0a:	000a      	movs	r2, r1
	uint8_t group_index = (gpio_pin / 32);

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;

	if (port_index < PORT_INST_NUM) {
    1b0c:	09c1      	lsrs	r1, r0, #7
		return &(ports[port_index]->Group[group_index]);
	} else {
		Assert(false);
		return NULL;
    1b0e:	2300      	movs	r3, #0
	if (port_index < PORT_INST_NUM) {
    1b10:	2900      	cmp	r1, #0
    1b12:	d104      	bne.n	1b1e <system_pinmux_pin_set_config+0x16>
		return &(ports[port_index]->Group[group_index]);
    1b14:	0943      	lsrs	r3, r0, #5
    1b16:	01db      	lsls	r3, r3, #7
    1b18:	4905      	ldr	r1, [pc, #20]	; (1b30 <system_pinmux_pin_set_config+0x28>)
    1b1a:	468c      	mov	ip, r1
    1b1c:	4463      	add	r3, ip
	PortGroup *const port = system_pinmux_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask = (1UL << (gpio_pin % 32));
    1b1e:	241f      	movs	r4, #31
    1b20:	4020      	ands	r0, r4
    1b22:	2101      	movs	r1, #1
    1b24:	4081      	lsls	r1, r0

	_system_pinmux_config(port, pin_mask, config);
    1b26:	0018      	movs	r0, r3
    1b28:	4b02      	ldr	r3, [pc, #8]	; (1b34 <system_pinmux_pin_set_config+0x2c>)
    1b2a:	4798      	blx	r3
}
    1b2c:	bd10      	pop	{r4, pc}
    1b2e:	46c0      	nop			; (mov r8, r8)
    1b30:	41004400 	.word	0x41004400
    1b34:	00001a61 	.word	0x00001a61

00001b38 <_system_dummy_init>:
 */
void _system_dummy_init(void);
void _system_dummy_init(void)
{
	return;
}
    1b38:	4770      	bx	lr
	...

00001b3c <system_init>:
 *  - Board hardware initialization (via the Board module)
 *  - Event system driver initialization (via the EVSYS module)
 *  - External Interrupt driver initialization (via the EXTINT module)
 */
void system_init(void)
{
    1b3c:	b510      	push	{r4, lr}
	/* Configure GCLK and clock sources according to conf_clocks.h */
	system_clock_init();
    1b3e:	4b05      	ldr	r3, [pc, #20]	; (1b54 <system_init+0x18>)
    1b40:	4798      	blx	r3

	/* Initialize board hardware */
	system_board_init();
    1b42:	4b05      	ldr	r3, [pc, #20]	; (1b58 <system_init+0x1c>)
    1b44:	4798      	blx	r3

	/* Initialize EVSYS hardware */
	_system_events_init();
    1b46:	4b05      	ldr	r3, [pc, #20]	; (1b5c <system_init+0x20>)
    1b48:	4798      	blx	r3

	/* Initialize External hardware */
	_system_extint_init();
    1b4a:	4b05      	ldr	r3, [pc, #20]	; (1b60 <system_init+0x24>)
    1b4c:	4798      	blx	r3
	
	/* Initialize DIVAS hardware */
	_system_divas_init();
    1b4e:	4b05      	ldr	r3, [pc, #20]	; (1b64 <system_init+0x28>)
    1b50:	4798      	blx	r3
}
    1b52:	bd10      	pop	{r4, pc}
    1b54:	00001679 	.word	0x00001679
    1b58:	0000136d 	.word	0x0000136d
    1b5c:	00001b39 	.word	0x00001b39
    1b60:	00001b39 	.word	0x00001b39
    1b64:	00001b39 	.word	0x00001b39

00001b68 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    1b68:	e7fe      	b.n	1b68 <Dummy_Handler>
	...

00001b6c <Reset_Handler>:
{
    1b6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
    1b6e:	4a2a      	ldr	r2, [pc, #168]	; (1c18 <Reset_Handler+0xac>)
    1b70:	4b2a      	ldr	r3, [pc, #168]	; (1c1c <Reset_Handler+0xb0>)
    1b72:	429a      	cmp	r2, r3
    1b74:	d011      	beq.n	1b9a <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
    1b76:	001a      	movs	r2, r3
    1b78:	4b29      	ldr	r3, [pc, #164]	; (1c20 <Reset_Handler+0xb4>)
    1b7a:	429a      	cmp	r2, r3
    1b7c:	d20d      	bcs.n	1b9a <Reset_Handler+0x2e>
    1b7e:	4a29      	ldr	r2, [pc, #164]	; (1c24 <Reset_Handler+0xb8>)
    1b80:	3303      	adds	r3, #3
    1b82:	1a9b      	subs	r3, r3, r2
    1b84:	089b      	lsrs	r3, r3, #2
    1b86:	3301      	adds	r3, #1
    1b88:	009b      	lsls	r3, r3, #2
    1b8a:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
    1b8c:	4823      	ldr	r0, [pc, #140]	; (1c1c <Reset_Handler+0xb0>)
    1b8e:	4922      	ldr	r1, [pc, #136]	; (1c18 <Reset_Handler+0xac>)
    1b90:	588c      	ldr	r4, [r1, r2]
    1b92:	5084      	str	r4, [r0, r2]
    1b94:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
    1b96:	429a      	cmp	r2, r3
    1b98:	d1fa      	bne.n	1b90 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
    1b9a:	4a23      	ldr	r2, [pc, #140]	; (1c28 <Reset_Handler+0xbc>)
    1b9c:	4b23      	ldr	r3, [pc, #140]	; (1c2c <Reset_Handler+0xc0>)
    1b9e:	429a      	cmp	r2, r3
    1ba0:	d20a      	bcs.n	1bb8 <Reset_Handler+0x4c>
    1ba2:	43d3      	mvns	r3, r2
    1ba4:	4921      	ldr	r1, [pc, #132]	; (1c2c <Reset_Handler+0xc0>)
    1ba6:	185b      	adds	r3, r3, r1
    1ba8:	2103      	movs	r1, #3
    1baa:	438b      	bics	r3, r1
    1bac:	3304      	adds	r3, #4
    1bae:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
    1bb0:	2100      	movs	r1, #0
    1bb2:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
    1bb4:	4293      	cmp	r3, r2
    1bb6:	d1fc      	bne.n	1bb2 <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    1bb8:	4a1d      	ldr	r2, [pc, #116]	; (1c30 <Reset_Handler+0xc4>)
    1bba:	21ff      	movs	r1, #255	; 0xff
    1bbc:	4b1d      	ldr	r3, [pc, #116]	; (1c34 <Reset_Handler+0xc8>)
    1bbe:	438b      	bics	r3, r1
    1bc0:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
    1bc2:	39fd      	subs	r1, #253	; 0xfd
    1bc4:	2390      	movs	r3, #144	; 0x90
    1bc6:	005b      	lsls	r3, r3, #1
    1bc8:	4a1b      	ldr	r2, [pc, #108]	; (1c38 <Reset_Handler+0xcc>)
    1bca:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
    1bcc:	4a1b      	ldr	r2, [pc, #108]	; (1c3c <Reset_Handler+0xd0>)
    1bce:	78d3      	ldrb	r3, [r2, #3]
    1bd0:	2503      	movs	r5, #3
    1bd2:	43ab      	bics	r3, r5
    1bd4:	2402      	movs	r4, #2
    1bd6:	4323      	orrs	r3, r4
    1bd8:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
    1bda:	78d3      	ldrb	r3, [r2, #3]
    1bdc:	270c      	movs	r7, #12
    1bde:	43bb      	bics	r3, r7
    1be0:	2608      	movs	r6, #8
    1be2:	4333      	orrs	r3, r6
    1be4:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
    1be6:	4b16      	ldr	r3, [pc, #88]	; (1c40 <Reset_Handler+0xd4>)
    1be8:	7b98      	ldrb	r0, [r3, #14]
    1bea:	2230      	movs	r2, #48	; 0x30
    1bec:	4390      	bics	r0, r2
    1bee:	2220      	movs	r2, #32
    1bf0:	4310      	orrs	r0, r2
    1bf2:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
    1bf4:	7b99      	ldrb	r1, [r3, #14]
    1bf6:	43b9      	bics	r1, r7
    1bf8:	4331      	orrs	r1, r6
    1bfa:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
    1bfc:	7b9a      	ldrb	r2, [r3, #14]
    1bfe:	43aa      	bics	r2, r5
    1c00:	4322      	orrs	r2, r4
    1c02:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
    1c04:	4a0f      	ldr	r2, [pc, #60]	; (1c44 <Reset_Handler+0xd8>)
    1c06:	6853      	ldr	r3, [r2, #4]
    1c08:	2180      	movs	r1, #128	; 0x80
    1c0a:	430b      	orrs	r3, r1
    1c0c:	6053      	str	r3, [r2, #4]
        __libc_init_array();
    1c0e:	4b0e      	ldr	r3, [pc, #56]	; (1c48 <Reset_Handler+0xdc>)
    1c10:	4798      	blx	r3
        main();
    1c12:	4b0e      	ldr	r3, [pc, #56]	; (1c4c <Reset_Handler+0xe0>)
    1c14:	4798      	blx	r3
    1c16:	e7fe      	b.n	1c16 <Reset_Handler+0xaa>
    1c18:	00008554 	.word	0x00008554
    1c1c:	20000000 	.word	0x20000000
    1c20:	200009c0 	.word	0x200009c0
    1c24:	20000004 	.word	0x20000004
    1c28:	200009c0 	.word	0x200009c0
    1c2c:	20000c18 	.word	0x20000c18
    1c30:	e000ed00 	.word	0xe000ed00
    1c34:	00000000 	.word	0x00000000
    1c38:	41007000 	.word	0x41007000
    1c3c:	41005000 	.word	0x41005000
    1c40:	41004800 	.word	0x41004800
    1c44:	41004000 	.word	0x41004000
    1c48:	00002a8d 	.word	0x00002a8d
    1c4c:	00001c75 	.word	0x00001c75

00001c50 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
    1c50:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
    1c52:	4a06      	ldr	r2, [pc, #24]	; (1c6c <_sbrk+0x1c>)
    1c54:	6812      	ldr	r2, [r2, #0]
    1c56:	2a00      	cmp	r2, #0
    1c58:	d004      	beq.n	1c64 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    1c5a:	4a04      	ldr	r2, [pc, #16]	; (1c6c <_sbrk+0x1c>)
    1c5c:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    1c5e:	18c3      	adds	r3, r0, r3
    1c60:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
    1c62:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    1c64:	4902      	ldr	r1, [pc, #8]	; (1c70 <_sbrk+0x20>)
    1c66:	4a01      	ldr	r2, [pc, #4]	; (1c6c <_sbrk+0x1c>)
    1c68:	6011      	str	r1, [r2, #0]
    1c6a:	e7f6      	b.n	1c5a <_sbrk+0xa>
    1c6c:	20000a18 	.word	0x20000a18
    1c70:	20002c18 	.word	0x20002c18

00001c74 <main>:
	uint32_t resultData;
	uint8_t readBuffer[4];
}dataBytes;

int main (void)
{
    1c74:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c76:	46ce      	mov	lr, r9
    1c78:	b500      	push	{lr}
    1c7a:	b086      	sub	sp, #24
	test.hw = SERCOM1;
	test.spi_inst = &spi_sercom1_mod;
	test.ss_pin = 10;
	
	
	system_init();
    1c7c:	4b47      	ldr	r3, [pc, #284]	; (1d9c <main+0x128>)
    1c7e:	4798      	blx	r3
	pusart_init();
    1c80:	4b47      	ldr	r3, [pc, #284]	; (1da0 <main+0x12c>)
    1c82:	4798      	blx	r3
	pspi_init();
    1c84:	4b47      	ldr	r3, [pc, #284]	; (1da4 <main+0x130>)
    1c86:	4798      	blx	r3
	cpu_irq_enable();
    1c88:	2201      	movs	r2, #1
    1c8a:	4b47      	ldr	r3, [pc, #284]	; (1da8 <main+0x134>)
    1c8c:	701a      	strb	r2, [r3, #0]
    1c8e:	f3bf 8f5f 	dmb	sy
    1c92:	b662      	cpsie	i
	system_interrupt_enable_global();
	volatile uint32_t readval = 0x0;
    1c94:	2300      	movs	r3, #0
    1c96:	9304      	str	r3, [sp, #16]
	PORT->Group[0].DIR.bit.DIR |= (1 << 10);
    1c98:	4b44      	ldr	r3, [pc, #272]	; (1dac <main+0x138>)
    1c9a:	6819      	ldr	r1, [r3, #0]
    1c9c:	2280      	movs	r2, #128	; 0x80
    1c9e:	00d2      	lsls	r2, r2, #3
    1ca0:	4311      	orrs	r1, r2
    1ca2:	6019      	str	r1, [r3, #0]
	PORT->Group[0].OUT.bit.OUT |= (1 << 10);
    1ca4:	6919      	ldr	r1, [r3, #16]
    1ca6:	430a      	orrs	r2, r1
    1ca8:	611a      	str	r2, [r3, #16]
	for(int x = 0; x < 10; x++)
    1caa:	2300      	movs	r3, #0
	{
		tempbuf[x] = 0x0;
    1cac:	4940      	ldr	r1, [pc, #256]	; (1db0 <main+0x13c>)
    1cae:	2200      	movs	r2, #0
    1cb0:	1858      	adds	r0, r3, r1
    1cb2:	7002      	strb	r2, [r0, #0]
	for(int x = 0; x < 10; x++)
    1cb4:	3301      	adds	r3, #1
    1cb6:	2b0a      	cmp	r3, #10
    1cb8:	d1fa      	bne.n	1cb0 <main+0x3c>
    1cba:	e021      	b.n	1d00 <main+0x8c>
		}
		else
		{
			tempData = data.resultData >> 18;
		}
		tempfloat = (float)(tempData/4.0);
    1cbc:	4b3d      	ldr	r3, [pc, #244]	; (1db4 <main+0x140>)
    1cbe:	4798      	blx	r3
    1cc0:	2200      	movs	r2, #0
    1cc2:	4b3d      	ldr	r3, [pc, #244]	; (1db8 <main+0x144>)
    1cc4:	4c3d      	ldr	r4, [pc, #244]	; (1dbc <main+0x148>)
    1cc6:	47a0      	blx	r4
    1cc8:	4b3d      	ldr	r3, [pc, #244]	; (1dc0 <main+0x14c>)
    1cca:	4798      	blx	r3
		DEBUG("%f\n", tempfloat);
    1ccc:	4b3d      	ldr	r3, [pc, #244]	; (1dc4 <main+0x150>)
    1cce:	4798      	blx	r3
    1cd0:	0002      	movs	r2, r0
    1cd2:	000b      	movs	r3, r1
    1cd4:	493c      	ldr	r1, [pc, #240]	; (1dc8 <main+0x154>)
    1cd6:	483d      	ldr	r0, [pc, #244]	; (1dcc <main+0x158>)
    1cd8:	4c3d      	ldr	r4, [pc, #244]	; (1dd0 <main+0x15c>)
    1cda:	47a0      	blx	r4
		
		//service_handler();
		delay_ms(100);
    1cdc:	2000      	movs	r0, #0
    1cde:	4b3d      	ldr	r3, [pc, #244]	; (1dd4 <main+0x160>)
    1ce0:	4798      	blx	r3
    1ce2:	2264      	movs	r2, #100	; 0x64
    1ce4:	2300      	movs	r3, #0
    1ce6:	2100      	movs	r1, #0
    1ce8:	4c3b      	ldr	r4, [pc, #236]	; (1dd8 <main+0x164>)
    1cea:	47a0      	blx	r4
    1cec:	4b3b      	ldr	r3, [pc, #236]	; (1ddc <main+0x168>)
    1cee:	2400      	movs	r4, #0
    1cf0:	18c0      	adds	r0, r0, r3
    1cf2:	4161      	adcs	r1, r4
    1cf4:	4a3a      	ldr	r2, [pc, #232]	; (1de0 <main+0x16c>)
    1cf6:	2300      	movs	r3, #0
    1cf8:	4c3a      	ldr	r4, [pc, #232]	; (1de4 <main+0x170>)
    1cfa:	47a0      	blx	r4
    1cfc:	4b3a      	ldr	r3, [pc, #232]	; (1de8 <main+0x174>)
    1cfe:	4798      	blx	r3
		PORT->Group[0].OUT.bit.OUT &= ~(1 << 10);
    1d00:	4d2a      	ldr	r5, [pc, #168]	; (1dac <main+0x138>)
    1d02:	692b      	ldr	r3, [r5, #16]
    1d04:	4a39      	ldr	r2, [pc, #228]	; (1dec <main+0x178>)
    1d06:	4013      	ands	r3, r2
    1d08:	612b      	str	r3, [r5, #16]
		delay_ms(1);
    1d0a:	2000      	movs	r0, #0
    1d0c:	4b31      	ldr	r3, [pc, #196]	; (1dd4 <main+0x160>)
    1d0e:	4798      	blx	r3
    1d10:	9002      	str	r0, [sp, #8]
    1d12:	2300      	movs	r3, #0
    1d14:	9303      	str	r3, [sp, #12]
    1d16:	9802      	ldr	r0, [sp, #8]
    1d18:	9903      	ldr	r1, [sp, #12]
    1d1a:	4b30      	ldr	r3, [pc, #192]	; (1ddc <main+0x168>)
    1d1c:	2400      	movs	r4, #0
    1d1e:	18c0      	adds	r0, r0, r3
    1d20:	4161      	adcs	r1, r4
    1d22:	4a2f      	ldr	r2, [pc, #188]	; (1de0 <main+0x16c>)
    1d24:	2300      	movs	r3, #0
    1d26:	4c2f      	ldr	r4, [pc, #188]	; (1de4 <main+0x170>)
    1d28:	47a0      	blx	r4
    1d2a:	4b2f      	ldr	r3, [pc, #188]	; (1de8 <main+0x174>)
    1d2c:	4798      	blx	r3
		spi_read_buffer_wait(&spi_sercom1_mod, &data.readBuffer[3], 1, 0x00);
    1d2e:	ac05      	add	r4, sp, #20
    1d30:	2300      	movs	r3, #0
    1d32:	2201      	movs	r2, #1
    1d34:	210f      	movs	r1, #15
    1d36:	a802      	add	r0, sp, #8
    1d38:	4684      	mov	ip, r0
    1d3a:	4461      	add	r1, ip
    1d3c:	482c      	ldr	r0, [pc, #176]	; (1df0 <main+0x17c>)
    1d3e:	4e2d      	ldr	r6, [pc, #180]	; (1df4 <main+0x180>)
    1d40:	47b0      	blx	r6
		spi_read_buffer_wait(&spi_sercom1_mod, &data.readBuffer[2], 1, 0x00);
    1d42:	2300      	movs	r3, #0
    1d44:	2201      	movs	r2, #1
    1d46:	210e      	movs	r1, #14
    1d48:	a802      	add	r0, sp, #8
    1d4a:	4684      	mov	ip, r0
    1d4c:	4461      	add	r1, ip
    1d4e:	4828      	ldr	r0, [pc, #160]	; (1df0 <main+0x17c>)
    1d50:	47b0      	blx	r6
		spi_read_buffer_wait(&spi_sercom1_mod, &data.readBuffer[1], 1, 0x00);
    1d52:	2300      	movs	r3, #0
    1d54:	2201      	movs	r2, #1
    1d56:	210d      	movs	r1, #13
    1d58:	a802      	add	r0, sp, #8
    1d5a:	4684      	mov	ip, r0
    1d5c:	4461      	add	r1, ip
    1d5e:	4824      	ldr	r0, [pc, #144]	; (1df0 <main+0x17c>)
    1d60:	47b0      	blx	r6
		spi_read_buffer_wait(&spi_sercom1_mod, &data.readBuffer[0], 1, 0x00);
    1d62:	2300      	movs	r3, #0
    1d64:	2201      	movs	r2, #1
    1d66:	0021      	movs	r1, r4
    1d68:	4821      	ldr	r0, [pc, #132]	; (1df0 <main+0x17c>)
    1d6a:	47b0      	blx	r6
		DEBUG("%#x\t%#x\t%#x\t%#x\n", data.readBuffer[0], data.readBuffer[1], data.readBuffer[2], data.readBuffer[3]);
    1d6c:	7863      	ldrb	r3, [r4, #1]
    1d6e:	7822      	ldrb	r2, [r4, #0]
    1d70:	78e1      	ldrb	r1, [r4, #3]
    1d72:	9101      	str	r1, [sp, #4]
    1d74:	78a1      	ldrb	r1, [r4, #2]
    1d76:	9100      	str	r1, [sp, #0]
    1d78:	491f      	ldr	r1, [pc, #124]	; (1df8 <main+0x184>)
    1d7a:	4814      	ldr	r0, [pc, #80]	; (1dcc <main+0x158>)
    1d7c:	4c14      	ldr	r4, [pc, #80]	; (1dd0 <main+0x15c>)
    1d7e:	47a0      	blx	r4
		PORT->Group[0].OUT.bit.OUT |= (1 << 10);
    1d80:	692a      	ldr	r2, [r5, #16]
    1d82:	2380      	movs	r3, #128	; 0x80
    1d84:	00db      	lsls	r3, r3, #3
    1d86:	4313      	orrs	r3, r2
    1d88:	612b      	str	r3, [r5, #16]
		if(data.resultData & (uint32_t)1 << 31)
    1d8a:	9b05      	ldr	r3, [sp, #20]
			tempData = data.resultData >> 18;
    1d8c:	0c98      	lsrs	r0, r3, #18
		if(data.resultData & (uint32_t)1 << 31)
    1d8e:	2b00      	cmp	r3, #0
    1d90:	da94      	bge.n	1cbc <main+0x48>
			tempData = 0xC000 | ((data.resultData >> 18) & 0x3FFF);
    1d92:	0003      	movs	r3, r0
    1d94:	20c0      	movs	r0, #192	; 0xc0
    1d96:	0200      	lsls	r0, r0, #8
    1d98:	4318      	orrs	r0, r3
    1d9a:	e78f      	b.n	1cbc <main+0x48>
    1d9c:	00001b3d 	.word	0x00001b3d
    1da0:	000011ed 	.word	0x000011ed
    1da4:	000010cd 	.word	0x000010cd
    1da8:	2000000c 	.word	0x2000000c
    1dac:	41004400 	.word	0x41004400
    1db0:	20000be4 	.word	0x20000be4
    1db4:	000027fd 	.word	0x000027fd
    1db8:	3fd00000 	.word	0x3fd00000
    1dbc:	000022fd 	.word	0x000022fd
    1dc0:	00002925 	.word	0x00002925
    1dc4:	00002881 	.word	0x00002881
    1dc8:	000080b8 	.word	0x000080b8
    1dcc:	20000aac 	.word	0x20000aac
    1dd0:	000011a9 	.word	0x000011a9
    1dd4:	000018f9 	.word	0x000018f9
    1dd8:	00002129 	.word	0x00002129
    1ddc:	00001b57 	.word	0x00001b57
    1de0:	00001b58 	.word	0x00001b58
    1de4:	000020e9 	.word	0x000020e9
    1de8:	20000001 	.word	0x20000001
    1dec:	fffffbff 	.word	0xfffffbff
    1df0:	20000a70 	.word	0x20000a70
    1df4:	000007b1 	.word	0x000007b1
    1df8:	000080a4 	.word	0x000080a4

00001dfc <__udivsi3>:
    1dfc:	2200      	movs	r2, #0
    1dfe:	0843      	lsrs	r3, r0, #1
    1e00:	428b      	cmp	r3, r1
    1e02:	d374      	bcc.n	1eee <__udivsi3+0xf2>
    1e04:	0903      	lsrs	r3, r0, #4
    1e06:	428b      	cmp	r3, r1
    1e08:	d35f      	bcc.n	1eca <__udivsi3+0xce>
    1e0a:	0a03      	lsrs	r3, r0, #8
    1e0c:	428b      	cmp	r3, r1
    1e0e:	d344      	bcc.n	1e9a <__udivsi3+0x9e>
    1e10:	0b03      	lsrs	r3, r0, #12
    1e12:	428b      	cmp	r3, r1
    1e14:	d328      	bcc.n	1e68 <__udivsi3+0x6c>
    1e16:	0c03      	lsrs	r3, r0, #16
    1e18:	428b      	cmp	r3, r1
    1e1a:	d30d      	bcc.n	1e38 <__udivsi3+0x3c>
    1e1c:	22ff      	movs	r2, #255	; 0xff
    1e1e:	0209      	lsls	r1, r1, #8
    1e20:	ba12      	rev	r2, r2
    1e22:	0c03      	lsrs	r3, r0, #16
    1e24:	428b      	cmp	r3, r1
    1e26:	d302      	bcc.n	1e2e <__udivsi3+0x32>
    1e28:	1212      	asrs	r2, r2, #8
    1e2a:	0209      	lsls	r1, r1, #8
    1e2c:	d065      	beq.n	1efa <__udivsi3+0xfe>
    1e2e:	0b03      	lsrs	r3, r0, #12
    1e30:	428b      	cmp	r3, r1
    1e32:	d319      	bcc.n	1e68 <__udivsi3+0x6c>
    1e34:	e000      	b.n	1e38 <__udivsi3+0x3c>
    1e36:	0a09      	lsrs	r1, r1, #8
    1e38:	0bc3      	lsrs	r3, r0, #15
    1e3a:	428b      	cmp	r3, r1
    1e3c:	d301      	bcc.n	1e42 <__udivsi3+0x46>
    1e3e:	03cb      	lsls	r3, r1, #15
    1e40:	1ac0      	subs	r0, r0, r3
    1e42:	4152      	adcs	r2, r2
    1e44:	0b83      	lsrs	r3, r0, #14
    1e46:	428b      	cmp	r3, r1
    1e48:	d301      	bcc.n	1e4e <__udivsi3+0x52>
    1e4a:	038b      	lsls	r3, r1, #14
    1e4c:	1ac0      	subs	r0, r0, r3
    1e4e:	4152      	adcs	r2, r2
    1e50:	0b43      	lsrs	r3, r0, #13
    1e52:	428b      	cmp	r3, r1
    1e54:	d301      	bcc.n	1e5a <__udivsi3+0x5e>
    1e56:	034b      	lsls	r3, r1, #13
    1e58:	1ac0      	subs	r0, r0, r3
    1e5a:	4152      	adcs	r2, r2
    1e5c:	0b03      	lsrs	r3, r0, #12
    1e5e:	428b      	cmp	r3, r1
    1e60:	d301      	bcc.n	1e66 <__udivsi3+0x6a>
    1e62:	030b      	lsls	r3, r1, #12
    1e64:	1ac0      	subs	r0, r0, r3
    1e66:	4152      	adcs	r2, r2
    1e68:	0ac3      	lsrs	r3, r0, #11
    1e6a:	428b      	cmp	r3, r1
    1e6c:	d301      	bcc.n	1e72 <__udivsi3+0x76>
    1e6e:	02cb      	lsls	r3, r1, #11
    1e70:	1ac0      	subs	r0, r0, r3
    1e72:	4152      	adcs	r2, r2
    1e74:	0a83      	lsrs	r3, r0, #10
    1e76:	428b      	cmp	r3, r1
    1e78:	d301      	bcc.n	1e7e <__udivsi3+0x82>
    1e7a:	028b      	lsls	r3, r1, #10
    1e7c:	1ac0      	subs	r0, r0, r3
    1e7e:	4152      	adcs	r2, r2
    1e80:	0a43      	lsrs	r3, r0, #9
    1e82:	428b      	cmp	r3, r1
    1e84:	d301      	bcc.n	1e8a <__udivsi3+0x8e>
    1e86:	024b      	lsls	r3, r1, #9
    1e88:	1ac0      	subs	r0, r0, r3
    1e8a:	4152      	adcs	r2, r2
    1e8c:	0a03      	lsrs	r3, r0, #8
    1e8e:	428b      	cmp	r3, r1
    1e90:	d301      	bcc.n	1e96 <__udivsi3+0x9a>
    1e92:	020b      	lsls	r3, r1, #8
    1e94:	1ac0      	subs	r0, r0, r3
    1e96:	4152      	adcs	r2, r2
    1e98:	d2cd      	bcs.n	1e36 <__udivsi3+0x3a>
    1e9a:	09c3      	lsrs	r3, r0, #7
    1e9c:	428b      	cmp	r3, r1
    1e9e:	d301      	bcc.n	1ea4 <__udivsi3+0xa8>
    1ea0:	01cb      	lsls	r3, r1, #7
    1ea2:	1ac0      	subs	r0, r0, r3
    1ea4:	4152      	adcs	r2, r2
    1ea6:	0983      	lsrs	r3, r0, #6
    1ea8:	428b      	cmp	r3, r1
    1eaa:	d301      	bcc.n	1eb0 <__udivsi3+0xb4>
    1eac:	018b      	lsls	r3, r1, #6
    1eae:	1ac0      	subs	r0, r0, r3
    1eb0:	4152      	adcs	r2, r2
    1eb2:	0943      	lsrs	r3, r0, #5
    1eb4:	428b      	cmp	r3, r1
    1eb6:	d301      	bcc.n	1ebc <__udivsi3+0xc0>
    1eb8:	014b      	lsls	r3, r1, #5
    1eba:	1ac0      	subs	r0, r0, r3
    1ebc:	4152      	adcs	r2, r2
    1ebe:	0903      	lsrs	r3, r0, #4
    1ec0:	428b      	cmp	r3, r1
    1ec2:	d301      	bcc.n	1ec8 <__udivsi3+0xcc>
    1ec4:	010b      	lsls	r3, r1, #4
    1ec6:	1ac0      	subs	r0, r0, r3
    1ec8:	4152      	adcs	r2, r2
    1eca:	08c3      	lsrs	r3, r0, #3
    1ecc:	428b      	cmp	r3, r1
    1ece:	d301      	bcc.n	1ed4 <__udivsi3+0xd8>
    1ed0:	00cb      	lsls	r3, r1, #3
    1ed2:	1ac0      	subs	r0, r0, r3
    1ed4:	4152      	adcs	r2, r2
    1ed6:	0883      	lsrs	r3, r0, #2
    1ed8:	428b      	cmp	r3, r1
    1eda:	d301      	bcc.n	1ee0 <__udivsi3+0xe4>
    1edc:	008b      	lsls	r3, r1, #2
    1ede:	1ac0      	subs	r0, r0, r3
    1ee0:	4152      	adcs	r2, r2
    1ee2:	0843      	lsrs	r3, r0, #1
    1ee4:	428b      	cmp	r3, r1
    1ee6:	d301      	bcc.n	1eec <__udivsi3+0xf0>
    1ee8:	004b      	lsls	r3, r1, #1
    1eea:	1ac0      	subs	r0, r0, r3
    1eec:	4152      	adcs	r2, r2
    1eee:	1a41      	subs	r1, r0, r1
    1ef0:	d200      	bcs.n	1ef4 <__udivsi3+0xf8>
    1ef2:	4601      	mov	r1, r0
    1ef4:	4152      	adcs	r2, r2
    1ef6:	4610      	mov	r0, r2
    1ef8:	4770      	bx	lr
    1efa:	e7ff      	b.n	1efc <__udivsi3+0x100>
    1efc:	b501      	push	{r0, lr}
    1efe:	2000      	movs	r0, #0
    1f00:	f000 f8f0 	bl	20e4 <__aeabi_idiv0>
    1f04:	bd02      	pop	{r1, pc}
    1f06:	46c0      	nop			; (mov r8, r8)

00001f08 <__aeabi_uidivmod>:
    1f08:	2900      	cmp	r1, #0
    1f0a:	d0f7      	beq.n	1efc <__udivsi3+0x100>
    1f0c:	e776      	b.n	1dfc <__udivsi3>
    1f0e:	4770      	bx	lr

00001f10 <__divsi3>:
    1f10:	4603      	mov	r3, r0
    1f12:	430b      	orrs	r3, r1
    1f14:	d47f      	bmi.n	2016 <STACK_SIZE+0x16>
    1f16:	2200      	movs	r2, #0
    1f18:	0843      	lsrs	r3, r0, #1
    1f1a:	428b      	cmp	r3, r1
    1f1c:	d374      	bcc.n	2008 <STACK_SIZE+0x8>
    1f1e:	0903      	lsrs	r3, r0, #4
    1f20:	428b      	cmp	r3, r1
    1f22:	d35f      	bcc.n	1fe4 <__divsi3+0xd4>
    1f24:	0a03      	lsrs	r3, r0, #8
    1f26:	428b      	cmp	r3, r1
    1f28:	d344      	bcc.n	1fb4 <__divsi3+0xa4>
    1f2a:	0b03      	lsrs	r3, r0, #12
    1f2c:	428b      	cmp	r3, r1
    1f2e:	d328      	bcc.n	1f82 <__divsi3+0x72>
    1f30:	0c03      	lsrs	r3, r0, #16
    1f32:	428b      	cmp	r3, r1
    1f34:	d30d      	bcc.n	1f52 <__divsi3+0x42>
    1f36:	22ff      	movs	r2, #255	; 0xff
    1f38:	0209      	lsls	r1, r1, #8
    1f3a:	ba12      	rev	r2, r2
    1f3c:	0c03      	lsrs	r3, r0, #16
    1f3e:	428b      	cmp	r3, r1
    1f40:	d302      	bcc.n	1f48 <__divsi3+0x38>
    1f42:	1212      	asrs	r2, r2, #8
    1f44:	0209      	lsls	r1, r1, #8
    1f46:	d065      	beq.n	2014 <STACK_SIZE+0x14>
    1f48:	0b03      	lsrs	r3, r0, #12
    1f4a:	428b      	cmp	r3, r1
    1f4c:	d319      	bcc.n	1f82 <__divsi3+0x72>
    1f4e:	e000      	b.n	1f52 <__divsi3+0x42>
    1f50:	0a09      	lsrs	r1, r1, #8
    1f52:	0bc3      	lsrs	r3, r0, #15
    1f54:	428b      	cmp	r3, r1
    1f56:	d301      	bcc.n	1f5c <__divsi3+0x4c>
    1f58:	03cb      	lsls	r3, r1, #15
    1f5a:	1ac0      	subs	r0, r0, r3
    1f5c:	4152      	adcs	r2, r2
    1f5e:	0b83      	lsrs	r3, r0, #14
    1f60:	428b      	cmp	r3, r1
    1f62:	d301      	bcc.n	1f68 <__divsi3+0x58>
    1f64:	038b      	lsls	r3, r1, #14
    1f66:	1ac0      	subs	r0, r0, r3
    1f68:	4152      	adcs	r2, r2
    1f6a:	0b43      	lsrs	r3, r0, #13
    1f6c:	428b      	cmp	r3, r1
    1f6e:	d301      	bcc.n	1f74 <__divsi3+0x64>
    1f70:	034b      	lsls	r3, r1, #13
    1f72:	1ac0      	subs	r0, r0, r3
    1f74:	4152      	adcs	r2, r2
    1f76:	0b03      	lsrs	r3, r0, #12
    1f78:	428b      	cmp	r3, r1
    1f7a:	d301      	bcc.n	1f80 <__divsi3+0x70>
    1f7c:	030b      	lsls	r3, r1, #12
    1f7e:	1ac0      	subs	r0, r0, r3
    1f80:	4152      	adcs	r2, r2
    1f82:	0ac3      	lsrs	r3, r0, #11
    1f84:	428b      	cmp	r3, r1
    1f86:	d301      	bcc.n	1f8c <__divsi3+0x7c>
    1f88:	02cb      	lsls	r3, r1, #11
    1f8a:	1ac0      	subs	r0, r0, r3
    1f8c:	4152      	adcs	r2, r2
    1f8e:	0a83      	lsrs	r3, r0, #10
    1f90:	428b      	cmp	r3, r1
    1f92:	d301      	bcc.n	1f98 <__divsi3+0x88>
    1f94:	028b      	lsls	r3, r1, #10
    1f96:	1ac0      	subs	r0, r0, r3
    1f98:	4152      	adcs	r2, r2
    1f9a:	0a43      	lsrs	r3, r0, #9
    1f9c:	428b      	cmp	r3, r1
    1f9e:	d301      	bcc.n	1fa4 <__divsi3+0x94>
    1fa0:	024b      	lsls	r3, r1, #9
    1fa2:	1ac0      	subs	r0, r0, r3
    1fa4:	4152      	adcs	r2, r2
    1fa6:	0a03      	lsrs	r3, r0, #8
    1fa8:	428b      	cmp	r3, r1
    1faa:	d301      	bcc.n	1fb0 <__divsi3+0xa0>
    1fac:	020b      	lsls	r3, r1, #8
    1fae:	1ac0      	subs	r0, r0, r3
    1fb0:	4152      	adcs	r2, r2
    1fb2:	d2cd      	bcs.n	1f50 <__divsi3+0x40>
    1fb4:	09c3      	lsrs	r3, r0, #7
    1fb6:	428b      	cmp	r3, r1
    1fb8:	d301      	bcc.n	1fbe <__divsi3+0xae>
    1fba:	01cb      	lsls	r3, r1, #7
    1fbc:	1ac0      	subs	r0, r0, r3
    1fbe:	4152      	adcs	r2, r2
    1fc0:	0983      	lsrs	r3, r0, #6
    1fc2:	428b      	cmp	r3, r1
    1fc4:	d301      	bcc.n	1fca <__divsi3+0xba>
    1fc6:	018b      	lsls	r3, r1, #6
    1fc8:	1ac0      	subs	r0, r0, r3
    1fca:	4152      	adcs	r2, r2
    1fcc:	0943      	lsrs	r3, r0, #5
    1fce:	428b      	cmp	r3, r1
    1fd0:	d301      	bcc.n	1fd6 <__divsi3+0xc6>
    1fd2:	014b      	lsls	r3, r1, #5
    1fd4:	1ac0      	subs	r0, r0, r3
    1fd6:	4152      	adcs	r2, r2
    1fd8:	0903      	lsrs	r3, r0, #4
    1fda:	428b      	cmp	r3, r1
    1fdc:	d301      	bcc.n	1fe2 <__divsi3+0xd2>
    1fde:	010b      	lsls	r3, r1, #4
    1fe0:	1ac0      	subs	r0, r0, r3
    1fe2:	4152      	adcs	r2, r2
    1fe4:	08c3      	lsrs	r3, r0, #3
    1fe6:	428b      	cmp	r3, r1
    1fe8:	d301      	bcc.n	1fee <__divsi3+0xde>
    1fea:	00cb      	lsls	r3, r1, #3
    1fec:	1ac0      	subs	r0, r0, r3
    1fee:	4152      	adcs	r2, r2
    1ff0:	0883      	lsrs	r3, r0, #2
    1ff2:	428b      	cmp	r3, r1
    1ff4:	d301      	bcc.n	1ffa <__divsi3+0xea>
    1ff6:	008b      	lsls	r3, r1, #2
    1ff8:	1ac0      	subs	r0, r0, r3
    1ffa:	4152      	adcs	r2, r2
    1ffc:	0843      	lsrs	r3, r0, #1
    1ffe:	428b      	cmp	r3, r1
    2000:	d301      	bcc.n	2006 <STACK_SIZE+0x6>
    2002:	004b      	lsls	r3, r1, #1
    2004:	1ac0      	subs	r0, r0, r3
    2006:	4152      	adcs	r2, r2
    2008:	1a41      	subs	r1, r0, r1
    200a:	d200      	bcs.n	200e <STACK_SIZE+0xe>
    200c:	4601      	mov	r1, r0
    200e:	4152      	adcs	r2, r2
    2010:	4610      	mov	r0, r2
    2012:	4770      	bx	lr
    2014:	e05d      	b.n	20d2 <STACK_SIZE+0xd2>
    2016:	0fca      	lsrs	r2, r1, #31
    2018:	d000      	beq.n	201c <STACK_SIZE+0x1c>
    201a:	4249      	negs	r1, r1
    201c:	1003      	asrs	r3, r0, #32
    201e:	d300      	bcc.n	2022 <STACK_SIZE+0x22>
    2020:	4240      	negs	r0, r0
    2022:	4053      	eors	r3, r2
    2024:	2200      	movs	r2, #0
    2026:	469c      	mov	ip, r3
    2028:	0903      	lsrs	r3, r0, #4
    202a:	428b      	cmp	r3, r1
    202c:	d32d      	bcc.n	208a <STACK_SIZE+0x8a>
    202e:	0a03      	lsrs	r3, r0, #8
    2030:	428b      	cmp	r3, r1
    2032:	d312      	bcc.n	205a <STACK_SIZE+0x5a>
    2034:	22fc      	movs	r2, #252	; 0xfc
    2036:	0189      	lsls	r1, r1, #6
    2038:	ba12      	rev	r2, r2
    203a:	0a03      	lsrs	r3, r0, #8
    203c:	428b      	cmp	r3, r1
    203e:	d30c      	bcc.n	205a <STACK_SIZE+0x5a>
    2040:	0189      	lsls	r1, r1, #6
    2042:	1192      	asrs	r2, r2, #6
    2044:	428b      	cmp	r3, r1
    2046:	d308      	bcc.n	205a <STACK_SIZE+0x5a>
    2048:	0189      	lsls	r1, r1, #6
    204a:	1192      	asrs	r2, r2, #6
    204c:	428b      	cmp	r3, r1
    204e:	d304      	bcc.n	205a <STACK_SIZE+0x5a>
    2050:	0189      	lsls	r1, r1, #6
    2052:	d03a      	beq.n	20ca <STACK_SIZE+0xca>
    2054:	1192      	asrs	r2, r2, #6
    2056:	e000      	b.n	205a <STACK_SIZE+0x5a>
    2058:	0989      	lsrs	r1, r1, #6
    205a:	09c3      	lsrs	r3, r0, #7
    205c:	428b      	cmp	r3, r1
    205e:	d301      	bcc.n	2064 <STACK_SIZE+0x64>
    2060:	01cb      	lsls	r3, r1, #7
    2062:	1ac0      	subs	r0, r0, r3
    2064:	4152      	adcs	r2, r2
    2066:	0983      	lsrs	r3, r0, #6
    2068:	428b      	cmp	r3, r1
    206a:	d301      	bcc.n	2070 <STACK_SIZE+0x70>
    206c:	018b      	lsls	r3, r1, #6
    206e:	1ac0      	subs	r0, r0, r3
    2070:	4152      	adcs	r2, r2
    2072:	0943      	lsrs	r3, r0, #5
    2074:	428b      	cmp	r3, r1
    2076:	d301      	bcc.n	207c <STACK_SIZE+0x7c>
    2078:	014b      	lsls	r3, r1, #5
    207a:	1ac0      	subs	r0, r0, r3
    207c:	4152      	adcs	r2, r2
    207e:	0903      	lsrs	r3, r0, #4
    2080:	428b      	cmp	r3, r1
    2082:	d301      	bcc.n	2088 <STACK_SIZE+0x88>
    2084:	010b      	lsls	r3, r1, #4
    2086:	1ac0      	subs	r0, r0, r3
    2088:	4152      	adcs	r2, r2
    208a:	08c3      	lsrs	r3, r0, #3
    208c:	428b      	cmp	r3, r1
    208e:	d301      	bcc.n	2094 <STACK_SIZE+0x94>
    2090:	00cb      	lsls	r3, r1, #3
    2092:	1ac0      	subs	r0, r0, r3
    2094:	4152      	adcs	r2, r2
    2096:	0883      	lsrs	r3, r0, #2
    2098:	428b      	cmp	r3, r1
    209a:	d301      	bcc.n	20a0 <STACK_SIZE+0xa0>
    209c:	008b      	lsls	r3, r1, #2
    209e:	1ac0      	subs	r0, r0, r3
    20a0:	4152      	adcs	r2, r2
    20a2:	d2d9      	bcs.n	2058 <STACK_SIZE+0x58>
    20a4:	0843      	lsrs	r3, r0, #1
    20a6:	428b      	cmp	r3, r1
    20a8:	d301      	bcc.n	20ae <STACK_SIZE+0xae>
    20aa:	004b      	lsls	r3, r1, #1
    20ac:	1ac0      	subs	r0, r0, r3
    20ae:	4152      	adcs	r2, r2
    20b0:	1a41      	subs	r1, r0, r1
    20b2:	d200      	bcs.n	20b6 <STACK_SIZE+0xb6>
    20b4:	4601      	mov	r1, r0
    20b6:	4663      	mov	r3, ip
    20b8:	4152      	adcs	r2, r2
    20ba:	105b      	asrs	r3, r3, #1
    20bc:	4610      	mov	r0, r2
    20be:	d301      	bcc.n	20c4 <STACK_SIZE+0xc4>
    20c0:	4240      	negs	r0, r0
    20c2:	2b00      	cmp	r3, #0
    20c4:	d500      	bpl.n	20c8 <STACK_SIZE+0xc8>
    20c6:	4249      	negs	r1, r1
    20c8:	4770      	bx	lr
    20ca:	4663      	mov	r3, ip
    20cc:	105b      	asrs	r3, r3, #1
    20ce:	d300      	bcc.n	20d2 <STACK_SIZE+0xd2>
    20d0:	4240      	negs	r0, r0
    20d2:	b501      	push	{r0, lr}
    20d4:	2000      	movs	r0, #0
    20d6:	f000 f805 	bl	20e4 <__aeabi_idiv0>
    20da:	bd02      	pop	{r1, pc}

000020dc <__aeabi_idivmod>:
    20dc:	2900      	cmp	r1, #0
    20de:	d0f8      	beq.n	20d2 <STACK_SIZE+0xd2>
    20e0:	e716      	b.n	1f10 <__divsi3>
    20e2:	4770      	bx	lr

000020e4 <__aeabi_idiv0>:
    20e4:	4770      	bx	lr
    20e6:	46c0      	nop			; (mov r8, r8)

000020e8 <__aeabi_uldivmod>:
    20e8:	2b00      	cmp	r3, #0
    20ea:	d111      	bne.n	2110 <__aeabi_uldivmod+0x28>
    20ec:	2a00      	cmp	r2, #0
    20ee:	d10f      	bne.n	2110 <__aeabi_uldivmod+0x28>
    20f0:	2900      	cmp	r1, #0
    20f2:	d100      	bne.n	20f6 <__aeabi_uldivmod+0xe>
    20f4:	2800      	cmp	r0, #0
    20f6:	d002      	beq.n	20fe <__aeabi_uldivmod+0x16>
    20f8:	2100      	movs	r1, #0
    20fa:	43c9      	mvns	r1, r1
    20fc:	1c08      	adds	r0, r1, #0
    20fe:	b407      	push	{r0, r1, r2}
    2100:	4802      	ldr	r0, [pc, #8]	; (210c <__aeabi_uldivmod+0x24>)
    2102:	a102      	add	r1, pc, #8	; (adr r1, 210c <__aeabi_uldivmod+0x24>)
    2104:	1840      	adds	r0, r0, r1
    2106:	9002      	str	r0, [sp, #8]
    2108:	bd03      	pop	{r0, r1, pc}
    210a:	46c0      	nop			; (mov r8, r8)
    210c:	ffffffd9 	.word	0xffffffd9
    2110:	b403      	push	{r0, r1}
    2112:	4668      	mov	r0, sp
    2114:	b501      	push	{r0, lr}
    2116:	9802      	ldr	r0, [sp, #8]
    2118:	f000 f830 	bl	217c <__udivmoddi4>
    211c:	9b01      	ldr	r3, [sp, #4]
    211e:	469e      	mov	lr, r3
    2120:	b002      	add	sp, #8
    2122:	bc0c      	pop	{r2, r3}
    2124:	4770      	bx	lr
    2126:	46c0      	nop			; (mov r8, r8)

00002128 <__aeabi_lmul>:
    2128:	b5f0      	push	{r4, r5, r6, r7, lr}
    212a:	46ce      	mov	lr, r9
    212c:	4647      	mov	r7, r8
    212e:	0415      	lsls	r5, r2, #16
    2130:	0c2d      	lsrs	r5, r5, #16
    2132:	002e      	movs	r6, r5
    2134:	b580      	push	{r7, lr}
    2136:	0407      	lsls	r7, r0, #16
    2138:	0c14      	lsrs	r4, r2, #16
    213a:	0c3f      	lsrs	r7, r7, #16
    213c:	4699      	mov	r9, r3
    213e:	0c03      	lsrs	r3, r0, #16
    2140:	437e      	muls	r6, r7
    2142:	435d      	muls	r5, r3
    2144:	4367      	muls	r7, r4
    2146:	4363      	muls	r3, r4
    2148:	197f      	adds	r7, r7, r5
    214a:	0c34      	lsrs	r4, r6, #16
    214c:	19e4      	adds	r4, r4, r7
    214e:	469c      	mov	ip, r3
    2150:	42a5      	cmp	r5, r4
    2152:	d903      	bls.n	215c <__aeabi_lmul+0x34>
    2154:	2380      	movs	r3, #128	; 0x80
    2156:	025b      	lsls	r3, r3, #9
    2158:	4698      	mov	r8, r3
    215a:	44c4      	add	ip, r8
    215c:	464b      	mov	r3, r9
    215e:	4351      	muls	r1, r2
    2160:	4343      	muls	r3, r0
    2162:	0436      	lsls	r6, r6, #16
    2164:	0c36      	lsrs	r6, r6, #16
    2166:	0c25      	lsrs	r5, r4, #16
    2168:	0424      	lsls	r4, r4, #16
    216a:	4465      	add	r5, ip
    216c:	19a4      	adds	r4, r4, r6
    216e:	1859      	adds	r1, r3, r1
    2170:	1949      	adds	r1, r1, r5
    2172:	0020      	movs	r0, r4
    2174:	bc0c      	pop	{r2, r3}
    2176:	4690      	mov	r8, r2
    2178:	4699      	mov	r9, r3
    217a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000217c <__udivmoddi4>:
    217c:	b5f0      	push	{r4, r5, r6, r7, lr}
    217e:	4657      	mov	r7, sl
    2180:	464e      	mov	r6, r9
    2182:	4645      	mov	r5, r8
    2184:	46de      	mov	lr, fp
    2186:	b5e0      	push	{r5, r6, r7, lr}
    2188:	0004      	movs	r4, r0
    218a:	b083      	sub	sp, #12
    218c:	000d      	movs	r5, r1
    218e:	4692      	mov	sl, r2
    2190:	4699      	mov	r9, r3
    2192:	428b      	cmp	r3, r1
    2194:	d82f      	bhi.n	21f6 <__udivmoddi4+0x7a>
    2196:	d02c      	beq.n	21f2 <__udivmoddi4+0x76>
    2198:	4649      	mov	r1, r9
    219a:	4650      	mov	r0, sl
    219c:	f000 fc6a 	bl	2a74 <__clzdi2>
    21a0:	0029      	movs	r1, r5
    21a2:	0006      	movs	r6, r0
    21a4:	0020      	movs	r0, r4
    21a6:	f000 fc65 	bl	2a74 <__clzdi2>
    21aa:	1a33      	subs	r3, r6, r0
    21ac:	4698      	mov	r8, r3
    21ae:	3b20      	subs	r3, #32
    21b0:	469b      	mov	fp, r3
    21b2:	d500      	bpl.n	21b6 <__udivmoddi4+0x3a>
    21b4:	e074      	b.n	22a0 <__udivmoddi4+0x124>
    21b6:	4653      	mov	r3, sl
    21b8:	465a      	mov	r2, fp
    21ba:	4093      	lsls	r3, r2
    21bc:	001f      	movs	r7, r3
    21be:	4653      	mov	r3, sl
    21c0:	4642      	mov	r2, r8
    21c2:	4093      	lsls	r3, r2
    21c4:	001e      	movs	r6, r3
    21c6:	42af      	cmp	r7, r5
    21c8:	d829      	bhi.n	221e <__udivmoddi4+0xa2>
    21ca:	d026      	beq.n	221a <__udivmoddi4+0x9e>
    21cc:	465b      	mov	r3, fp
    21ce:	1ba4      	subs	r4, r4, r6
    21d0:	41bd      	sbcs	r5, r7
    21d2:	2b00      	cmp	r3, #0
    21d4:	da00      	bge.n	21d8 <__udivmoddi4+0x5c>
    21d6:	e079      	b.n	22cc <__udivmoddi4+0x150>
    21d8:	2200      	movs	r2, #0
    21da:	2300      	movs	r3, #0
    21dc:	9200      	str	r2, [sp, #0]
    21de:	9301      	str	r3, [sp, #4]
    21e0:	2301      	movs	r3, #1
    21e2:	465a      	mov	r2, fp
    21e4:	4093      	lsls	r3, r2
    21e6:	9301      	str	r3, [sp, #4]
    21e8:	2301      	movs	r3, #1
    21ea:	4642      	mov	r2, r8
    21ec:	4093      	lsls	r3, r2
    21ee:	9300      	str	r3, [sp, #0]
    21f0:	e019      	b.n	2226 <__udivmoddi4+0xaa>
    21f2:	4282      	cmp	r2, r0
    21f4:	d9d0      	bls.n	2198 <__udivmoddi4+0x1c>
    21f6:	2200      	movs	r2, #0
    21f8:	2300      	movs	r3, #0
    21fa:	9200      	str	r2, [sp, #0]
    21fc:	9301      	str	r3, [sp, #4]
    21fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2200:	2b00      	cmp	r3, #0
    2202:	d001      	beq.n	2208 <__udivmoddi4+0x8c>
    2204:	601c      	str	r4, [r3, #0]
    2206:	605d      	str	r5, [r3, #4]
    2208:	9800      	ldr	r0, [sp, #0]
    220a:	9901      	ldr	r1, [sp, #4]
    220c:	b003      	add	sp, #12
    220e:	bc3c      	pop	{r2, r3, r4, r5}
    2210:	4690      	mov	r8, r2
    2212:	4699      	mov	r9, r3
    2214:	46a2      	mov	sl, r4
    2216:	46ab      	mov	fp, r5
    2218:	bdf0      	pop	{r4, r5, r6, r7, pc}
    221a:	42a3      	cmp	r3, r4
    221c:	d9d6      	bls.n	21cc <__udivmoddi4+0x50>
    221e:	2200      	movs	r2, #0
    2220:	2300      	movs	r3, #0
    2222:	9200      	str	r2, [sp, #0]
    2224:	9301      	str	r3, [sp, #4]
    2226:	4643      	mov	r3, r8
    2228:	2b00      	cmp	r3, #0
    222a:	d0e8      	beq.n	21fe <__udivmoddi4+0x82>
    222c:	07fb      	lsls	r3, r7, #31
    222e:	0872      	lsrs	r2, r6, #1
    2230:	431a      	orrs	r2, r3
    2232:	4646      	mov	r6, r8
    2234:	087b      	lsrs	r3, r7, #1
    2236:	e00e      	b.n	2256 <__udivmoddi4+0xda>
    2238:	42ab      	cmp	r3, r5
    223a:	d101      	bne.n	2240 <__udivmoddi4+0xc4>
    223c:	42a2      	cmp	r2, r4
    223e:	d80c      	bhi.n	225a <__udivmoddi4+0xde>
    2240:	1aa4      	subs	r4, r4, r2
    2242:	419d      	sbcs	r5, r3
    2244:	2001      	movs	r0, #1
    2246:	1924      	adds	r4, r4, r4
    2248:	416d      	adcs	r5, r5
    224a:	2100      	movs	r1, #0
    224c:	3e01      	subs	r6, #1
    224e:	1824      	adds	r4, r4, r0
    2250:	414d      	adcs	r5, r1
    2252:	2e00      	cmp	r6, #0
    2254:	d006      	beq.n	2264 <__udivmoddi4+0xe8>
    2256:	42ab      	cmp	r3, r5
    2258:	d9ee      	bls.n	2238 <__udivmoddi4+0xbc>
    225a:	3e01      	subs	r6, #1
    225c:	1924      	adds	r4, r4, r4
    225e:	416d      	adcs	r5, r5
    2260:	2e00      	cmp	r6, #0
    2262:	d1f8      	bne.n	2256 <__udivmoddi4+0xda>
    2264:	465b      	mov	r3, fp
    2266:	9800      	ldr	r0, [sp, #0]
    2268:	9901      	ldr	r1, [sp, #4]
    226a:	1900      	adds	r0, r0, r4
    226c:	4169      	adcs	r1, r5
    226e:	2b00      	cmp	r3, #0
    2270:	db22      	blt.n	22b8 <__udivmoddi4+0x13c>
    2272:	002b      	movs	r3, r5
    2274:	465a      	mov	r2, fp
    2276:	40d3      	lsrs	r3, r2
    2278:	002a      	movs	r2, r5
    227a:	4644      	mov	r4, r8
    227c:	40e2      	lsrs	r2, r4
    227e:	001c      	movs	r4, r3
    2280:	465b      	mov	r3, fp
    2282:	0015      	movs	r5, r2
    2284:	2b00      	cmp	r3, #0
    2286:	db2c      	blt.n	22e2 <__udivmoddi4+0x166>
    2288:	0026      	movs	r6, r4
    228a:	409e      	lsls	r6, r3
    228c:	0033      	movs	r3, r6
    228e:	0026      	movs	r6, r4
    2290:	4647      	mov	r7, r8
    2292:	40be      	lsls	r6, r7
    2294:	0032      	movs	r2, r6
    2296:	1a80      	subs	r0, r0, r2
    2298:	4199      	sbcs	r1, r3
    229a:	9000      	str	r0, [sp, #0]
    229c:	9101      	str	r1, [sp, #4]
    229e:	e7ae      	b.n	21fe <__udivmoddi4+0x82>
    22a0:	4642      	mov	r2, r8
    22a2:	2320      	movs	r3, #32
    22a4:	1a9b      	subs	r3, r3, r2
    22a6:	4652      	mov	r2, sl
    22a8:	40da      	lsrs	r2, r3
    22aa:	4641      	mov	r1, r8
    22ac:	0013      	movs	r3, r2
    22ae:	464a      	mov	r2, r9
    22b0:	408a      	lsls	r2, r1
    22b2:	0017      	movs	r7, r2
    22b4:	431f      	orrs	r7, r3
    22b6:	e782      	b.n	21be <__udivmoddi4+0x42>
    22b8:	4642      	mov	r2, r8
    22ba:	2320      	movs	r3, #32
    22bc:	1a9b      	subs	r3, r3, r2
    22be:	002a      	movs	r2, r5
    22c0:	4646      	mov	r6, r8
    22c2:	409a      	lsls	r2, r3
    22c4:	0023      	movs	r3, r4
    22c6:	40f3      	lsrs	r3, r6
    22c8:	4313      	orrs	r3, r2
    22ca:	e7d5      	b.n	2278 <__udivmoddi4+0xfc>
    22cc:	4642      	mov	r2, r8
    22ce:	2320      	movs	r3, #32
    22d0:	2100      	movs	r1, #0
    22d2:	1a9b      	subs	r3, r3, r2
    22d4:	2200      	movs	r2, #0
    22d6:	9100      	str	r1, [sp, #0]
    22d8:	9201      	str	r2, [sp, #4]
    22da:	2201      	movs	r2, #1
    22dc:	40da      	lsrs	r2, r3
    22de:	9201      	str	r2, [sp, #4]
    22e0:	e782      	b.n	21e8 <__udivmoddi4+0x6c>
    22e2:	4642      	mov	r2, r8
    22e4:	2320      	movs	r3, #32
    22e6:	0026      	movs	r6, r4
    22e8:	1a9b      	subs	r3, r3, r2
    22ea:	40de      	lsrs	r6, r3
    22ec:	002f      	movs	r7, r5
    22ee:	46b4      	mov	ip, r6
    22f0:	4097      	lsls	r7, r2
    22f2:	4666      	mov	r6, ip
    22f4:	003b      	movs	r3, r7
    22f6:	4333      	orrs	r3, r6
    22f8:	e7c9      	b.n	228e <__udivmoddi4+0x112>
    22fa:	46c0      	nop			; (mov r8, r8)

000022fc <__aeabi_dmul>:
    22fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    22fe:	4657      	mov	r7, sl
    2300:	4645      	mov	r5, r8
    2302:	46de      	mov	lr, fp
    2304:	464e      	mov	r6, r9
    2306:	b5e0      	push	{r5, r6, r7, lr}
    2308:	030c      	lsls	r4, r1, #12
    230a:	4698      	mov	r8, r3
    230c:	004e      	lsls	r6, r1, #1
    230e:	0b23      	lsrs	r3, r4, #12
    2310:	b087      	sub	sp, #28
    2312:	0007      	movs	r7, r0
    2314:	4692      	mov	sl, r2
    2316:	469b      	mov	fp, r3
    2318:	0d76      	lsrs	r6, r6, #21
    231a:	0fcd      	lsrs	r5, r1, #31
    231c:	2e00      	cmp	r6, #0
    231e:	d06b      	beq.n	23f8 <__aeabi_dmul+0xfc>
    2320:	4b6d      	ldr	r3, [pc, #436]	; (24d8 <__aeabi_dmul+0x1dc>)
    2322:	429e      	cmp	r6, r3
    2324:	d035      	beq.n	2392 <__aeabi_dmul+0x96>
    2326:	2480      	movs	r4, #128	; 0x80
    2328:	465b      	mov	r3, fp
    232a:	0f42      	lsrs	r2, r0, #29
    232c:	0424      	lsls	r4, r4, #16
    232e:	00db      	lsls	r3, r3, #3
    2330:	4314      	orrs	r4, r2
    2332:	431c      	orrs	r4, r3
    2334:	00c3      	lsls	r3, r0, #3
    2336:	4699      	mov	r9, r3
    2338:	4b68      	ldr	r3, [pc, #416]	; (24dc <__aeabi_dmul+0x1e0>)
    233a:	46a3      	mov	fp, r4
    233c:	469c      	mov	ip, r3
    233e:	2300      	movs	r3, #0
    2340:	2700      	movs	r7, #0
    2342:	4466      	add	r6, ip
    2344:	9302      	str	r3, [sp, #8]
    2346:	4643      	mov	r3, r8
    2348:	031c      	lsls	r4, r3, #12
    234a:	005a      	lsls	r2, r3, #1
    234c:	0fdb      	lsrs	r3, r3, #31
    234e:	4650      	mov	r0, sl
    2350:	0b24      	lsrs	r4, r4, #12
    2352:	0d52      	lsrs	r2, r2, #21
    2354:	4698      	mov	r8, r3
    2356:	d100      	bne.n	235a <__aeabi_dmul+0x5e>
    2358:	e076      	b.n	2448 <__aeabi_dmul+0x14c>
    235a:	4b5f      	ldr	r3, [pc, #380]	; (24d8 <__aeabi_dmul+0x1dc>)
    235c:	429a      	cmp	r2, r3
    235e:	d06d      	beq.n	243c <__aeabi_dmul+0x140>
    2360:	2380      	movs	r3, #128	; 0x80
    2362:	0f41      	lsrs	r1, r0, #29
    2364:	041b      	lsls	r3, r3, #16
    2366:	430b      	orrs	r3, r1
    2368:	495c      	ldr	r1, [pc, #368]	; (24dc <__aeabi_dmul+0x1e0>)
    236a:	00e4      	lsls	r4, r4, #3
    236c:	468c      	mov	ip, r1
    236e:	431c      	orrs	r4, r3
    2370:	00c3      	lsls	r3, r0, #3
    2372:	2000      	movs	r0, #0
    2374:	4462      	add	r2, ip
    2376:	4641      	mov	r1, r8
    2378:	18b6      	adds	r6, r6, r2
    237a:	4069      	eors	r1, r5
    237c:	1c72      	adds	r2, r6, #1
    237e:	9101      	str	r1, [sp, #4]
    2380:	4694      	mov	ip, r2
    2382:	4307      	orrs	r7, r0
    2384:	2f0f      	cmp	r7, #15
    2386:	d900      	bls.n	238a <__aeabi_dmul+0x8e>
    2388:	e0b0      	b.n	24ec <__aeabi_dmul+0x1f0>
    238a:	4a55      	ldr	r2, [pc, #340]	; (24e0 <__aeabi_dmul+0x1e4>)
    238c:	00bf      	lsls	r7, r7, #2
    238e:	59d2      	ldr	r2, [r2, r7]
    2390:	4697      	mov	pc, r2
    2392:	465b      	mov	r3, fp
    2394:	4303      	orrs	r3, r0
    2396:	4699      	mov	r9, r3
    2398:	d000      	beq.n	239c <__aeabi_dmul+0xa0>
    239a:	e087      	b.n	24ac <__aeabi_dmul+0x1b0>
    239c:	2300      	movs	r3, #0
    239e:	469b      	mov	fp, r3
    23a0:	3302      	adds	r3, #2
    23a2:	2708      	movs	r7, #8
    23a4:	9302      	str	r3, [sp, #8]
    23a6:	e7ce      	b.n	2346 <__aeabi_dmul+0x4a>
    23a8:	4642      	mov	r2, r8
    23aa:	9201      	str	r2, [sp, #4]
    23ac:	2802      	cmp	r0, #2
    23ae:	d067      	beq.n	2480 <__aeabi_dmul+0x184>
    23b0:	2803      	cmp	r0, #3
    23b2:	d100      	bne.n	23b6 <__aeabi_dmul+0xba>
    23b4:	e20e      	b.n	27d4 <__aeabi_dmul+0x4d8>
    23b6:	2801      	cmp	r0, #1
    23b8:	d000      	beq.n	23bc <__aeabi_dmul+0xc0>
    23ba:	e162      	b.n	2682 <__aeabi_dmul+0x386>
    23bc:	2300      	movs	r3, #0
    23be:	2400      	movs	r4, #0
    23c0:	2200      	movs	r2, #0
    23c2:	4699      	mov	r9, r3
    23c4:	9901      	ldr	r1, [sp, #4]
    23c6:	4001      	ands	r1, r0
    23c8:	b2cd      	uxtb	r5, r1
    23ca:	2100      	movs	r1, #0
    23cc:	0312      	lsls	r2, r2, #12
    23ce:	0d0b      	lsrs	r3, r1, #20
    23d0:	0b12      	lsrs	r2, r2, #12
    23d2:	051b      	lsls	r3, r3, #20
    23d4:	4313      	orrs	r3, r2
    23d6:	4a43      	ldr	r2, [pc, #268]	; (24e4 <__aeabi_dmul+0x1e8>)
    23d8:	0524      	lsls	r4, r4, #20
    23da:	4013      	ands	r3, r2
    23dc:	431c      	orrs	r4, r3
    23de:	0064      	lsls	r4, r4, #1
    23e0:	07ed      	lsls	r5, r5, #31
    23e2:	0864      	lsrs	r4, r4, #1
    23e4:	432c      	orrs	r4, r5
    23e6:	4648      	mov	r0, r9
    23e8:	0021      	movs	r1, r4
    23ea:	b007      	add	sp, #28
    23ec:	bc3c      	pop	{r2, r3, r4, r5}
    23ee:	4690      	mov	r8, r2
    23f0:	4699      	mov	r9, r3
    23f2:	46a2      	mov	sl, r4
    23f4:	46ab      	mov	fp, r5
    23f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    23f8:	4303      	orrs	r3, r0
    23fa:	4699      	mov	r9, r3
    23fc:	d04f      	beq.n	249e <__aeabi_dmul+0x1a2>
    23fe:	465b      	mov	r3, fp
    2400:	2b00      	cmp	r3, #0
    2402:	d100      	bne.n	2406 <__aeabi_dmul+0x10a>
    2404:	e189      	b.n	271a <__aeabi_dmul+0x41e>
    2406:	4658      	mov	r0, fp
    2408:	f000 fb16 	bl	2a38 <__clzsi2>
    240c:	0003      	movs	r3, r0
    240e:	3b0b      	subs	r3, #11
    2410:	2b1c      	cmp	r3, #28
    2412:	dd00      	ble.n	2416 <__aeabi_dmul+0x11a>
    2414:	e17a      	b.n	270c <__aeabi_dmul+0x410>
    2416:	221d      	movs	r2, #29
    2418:	1ad3      	subs	r3, r2, r3
    241a:	003a      	movs	r2, r7
    241c:	0001      	movs	r1, r0
    241e:	465c      	mov	r4, fp
    2420:	40da      	lsrs	r2, r3
    2422:	3908      	subs	r1, #8
    2424:	408c      	lsls	r4, r1
    2426:	0013      	movs	r3, r2
    2428:	408f      	lsls	r7, r1
    242a:	4323      	orrs	r3, r4
    242c:	469b      	mov	fp, r3
    242e:	46b9      	mov	r9, r7
    2430:	2300      	movs	r3, #0
    2432:	4e2d      	ldr	r6, [pc, #180]	; (24e8 <__aeabi_dmul+0x1ec>)
    2434:	2700      	movs	r7, #0
    2436:	1a36      	subs	r6, r6, r0
    2438:	9302      	str	r3, [sp, #8]
    243a:	e784      	b.n	2346 <__aeabi_dmul+0x4a>
    243c:	4653      	mov	r3, sl
    243e:	4323      	orrs	r3, r4
    2440:	d12a      	bne.n	2498 <__aeabi_dmul+0x19c>
    2442:	2400      	movs	r4, #0
    2444:	2002      	movs	r0, #2
    2446:	e796      	b.n	2376 <__aeabi_dmul+0x7a>
    2448:	4653      	mov	r3, sl
    244a:	4323      	orrs	r3, r4
    244c:	d020      	beq.n	2490 <__aeabi_dmul+0x194>
    244e:	2c00      	cmp	r4, #0
    2450:	d100      	bne.n	2454 <__aeabi_dmul+0x158>
    2452:	e157      	b.n	2704 <__aeabi_dmul+0x408>
    2454:	0020      	movs	r0, r4
    2456:	f000 faef 	bl	2a38 <__clzsi2>
    245a:	0003      	movs	r3, r0
    245c:	3b0b      	subs	r3, #11
    245e:	2b1c      	cmp	r3, #28
    2460:	dd00      	ble.n	2464 <__aeabi_dmul+0x168>
    2462:	e149      	b.n	26f8 <__aeabi_dmul+0x3fc>
    2464:	211d      	movs	r1, #29
    2466:	1acb      	subs	r3, r1, r3
    2468:	4651      	mov	r1, sl
    246a:	0002      	movs	r2, r0
    246c:	40d9      	lsrs	r1, r3
    246e:	4653      	mov	r3, sl
    2470:	3a08      	subs	r2, #8
    2472:	4094      	lsls	r4, r2
    2474:	4093      	lsls	r3, r2
    2476:	430c      	orrs	r4, r1
    2478:	4a1b      	ldr	r2, [pc, #108]	; (24e8 <__aeabi_dmul+0x1ec>)
    247a:	1a12      	subs	r2, r2, r0
    247c:	2000      	movs	r0, #0
    247e:	e77a      	b.n	2376 <__aeabi_dmul+0x7a>
    2480:	2501      	movs	r5, #1
    2482:	9b01      	ldr	r3, [sp, #4]
    2484:	4c14      	ldr	r4, [pc, #80]	; (24d8 <__aeabi_dmul+0x1dc>)
    2486:	401d      	ands	r5, r3
    2488:	2300      	movs	r3, #0
    248a:	2200      	movs	r2, #0
    248c:	4699      	mov	r9, r3
    248e:	e79c      	b.n	23ca <__aeabi_dmul+0xce>
    2490:	2400      	movs	r4, #0
    2492:	2200      	movs	r2, #0
    2494:	2001      	movs	r0, #1
    2496:	e76e      	b.n	2376 <__aeabi_dmul+0x7a>
    2498:	4653      	mov	r3, sl
    249a:	2003      	movs	r0, #3
    249c:	e76b      	b.n	2376 <__aeabi_dmul+0x7a>
    249e:	2300      	movs	r3, #0
    24a0:	469b      	mov	fp, r3
    24a2:	3301      	adds	r3, #1
    24a4:	2704      	movs	r7, #4
    24a6:	2600      	movs	r6, #0
    24a8:	9302      	str	r3, [sp, #8]
    24aa:	e74c      	b.n	2346 <__aeabi_dmul+0x4a>
    24ac:	2303      	movs	r3, #3
    24ae:	4681      	mov	r9, r0
    24b0:	270c      	movs	r7, #12
    24b2:	9302      	str	r3, [sp, #8]
    24b4:	e747      	b.n	2346 <__aeabi_dmul+0x4a>
    24b6:	2280      	movs	r2, #128	; 0x80
    24b8:	2300      	movs	r3, #0
    24ba:	2500      	movs	r5, #0
    24bc:	0312      	lsls	r2, r2, #12
    24be:	4699      	mov	r9, r3
    24c0:	4c05      	ldr	r4, [pc, #20]	; (24d8 <__aeabi_dmul+0x1dc>)
    24c2:	e782      	b.n	23ca <__aeabi_dmul+0xce>
    24c4:	465c      	mov	r4, fp
    24c6:	464b      	mov	r3, r9
    24c8:	9802      	ldr	r0, [sp, #8]
    24ca:	e76f      	b.n	23ac <__aeabi_dmul+0xb0>
    24cc:	465c      	mov	r4, fp
    24ce:	464b      	mov	r3, r9
    24d0:	9501      	str	r5, [sp, #4]
    24d2:	9802      	ldr	r0, [sp, #8]
    24d4:	e76a      	b.n	23ac <__aeabi_dmul+0xb0>
    24d6:	46c0      	nop			; (mov r8, r8)
    24d8:	000007ff 	.word	0x000007ff
    24dc:	fffffc01 	.word	0xfffffc01
    24e0:	000080bc 	.word	0x000080bc
    24e4:	800fffff 	.word	0x800fffff
    24e8:	fffffc0d 	.word	0xfffffc0d
    24ec:	464a      	mov	r2, r9
    24ee:	4649      	mov	r1, r9
    24f0:	0c17      	lsrs	r7, r2, #16
    24f2:	0c1a      	lsrs	r2, r3, #16
    24f4:	041b      	lsls	r3, r3, #16
    24f6:	0c1b      	lsrs	r3, r3, #16
    24f8:	0408      	lsls	r0, r1, #16
    24fa:	0019      	movs	r1, r3
    24fc:	0c00      	lsrs	r0, r0, #16
    24fe:	4341      	muls	r1, r0
    2500:	0015      	movs	r5, r2
    2502:	4688      	mov	r8, r1
    2504:	0019      	movs	r1, r3
    2506:	437d      	muls	r5, r7
    2508:	4379      	muls	r1, r7
    250a:	9503      	str	r5, [sp, #12]
    250c:	4689      	mov	r9, r1
    250e:	0029      	movs	r1, r5
    2510:	0015      	movs	r5, r2
    2512:	4345      	muls	r5, r0
    2514:	444d      	add	r5, r9
    2516:	9502      	str	r5, [sp, #8]
    2518:	4645      	mov	r5, r8
    251a:	0c2d      	lsrs	r5, r5, #16
    251c:	46aa      	mov	sl, r5
    251e:	9d02      	ldr	r5, [sp, #8]
    2520:	4455      	add	r5, sl
    2522:	45a9      	cmp	r9, r5
    2524:	d906      	bls.n	2534 <__aeabi_dmul+0x238>
    2526:	468a      	mov	sl, r1
    2528:	2180      	movs	r1, #128	; 0x80
    252a:	0249      	lsls	r1, r1, #9
    252c:	4689      	mov	r9, r1
    252e:	44ca      	add	sl, r9
    2530:	4651      	mov	r1, sl
    2532:	9103      	str	r1, [sp, #12]
    2534:	0c29      	lsrs	r1, r5, #16
    2536:	9104      	str	r1, [sp, #16]
    2538:	4641      	mov	r1, r8
    253a:	0409      	lsls	r1, r1, #16
    253c:	042d      	lsls	r5, r5, #16
    253e:	0c09      	lsrs	r1, r1, #16
    2540:	4688      	mov	r8, r1
    2542:	0029      	movs	r1, r5
    2544:	0c25      	lsrs	r5, r4, #16
    2546:	0424      	lsls	r4, r4, #16
    2548:	4441      	add	r1, r8
    254a:	0c24      	lsrs	r4, r4, #16
    254c:	9105      	str	r1, [sp, #20]
    254e:	0021      	movs	r1, r4
    2550:	4341      	muls	r1, r0
    2552:	4688      	mov	r8, r1
    2554:	0021      	movs	r1, r4
    2556:	4379      	muls	r1, r7
    2558:	468a      	mov	sl, r1
    255a:	4368      	muls	r0, r5
    255c:	4641      	mov	r1, r8
    255e:	4450      	add	r0, sl
    2560:	4681      	mov	r9, r0
    2562:	0c08      	lsrs	r0, r1, #16
    2564:	4448      	add	r0, r9
    2566:	436f      	muls	r7, r5
    2568:	4582      	cmp	sl, r0
    256a:	d903      	bls.n	2574 <__aeabi_dmul+0x278>
    256c:	2180      	movs	r1, #128	; 0x80
    256e:	0249      	lsls	r1, r1, #9
    2570:	4689      	mov	r9, r1
    2572:	444f      	add	r7, r9
    2574:	0c01      	lsrs	r1, r0, #16
    2576:	4689      	mov	r9, r1
    2578:	0039      	movs	r1, r7
    257a:	4449      	add	r1, r9
    257c:	9102      	str	r1, [sp, #8]
    257e:	4641      	mov	r1, r8
    2580:	040f      	lsls	r7, r1, #16
    2582:	9904      	ldr	r1, [sp, #16]
    2584:	0c3f      	lsrs	r7, r7, #16
    2586:	4688      	mov	r8, r1
    2588:	0400      	lsls	r0, r0, #16
    258a:	19c0      	adds	r0, r0, r7
    258c:	4480      	add	r8, r0
    258e:	4641      	mov	r1, r8
    2590:	9104      	str	r1, [sp, #16]
    2592:	4659      	mov	r1, fp
    2594:	0c0f      	lsrs	r7, r1, #16
    2596:	0409      	lsls	r1, r1, #16
    2598:	0c09      	lsrs	r1, r1, #16
    259a:	4688      	mov	r8, r1
    259c:	4359      	muls	r1, r3
    259e:	468a      	mov	sl, r1
    25a0:	0039      	movs	r1, r7
    25a2:	4351      	muls	r1, r2
    25a4:	4689      	mov	r9, r1
    25a6:	4641      	mov	r1, r8
    25a8:	434a      	muls	r2, r1
    25aa:	4651      	mov	r1, sl
    25ac:	0c09      	lsrs	r1, r1, #16
    25ae:	468b      	mov	fp, r1
    25b0:	437b      	muls	r3, r7
    25b2:	18d2      	adds	r2, r2, r3
    25b4:	445a      	add	r2, fp
    25b6:	4293      	cmp	r3, r2
    25b8:	d903      	bls.n	25c2 <__aeabi_dmul+0x2c6>
    25ba:	2380      	movs	r3, #128	; 0x80
    25bc:	025b      	lsls	r3, r3, #9
    25be:	469b      	mov	fp, r3
    25c0:	44d9      	add	r9, fp
    25c2:	4651      	mov	r1, sl
    25c4:	0409      	lsls	r1, r1, #16
    25c6:	0c09      	lsrs	r1, r1, #16
    25c8:	468a      	mov	sl, r1
    25ca:	4641      	mov	r1, r8
    25cc:	4361      	muls	r1, r4
    25ce:	437c      	muls	r4, r7
    25d0:	0c13      	lsrs	r3, r2, #16
    25d2:	0412      	lsls	r2, r2, #16
    25d4:	444b      	add	r3, r9
    25d6:	4452      	add	r2, sl
    25d8:	46a1      	mov	r9, r4
    25da:	468a      	mov	sl, r1
    25dc:	003c      	movs	r4, r7
    25de:	4641      	mov	r1, r8
    25e0:	436c      	muls	r4, r5
    25e2:	434d      	muls	r5, r1
    25e4:	4651      	mov	r1, sl
    25e6:	444d      	add	r5, r9
    25e8:	0c0f      	lsrs	r7, r1, #16
    25ea:	197d      	adds	r5, r7, r5
    25ec:	45a9      	cmp	r9, r5
    25ee:	d903      	bls.n	25f8 <__aeabi_dmul+0x2fc>
    25f0:	2180      	movs	r1, #128	; 0x80
    25f2:	0249      	lsls	r1, r1, #9
    25f4:	4688      	mov	r8, r1
    25f6:	4444      	add	r4, r8
    25f8:	9f04      	ldr	r7, [sp, #16]
    25fa:	9903      	ldr	r1, [sp, #12]
    25fc:	46b8      	mov	r8, r7
    25fe:	4441      	add	r1, r8
    2600:	468b      	mov	fp, r1
    2602:	4583      	cmp	fp, r0
    2604:	4180      	sbcs	r0, r0
    2606:	4241      	negs	r1, r0
    2608:	4688      	mov	r8, r1
    260a:	4651      	mov	r1, sl
    260c:	0408      	lsls	r0, r1, #16
    260e:	042f      	lsls	r7, r5, #16
    2610:	0c00      	lsrs	r0, r0, #16
    2612:	183f      	adds	r7, r7, r0
    2614:	4658      	mov	r0, fp
    2616:	9902      	ldr	r1, [sp, #8]
    2618:	1810      	adds	r0, r2, r0
    261a:	4689      	mov	r9, r1
    261c:	4290      	cmp	r0, r2
    261e:	4192      	sbcs	r2, r2
    2620:	444f      	add	r7, r9
    2622:	46ba      	mov	sl, r7
    2624:	4252      	negs	r2, r2
    2626:	4699      	mov	r9, r3
    2628:	4693      	mov	fp, r2
    262a:	44c2      	add	sl, r8
    262c:	44d1      	add	r9, sl
    262e:	44cb      	add	fp, r9
    2630:	428f      	cmp	r7, r1
    2632:	41bf      	sbcs	r7, r7
    2634:	45c2      	cmp	sl, r8
    2636:	4189      	sbcs	r1, r1
    2638:	4599      	cmp	r9, r3
    263a:	419b      	sbcs	r3, r3
    263c:	4593      	cmp	fp, r2
    263e:	4192      	sbcs	r2, r2
    2640:	427f      	negs	r7, r7
    2642:	4249      	negs	r1, r1
    2644:	0c2d      	lsrs	r5, r5, #16
    2646:	4252      	negs	r2, r2
    2648:	430f      	orrs	r7, r1
    264a:	425b      	negs	r3, r3
    264c:	4313      	orrs	r3, r2
    264e:	197f      	adds	r7, r7, r5
    2650:	18ff      	adds	r7, r7, r3
    2652:	465b      	mov	r3, fp
    2654:	193c      	adds	r4, r7, r4
    2656:	0ddb      	lsrs	r3, r3, #23
    2658:	9a05      	ldr	r2, [sp, #20]
    265a:	0264      	lsls	r4, r4, #9
    265c:	431c      	orrs	r4, r3
    265e:	0243      	lsls	r3, r0, #9
    2660:	4313      	orrs	r3, r2
    2662:	1e5d      	subs	r5, r3, #1
    2664:	41ab      	sbcs	r3, r5
    2666:	465a      	mov	r2, fp
    2668:	0dc0      	lsrs	r0, r0, #23
    266a:	4303      	orrs	r3, r0
    266c:	0252      	lsls	r2, r2, #9
    266e:	4313      	orrs	r3, r2
    2670:	01e2      	lsls	r2, r4, #7
    2672:	d556      	bpl.n	2722 <__aeabi_dmul+0x426>
    2674:	2001      	movs	r0, #1
    2676:	085a      	lsrs	r2, r3, #1
    2678:	4003      	ands	r3, r0
    267a:	4313      	orrs	r3, r2
    267c:	07e2      	lsls	r2, r4, #31
    267e:	4313      	orrs	r3, r2
    2680:	0864      	lsrs	r4, r4, #1
    2682:	485a      	ldr	r0, [pc, #360]	; (27ec <__aeabi_dmul+0x4f0>)
    2684:	4460      	add	r0, ip
    2686:	2800      	cmp	r0, #0
    2688:	dd4d      	ble.n	2726 <__aeabi_dmul+0x42a>
    268a:	075a      	lsls	r2, r3, #29
    268c:	d009      	beq.n	26a2 <__aeabi_dmul+0x3a6>
    268e:	220f      	movs	r2, #15
    2690:	401a      	ands	r2, r3
    2692:	2a04      	cmp	r2, #4
    2694:	d005      	beq.n	26a2 <__aeabi_dmul+0x3a6>
    2696:	1d1a      	adds	r2, r3, #4
    2698:	429a      	cmp	r2, r3
    269a:	419b      	sbcs	r3, r3
    269c:	425b      	negs	r3, r3
    269e:	18e4      	adds	r4, r4, r3
    26a0:	0013      	movs	r3, r2
    26a2:	01e2      	lsls	r2, r4, #7
    26a4:	d504      	bpl.n	26b0 <__aeabi_dmul+0x3b4>
    26a6:	2080      	movs	r0, #128	; 0x80
    26a8:	4a51      	ldr	r2, [pc, #324]	; (27f0 <__aeabi_dmul+0x4f4>)
    26aa:	00c0      	lsls	r0, r0, #3
    26ac:	4014      	ands	r4, r2
    26ae:	4460      	add	r0, ip
    26b0:	4a50      	ldr	r2, [pc, #320]	; (27f4 <__aeabi_dmul+0x4f8>)
    26b2:	4290      	cmp	r0, r2
    26b4:	dd00      	ble.n	26b8 <__aeabi_dmul+0x3bc>
    26b6:	e6e3      	b.n	2480 <__aeabi_dmul+0x184>
    26b8:	2501      	movs	r5, #1
    26ba:	08db      	lsrs	r3, r3, #3
    26bc:	0762      	lsls	r2, r4, #29
    26be:	431a      	orrs	r2, r3
    26c0:	0264      	lsls	r4, r4, #9
    26c2:	9b01      	ldr	r3, [sp, #4]
    26c4:	4691      	mov	r9, r2
    26c6:	0b22      	lsrs	r2, r4, #12
    26c8:	0544      	lsls	r4, r0, #21
    26ca:	0d64      	lsrs	r4, r4, #21
    26cc:	401d      	ands	r5, r3
    26ce:	e67c      	b.n	23ca <__aeabi_dmul+0xce>
    26d0:	2280      	movs	r2, #128	; 0x80
    26d2:	4659      	mov	r1, fp
    26d4:	0312      	lsls	r2, r2, #12
    26d6:	4211      	tst	r1, r2
    26d8:	d008      	beq.n	26ec <__aeabi_dmul+0x3f0>
    26da:	4214      	tst	r4, r2
    26dc:	d106      	bne.n	26ec <__aeabi_dmul+0x3f0>
    26de:	4322      	orrs	r2, r4
    26e0:	0312      	lsls	r2, r2, #12
    26e2:	0b12      	lsrs	r2, r2, #12
    26e4:	4645      	mov	r5, r8
    26e6:	4699      	mov	r9, r3
    26e8:	4c43      	ldr	r4, [pc, #268]	; (27f8 <__aeabi_dmul+0x4fc>)
    26ea:	e66e      	b.n	23ca <__aeabi_dmul+0xce>
    26ec:	465b      	mov	r3, fp
    26ee:	431a      	orrs	r2, r3
    26f0:	0312      	lsls	r2, r2, #12
    26f2:	0b12      	lsrs	r2, r2, #12
    26f4:	4c40      	ldr	r4, [pc, #256]	; (27f8 <__aeabi_dmul+0x4fc>)
    26f6:	e668      	b.n	23ca <__aeabi_dmul+0xce>
    26f8:	0003      	movs	r3, r0
    26fa:	4654      	mov	r4, sl
    26fc:	3b28      	subs	r3, #40	; 0x28
    26fe:	409c      	lsls	r4, r3
    2700:	2300      	movs	r3, #0
    2702:	e6b9      	b.n	2478 <__aeabi_dmul+0x17c>
    2704:	f000 f998 	bl	2a38 <__clzsi2>
    2708:	3020      	adds	r0, #32
    270a:	e6a6      	b.n	245a <__aeabi_dmul+0x15e>
    270c:	0003      	movs	r3, r0
    270e:	3b28      	subs	r3, #40	; 0x28
    2710:	409f      	lsls	r7, r3
    2712:	2300      	movs	r3, #0
    2714:	46bb      	mov	fp, r7
    2716:	4699      	mov	r9, r3
    2718:	e68a      	b.n	2430 <__aeabi_dmul+0x134>
    271a:	f000 f98d 	bl	2a38 <__clzsi2>
    271e:	3020      	adds	r0, #32
    2720:	e674      	b.n	240c <__aeabi_dmul+0x110>
    2722:	46b4      	mov	ip, r6
    2724:	e7ad      	b.n	2682 <__aeabi_dmul+0x386>
    2726:	2501      	movs	r5, #1
    2728:	1a2a      	subs	r2, r5, r0
    272a:	2a38      	cmp	r2, #56	; 0x38
    272c:	dd06      	ble.n	273c <__aeabi_dmul+0x440>
    272e:	9b01      	ldr	r3, [sp, #4]
    2730:	2400      	movs	r4, #0
    2732:	401d      	ands	r5, r3
    2734:	2300      	movs	r3, #0
    2736:	2200      	movs	r2, #0
    2738:	4699      	mov	r9, r3
    273a:	e646      	b.n	23ca <__aeabi_dmul+0xce>
    273c:	2a1f      	cmp	r2, #31
    273e:	dc21      	bgt.n	2784 <__aeabi_dmul+0x488>
    2740:	2520      	movs	r5, #32
    2742:	0020      	movs	r0, r4
    2744:	1aad      	subs	r5, r5, r2
    2746:	001e      	movs	r6, r3
    2748:	40ab      	lsls	r3, r5
    274a:	40a8      	lsls	r0, r5
    274c:	40d6      	lsrs	r6, r2
    274e:	1e5d      	subs	r5, r3, #1
    2750:	41ab      	sbcs	r3, r5
    2752:	4330      	orrs	r0, r6
    2754:	4318      	orrs	r0, r3
    2756:	40d4      	lsrs	r4, r2
    2758:	0743      	lsls	r3, r0, #29
    275a:	d009      	beq.n	2770 <__aeabi_dmul+0x474>
    275c:	230f      	movs	r3, #15
    275e:	4003      	ands	r3, r0
    2760:	2b04      	cmp	r3, #4
    2762:	d005      	beq.n	2770 <__aeabi_dmul+0x474>
    2764:	0003      	movs	r3, r0
    2766:	1d18      	adds	r0, r3, #4
    2768:	4298      	cmp	r0, r3
    276a:	419b      	sbcs	r3, r3
    276c:	425b      	negs	r3, r3
    276e:	18e4      	adds	r4, r4, r3
    2770:	0223      	lsls	r3, r4, #8
    2772:	d521      	bpl.n	27b8 <__aeabi_dmul+0x4bc>
    2774:	2501      	movs	r5, #1
    2776:	9b01      	ldr	r3, [sp, #4]
    2778:	2401      	movs	r4, #1
    277a:	401d      	ands	r5, r3
    277c:	2300      	movs	r3, #0
    277e:	2200      	movs	r2, #0
    2780:	4699      	mov	r9, r3
    2782:	e622      	b.n	23ca <__aeabi_dmul+0xce>
    2784:	251f      	movs	r5, #31
    2786:	0021      	movs	r1, r4
    2788:	426d      	negs	r5, r5
    278a:	1a28      	subs	r0, r5, r0
    278c:	40c1      	lsrs	r1, r0
    278e:	0008      	movs	r0, r1
    2790:	2a20      	cmp	r2, #32
    2792:	d01d      	beq.n	27d0 <__aeabi_dmul+0x4d4>
    2794:	355f      	adds	r5, #95	; 0x5f
    2796:	1aaa      	subs	r2, r5, r2
    2798:	4094      	lsls	r4, r2
    279a:	4323      	orrs	r3, r4
    279c:	1e5c      	subs	r4, r3, #1
    279e:	41a3      	sbcs	r3, r4
    27a0:	2507      	movs	r5, #7
    27a2:	4303      	orrs	r3, r0
    27a4:	401d      	ands	r5, r3
    27a6:	2200      	movs	r2, #0
    27a8:	2d00      	cmp	r5, #0
    27aa:	d009      	beq.n	27c0 <__aeabi_dmul+0x4c4>
    27ac:	220f      	movs	r2, #15
    27ae:	2400      	movs	r4, #0
    27b0:	401a      	ands	r2, r3
    27b2:	0018      	movs	r0, r3
    27b4:	2a04      	cmp	r2, #4
    27b6:	d1d6      	bne.n	2766 <__aeabi_dmul+0x46a>
    27b8:	0003      	movs	r3, r0
    27ba:	0765      	lsls	r5, r4, #29
    27bc:	0264      	lsls	r4, r4, #9
    27be:	0b22      	lsrs	r2, r4, #12
    27c0:	08db      	lsrs	r3, r3, #3
    27c2:	432b      	orrs	r3, r5
    27c4:	2501      	movs	r5, #1
    27c6:	4699      	mov	r9, r3
    27c8:	9b01      	ldr	r3, [sp, #4]
    27ca:	2400      	movs	r4, #0
    27cc:	401d      	ands	r5, r3
    27ce:	e5fc      	b.n	23ca <__aeabi_dmul+0xce>
    27d0:	2400      	movs	r4, #0
    27d2:	e7e2      	b.n	279a <__aeabi_dmul+0x49e>
    27d4:	2280      	movs	r2, #128	; 0x80
    27d6:	2501      	movs	r5, #1
    27d8:	0312      	lsls	r2, r2, #12
    27da:	4322      	orrs	r2, r4
    27dc:	9901      	ldr	r1, [sp, #4]
    27de:	0312      	lsls	r2, r2, #12
    27e0:	0b12      	lsrs	r2, r2, #12
    27e2:	400d      	ands	r5, r1
    27e4:	4699      	mov	r9, r3
    27e6:	4c04      	ldr	r4, [pc, #16]	; (27f8 <__aeabi_dmul+0x4fc>)
    27e8:	e5ef      	b.n	23ca <__aeabi_dmul+0xce>
    27ea:	46c0      	nop			; (mov r8, r8)
    27ec:	000003ff 	.word	0x000003ff
    27f0:	feffffff 	.word	0xfeffffff
    27f4:	000007fe 	.word	0x000007fe
    27f8:	000007ff 	.word	0x000007ff

000027fc <__aeabi_i2d>:
    27fc:	b570      	push	{r4, r5, r6, lr}
    27fe:	2800      	cmp	r0, #0
    2800:	d030      	beq.n	2864 <__aeabi_i2d+0x68>
    2802:	17c3      	asrs	r3, r0, #31
    2804:	18c4      	adds	r4, r0, r3
    2806:	405c      	eors	r4, r3
    2808:	0fc5      	lsrs	r5, r0, #31
    280a:	0020      	movs	r0, r4
    280c:	f000 f914 	bl	2a38 <__clzsi2>
    2810:	4b17      	ldr	r3, [pc, #92]	; (2870 <__aeabi_i2d+0x74>)
    2812:	4a18      	ldr	r2, [pc, #96]	; (2874 <__aeabi_i2d+0x78>)
    2814:	1a1b      	subs	r3, r3, r0
    2816:	1ad2      	subs	r2, r2, r3
    2818:	2a1f      	cmp	r2, #31
    281a:	dd18      	ble.n	284e <__aeabi_i2d+0x52>
    281c:	4a16      	ldr	r2, [pc, #88]	; (2878 <__aeabi_i2d+0x7c>)
    281e:	1ad2      	subs	r2, r2, r3
    2820:	4094      	lsls	r4, r2
    2822:	2200      	movs	r2, #0
    2824:	0324      	lsls	r4, r4, #12
    2826:	055b      	lsls	r3, r3, #21
    2828:	0b24      	lsrs	r4, r4, #12
    282a:	0d5b      	lsrs	r3, r3, #21
    282c:	2100      	movs	r1, #0
    282e:	0010      	movs	r0, r2
    2830:	0324      	lsls	r4, r4, #12
    2832:	0d0a      	lsrs	r2, r1, #20
    2834:	0b24      	lsrs	r4, r4, #12
    2836:	0512      	lsls	r2, r2, #20
    2838:	4322      	orrs	r2, r4
    283a:	4c10      	ldr	r4, [pc, #64]	; (287c <__aeabi_i2d+0x80>)
    283c:	051b      	lsls	r3, r3, #20
    283e:	4022      	ands	r2, r4
    2840:	4313      	orrs	r3, r2
    2842:	005b      	lsls	r3, r3, #1
    2844:	07ed      	lsls	r5, r5, #31
    2846:	085b      	lsrs	r3, r3, #1
    2848:	432b      	orrs	r3, r5
    284a:	0019      	movs	r1, r3
    284c:	bd70      	pop	{r4, r5, r6, pc}
    284e:	0021      	movs	r1, r4
    2850:	4091      	lsls	r1, r2
    2852:	000a      	movs	r2, r1
    2854:	210b      	movs	r1, #11
    2856:	1a08      	subs	r0, r1, r0
    2858:	40c4      	lsrs	r4, r0
    285a:	055b      	lsls	r3, r3, #21
    285c:	0324      	lsls	r4, r4, #12
    285e:	0b24      	lsrs	r4, r4, #12
    2860:	0d5b      	lsrs	r3, r3, #21
    2862:	e7e3      	b.n	282c <__aeabi_i2d+0x30>
    2864:	2500      	movs	r5, #0
    2866:	2300      	movs	r3, #0
    2868:	2400      	movs	r4, #0
    286a:	2200      	movs	r2, #0
    286c:	e7de      	b.n	282c <__aeabi_i2d+0x30>
    286e:	46c0      	nop			; (mov r8, r8)
    2870:	0000041e 	.word	0x0000041e
    2874:	00000433 	.word	0x00000433
    2878:	00000413 	.word	0x00000413
    287c:	800fffff 	.word	0x800fffff

00002880 <__aeabi_f2d>:
    2880:	0041      	lsls	r1, r0, #1
    2882:	0e09      	lsrs	r1, r1, #24
    2884:	1c4b      	adds	r3, r1, #1
    2886:	b570      	push	{r4, r5, r6, lr}
    2888:	b2db      	uxtb	r3, r3
    288a:	0246      	lsls	r6, r0, #9
    288c:	0a75      	lsrs	r5, r6, #9
    288e:	0fc4      	lsrs	r4, r0, #31
    2890:	2b01      	cmp	r3, #1
    2892:	dd14      	ble.n	28be <__aeabi_f2d+0x3e>
    2894:	23e0      	movs	r3, #224	; 0xe0
    2896:	009b      	lsls	r3, r3, #2
    2898:	076d      	lsls	r5, r5, #29
    289a:	0b36      	lsrs	r6, r6, #12
    289c:	18cb      	adds	r3, r1, r3
    289e:	2100      	movs	r1, #0
    28a0:	0d0a      	lsrs	r2, r1, #20
    28a2:	0028      	movs	r0, r5
    28a4:	0512      	lsls	r2, r2, #20
    28a6:	4d1c      	ldr	r5, [pc, #112]	; (2918 <__aeabi_f2d+0x98>)
    28a8:	4332      	orrs	r2, r6
    28aa:	055b      	lsls	r3, r3, #21
    28ac:	402a      	ands	r2, r5
    28ae:	085b      	lsrs	r3, r3, #1
    28b0:	4313      	orrs	r3, r2
    28b2:	005b      	lsls	r3, r3, #1
    28b4:	07e4      	lsls	r4, r4, #31
    28b6:	085b      	lsrs	r3, r3, #1
    28b8:	4323      	orrs	r3, r4
    28ba:	0019      	movs	r1, r3
    28bc:	bd70      	pop	{r4, r5, r6, pc}
    28be:	2900      	cmp	r1, #0
    28c0:	d114      	bne.n	28ec <__aeabi_f2d+0x6c>
    28c2:	2d00      	cmp	r5, #0
    28c4:	d01e      	beq.n	2904 <__aeabi_f2d+0x84>
    28c6:	0028      	movs	r0, r5
    28c8:	f000 f8b6 	bl	2a38 <__clzsi2>
    28cc:	280a      	cmp	r0, #10
    28ce:	dc1c      	bgt.n	290a <__aeabi_f2d+0x8a>
    28d0:	230b      	movs	r3, #11
    28d2:	002a      	movs	r2, r5
    28d4:	1a1b      	subs	r3, r3, r0
    28d6:	40da      	lsrs	r2, r3
    28d8:	0003      	movs	r3, r0
    28da:	3315      	adds	r3, #21
    28dc:	409d      	lsls	r5, r3
    28de:	4b0f      	ldr	r3, [pc, #60]	; (291c <__aeabi_f2d+0x9c>)
    28e0:	0312      	lsls	r2, r2, #12
    28e2:	1a1b      	subs	r3, r3, r0
    28e4:	055b      	lsls	r3, r3, #21
    28e6:	0b16      	lsrs	r6, r2, #12
    28e8:	0d5b      	lsrs	r3, r3, #21
    28ea:	e7d8      	b.n	289e <__aeabi_f2d+0x1e>
    28ec:	2d00      	cmp	r5, #0
    28ee:	d006      	beq.n	28fe <__aeabi_f2d+0x7e>
    28f0:	0b32      	lsrs	r2, r6, #12
    28f2:	2680      	movs	r6, #128	; 0x80
    28f4:	0336      	lsls	r6, r6, #12
    28f6:	076d      	lsls	r5, r5, #29
    28f8:	4316      	orrs	r6, r2
    28fa:	4b09      	ldr	r3, [pc, #36]	; (2920 <__aeabi_f2d+0xa0>)
    28fc:	e7cf      	b.n	289e <__aeabi_f2d+0x1e>
    28fe:	4b08      	ldr	r3, [pc, #32]	; (2920 <__aeabi_f2d+0xa0>)
    2900:	2600      	movs	r6, #0
    2902:	e7cc      	b.n	289e <__aeabi_f2d+0x1e>
    2904:	2300      	movs	r3, #0
    2906:	2600      	movs	r6, #0
    2908:	e7c9      	b.n	289e <__aeabi_f2d+0x1e>
    290a:	0003      	movs	r3, r0
    290c:	002a      	movs	r2, r5
    290e:	3b0b      	subs	r3, #11
    2910:	409a      	lsls	r2, r3
    2912:	2500      	movs	r5, #0
    2914:	e7e3      	b.n	28de <__aeabi_f2d+0x5e>
    2916:	46c0      	nop			; (mov r8, r8)
    2918:	800fffff 	.word	0x800fffff
    291c:	00000389 	.word	0x00000389
    2920:	000007ff 	.word	0x000007ff

00002924 <__aeabi_d2f>:
    2924:	b5f0      	push	{r4, r5, r6, r7, lr}
    2926:	004c      	lsls	r4, r1, #1
    2928:	0d64      	lsrs	r4, r4, #21
    292a:	030b      	lsls	r3, r1, #12
    292c:	1c62      	adds	r2, r4, #1
    292e:	0f45      	lsrs	r5, r0, #29
    2930:	0a5b      	lsrs	r3, r3, #9
    2932:	0552      	lsls	r2, r2, #21
    2934:	432b      	orrs	r3, r5
    2936:	0fc9      	lsrs	r1, r1, #31
    2938:	00c5      	lsls	r5, r0, #3
    293a:	0d52      	lsrs	r2, r2, #21
    293c:	2a01      	cmp	r2, #1
    293e:	dd28      	ble.n	2992 <__aeabi_d2f+0x6e>
    2940:	4a3a      	ldr	r2, [pc, #232]	; (2a2c <__aeabi_d2f+0x108>)
    2942:	18a6      	adds	r6, r4, r2
    2944:	2efe      	cmp	r6, #254	; 0xfe
    2946:	dc1b      	bgt.n	2980 <__aeabi_d2f+0x5c>
    2948:	2e00      	cmp	r6, #0
    294a:	dd3e      	ble.n	29ca <__aeabi_d2f+0xa6>
    294c:	0180      	lsls	r0, r0, #6
    294e:	0002      	movs	r2, r0
    2950:	1e50      	subs	r0, r2, #1
    2952:	4182      	sbcs	r2, r0
    2954:	0f6d      	lsrs	r5, r5, #29
    2956:	432a      	orrs	r2, r5
    2958:	00db      	lsls	r3, r3, #3
    295a:	4313      	orrs	r3, r2
    295c:	075a      	lsls	r2, r3, #29
    295e:	d004      	beq.n	296a <__aeabi_d2f+0x46>
    2960:	220f      	movs	r2, #15
    2962:	401a      	ands	r2, r3
    2964:	2a04      	cmp	r2, #4
    2966:	d000      	beq.n	296a <__aeabi_d2f+0x46>
    2968:	3304      	adds	r3, #4
    296a:	2280      	movs	r2, #128	; 0x80
    296c:	04d2      	lsls	r2, r2, #19
    296e:	401a      	ands	r2, r3
    2970:	d05a      	beq.n	2a28 <__aeabi_d2f+0x104>
    2972:	3601      	adds	r6, #1
    2974:	2eff      	cmp	r6, #255	; 0xff
    2976:	d003      	beq.n	2980 <__aeabi_d2f+0x5c>
    2978:	019b      	lsls	r3, r3, #6
    297a:	0a5b      	lsrs	r3, r3, #9
    297c:	b2f4      	uxtb	r4, r6
    297e:	e001      	b.n	2984 <__aeabi_d2f+0x60>
    2980:	24ff      	movs	r4, #255	; 0xff
    2982:	2300      	movs	r3, #0
    2984:	0258      	lsls	r0, r3, #9
    2986:	05e4      	lsls	r4, r4, #23
    2988:	0a40      	lsrs	r0, r0, #9
    298a:	07c9      	lsls	r1, r1, #31
    298c:	4320      	orrs	r0, r4
    298e:	4308      	orrs	r0, r1
    2990:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2992:	2c00      	cmp	r4, #0
    2994:	d007      	beq.n	29a6 <__aeabi_d2f+0x82>
    2996:	431d      	orrs	r5, r3
    2998:	d0f2      	beq.n	2980 <__aeabi_d2f+0x5c>
    299a:	2080      	movs	r0, #128	; 0x80
    299c:	00db      	lsls	r3, r3, #3
    299e:	0480      	lsls	r0, r0, #18
    29a0:	4303      	orrs	r3, r0
    29a2:	26ff      	movs	r6, #255	; 0xff
    29a4:	e7da      	b.n	295c <__aeabi_d2f+0x38>
    29a6:	432b      	orrs	r3, r5
    29a8:	d003      	beq.n	29b2 <__aeabi_d2f+0x8e>
    29aa:	2305      	movs	r3, #5
    29ac:	08db      	lsrs	r3, r3, #3
    29ae:	2cff      	cmp	r4, #255	; 0xff
    29b0:	d003      	beq.n	29ba <__aeabi_d2f+0x96>
    29b2:	025b      	lsls	r3, r3, #9
    29b4:	0a5b      	lsrs	r3, r3, #9
    29b6:	b2e4      	uxtb	r4, r4
    29b8:	e7e4      	b.n	2984 <__aeabi_d2f+0x60>
    29ba:	2b00      	cmp	r3, #0
    29bc:	d032      	beq.n	2a24 <__aeabi_d2f+0x100>
    29be:	2080      	movs	r0, #128	; 0x80
    29c0:	03c0      	lsls	r0, r0, #15
    29c2:	4303      	orrs	r3, r0
    29c4:	025b      	lsls	r3, r3, #9
    29c6:	0a5b      	lsrs	r3, r3, #9
    29c8:	e7dc      	b.n	2984 <__aeabi_d2f+0x60>
    29ca:	0032      	movs	r2, r6
    29cc:	3217      	adds	r2, #23
    29ce:	db14      	blt.n	29fa <__aeabi_d2f+0xd6>
    29d0:	2280      	movs	r2, #128	; 0x80
    29d2:	271e      	movs	r7, #30
    29d4:	0412      	lsls	r2, r2, #16
    29d6:	4313      	orrs	r3, r2
    29d8:	1bbf      	subs	r7, r7, r6
    29da:	2f1f      	cmp	r7, #31
    29dc:	dc0f      	bgt.n	29fe <__aeabi_d2f+0xda>
    29de:	4a14      	ldr	r2, [pc, #80]	; (2a30 <__aeabi_d2f+0x10c>)
    29e0:	4694      	mov	ip, r2
    29e2:	4464      	add	r4, ip
    29e4:	002a      	movs	r2, r5
    29e6:	40a5      	lsls	r5, r4
    29e8:	002e      	movs	r6, r5
    29ea:	40a3      	lsls	r3, r4
    29ec:	1e75      	subs	r5, r6, #1
    29ee:	41ae      	sbcs	r6, r5
    29f0:	40fa      	lsrs	r2, r7
    29f2:	4333      	orrs	r3, r6
    29f4:	4313      	orrs	r3, r2
    29f6:	2600      	movs	r6, #0
    29f8:	e7b0      	b.n	295c <__aeabi_d2f+0x38>
    29fa:	2400      	movs	r4, #0
    29fc:	e7d5      	b.n	29aa <__aeabi_d2f+0x86>
    29fe:	2202      	movs	r2, #2
    2a00:	4252      	negs	r2, r2
    2a02:	1b96      	subs	r6, r2, r6
    2a04:	001a      	movs	r2, r3
    2a06:	40f2      	lsrs	r2, r6
    2a08:	2f20      	cmp	r7, #32
    2a0a:	d009      	beq.n	2a20 <__aeabi_d2f+0xfc>
    2a0c:	4809      	ldr	r0, [pc, #36]	; (2a34 <__aeabi_d2f+0x110>)
    2a0e:	4684      	mov	ip, r0
    2a10:	4464      	add	r4, ip
    2a12:	40a3      	lsls	r3, r4
    2a14:	432b      	orrs	r3, r5
    2a16:	1e5d      	subs	r5, r3, #1
    2a18:	41ab      	sbcs	r3, r5
    2a1a:	2600      	movs	r6, #0
    2a1c:	4313      	orrs	r3, r2
    2a1e:	e79d      	b.n	295c <__aeabi_d2f+0x38>
    2a20:	2300      	movs	r3, #0
    2a22:	e7f7      	b.n	2a14 <__aeabi_d2f+0xf0>
    2a24:	2300      	movs	r3, #0
    2a26:	e7ad      	b.n	2984 <__aeabi_d2f+0x60>
    2a28:	0034      	movs	r4, r6
    2a2a:	e7bf      	b.n	29ac <__aeabi_d2f+0x88>
    2a2c:	fffffc80 	.word	0xfffffc80
    2a30:	fffffc82 	.word	0xfffffc82
    2a34:	fffffca2 	.word	0xfffffca2

00002a38 <__clzsi2>:
    2a38:	211c      	movs	r1, #28
    2a3a:	2301      	movs	r3, #1
    2a3c:	041b      	lsls	r3, r3, #16
    2a3e:	4298      	cmp	r0, r3
    2a40:	d301      	bcc.n	2a46 <__clzsi2+0xe>
    2a42:	0c00      	lsrs	r0, r0, #16
    2a44:	3910      	subs	r1, #16
    2a46:	0a1b      	lsrs	r3, r3, #8
    2a48:	4298      	cmp	r0, r3
    2a4a:	d301      	bcc.n	2a50 <__clzsi2+0x18>
    2a4c:	0a00      	lsrs	r0, r0, #8
    2a4e:	3908      	subs	r1, #8
    2a50:	091b      	lsrs	r3, r3, #4
    2a52:	4298      	cmp	r0, r3
    2a54:	d301      	bcc.n	2a5a <__clzsi2+0x22>
    2a56:	0900      	lsrs	r0, r0, #4
    2a58:	3904      	subs	r1, #4
    2a5a:	a202      	add	r2, pc, #8	; (adr r2, 2a64 <__clzsi2+0x2c>)
    2a5c:	5c10      	ldrb	r0, [r2, r0]
    2a5e:	1840      	adds	r0, r0, r1
    2a60:	4770      	bx	lr
    2a62:	46c0      	nop			; (mov r8, r8)
    2a64:	02020304 	.word	0x02020304
    2a68:	01010101 	.word	0x01010101
	...

00002a74 <__clzdi2>:
    2a74:	b510      	push	{r4, lr}
    2a76:	2900      	cmp	r1, #0
    2a78:	d103      	bne.n	2a82 <__clzdi2+0xe>
    2a7a:	f7ff ffdd 	bl	2a38 <__clzsi2>
    2a7e:	3020      	adds	r0, #32
    2a80:	e002      	b.n	2a88 <__clzdi2+0x14>
    2a82:	1c08      	adds	r0, r1, #0
    2a84:	f7ff ffd8 	bl	2a38 <__clzsi2>
    2a88:	bd10      	pop	{r4, pc}
    2a8a:	46c0      	nop			; (mov r8, r8)

00002a8c <__libc_init_array>:
    2a8c:	b570      	push	{r4, r5, r6, lr}
    2a8e:	4e0d      	ldr	r6, [pc, #52]	; (2ac4 <__libc_init_array+0x38>)
    2a90:	4d0d      	ldr	r5, [pc, #52]	; (2ac8 <__libc_init_array+0x3c>)
    2a92:	2400      	movs	r4, #0
    2a94:	1bad      	subs	r5, r5, r6
    2a96:	10ad      	asrs	r5, r5, #2
    2a98:	d005      	beq.n	2aa6 <__libc_init_array+0x1a>
    2a9a:	00a3      	lsls	r3, r4, #2
    2a9c:	58f3      	ldr	r3, [r6, r3]
    2a9e:	3401      	adds	r4, #1
    2aa0:	4798      	blx	r3
    2aa2:	42a5      	cmp	r5, r4
    2aa4:	d1f9      	bne.n	2a9a <__libc_init_array+0xe>
    2aa6:	f005 fd3f 	bl	8528 <_init>
    2aaa:	4e08      	ldr	r6, [pc, #32]	; (2acc <__libc_init_array+0x40>)
    2aac:	4d08      	ldr	r5, [pc, #32]	; (2ad0 <__libc_init_array+0x44>)
    2aae:	2400      	movs	r4, #0
    2ab0:	1bad      	subs	r5, r5, r6
    2ab2:	10ad      	asrs	r5, r5, #2
    2ab4:	d005      	beq.n	2ac2 <__libc_init_array+0x36>
    2ab6:	00a3      	lsls	r3, r4, #2
    2ab8:	58f3      	ldr	r3, [r6, r3]
    2aba:	3401      	adds	r4, #1
    2abc:	4798      	blx	r3
    2abe:	42a5      	cmp	r5, r4
    2ac0:	d1f9      	bne.n	2ab6 <__libc_init_array+0x2a>
    2ac2:	bd70      	pop	{r4, r5, r6, pc}
    2ac4:	00008534 	.word	0x00008534
    2ac8:	00008534 	.word	0x00008534
    2acc:	00008534 	.word	0x00008534
    2ad0:	0000853c 	.word	0x0000853c

00002ad4 <memset>:
    2ad4:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ad6:	0783      	lsls	r3, r0, #30
    2ad8:	d043      	beq.n	2b62 <memset+0x8e>
    2ada:	1e54      	subs	r4, r2, #1
    2adc:	2a00      	cmp	r2, #0
    2ade:	d03f      	beq.n	2b60 <memset+0x8c>
    2ae0:	b2ce      	uxtb	r6, r1
    2ae2:	0002      	movs	r2, r0
    2ae4:	2503      	movs	r5, #3
    2ae6:	e002      	b.n	2aee <memset+0x1a>
    2ae8:	001a      	movs	r2, r3
    2aea:	3c01      	subs	r4, #1
    2aec:	d338      	bcc.n	2b60 <memset+0x8c>
    2aee:	1c53      	adds	r3, r2, #1
    2af0:	7016      	strb	r6, [r2, #0]
    2af2:	422b      	tst	r3, r5
    2af4:	d1f8      	bne.n	2ae8 <memset+0x14>
    2af6:	2c03      	cmp	r4, #3
    2af8:	d92a      	bls.n	2b50 <memset+0x7c>
    2afa:	22ff      	movs	r2, #255	; 0xff
    2afc:	400a      	ands	r2, r1
    2afe:	0215      	lsls	r5, r2, #8
    2b00:	4315      	orrs	r5, r2
    2b02:	042a      	lsls	r2, r5, #16
    2b04:	4315      	orrs	r5, r2
    2b06:	2c0f      	cmp	r4, #15
    2b08:	d914      	bls.n	2b34 <memset+0x60>
    2b0a:	0027      	movs	r7, r4
    2b0c:	001a      	movs	r2, r3
    2b0e:	3f10      	subs	r7, #16
    2b10:	093e      	lsrs	r6, r7, #4
    2b12:	3601      	adds	r6, #1
    2b14:	0136      	lsls	r6, r6, #4
    2b16:	199e      	adds	r6, r3, r6
    2b18:	6015      	str	r5, [r2, #0]
    2b1a:	6055      	str	r5, [r2, #4]
    2b1c:	6095      	str	r5, [r2, #8]
    2b1e:	60d5      	str	r5, [r2, #12]
    2b20:	3210      	adds	r2, #16
    2b22:	4296      	cmp	r6, r2
    2b24:	d1f8      	bne.n	2b18 <memset+0x44>
    2b26:	220f      	movs	r2, #15
    2b28:	4397      	bics	r7, r2
    2b2a:	3710      	adds	r7, #16
    2b2c:	19db      	adds	r3, r3, r7
    2b2e:	4014      	ands	r4, r2
    2b30:	2c03      	cmp	r4, #3
    2b32:	d90d      	bls.n	2b50 <memset+0x7c>
    2b34:	001a      	movs	r2, r3
    2b36:	1f27      	subs	r7, r4, #4
    2b38:	08be      	lsrs	r6, r7, #2
    2b3a:	3601      	adds	r6, #1
    2b3c:	00b6      	lsls	r6, r6, #2
    2b3e:	199e      	adds	r6, r3, r6
    2b40:	c220      	stmia	r2!, {r5}
    2b42:	42b2      	cmp	r2, r6
    2b44:	d1fc      	bne.n	2b40 <memset+0x6c>
    2b46:	2203      	movs	r2, #3
    2b48:	4397      	bics	r7, r2
    2b4a:	3704      	adds	r7, #4
    2b4c:	19db      	adds	r3, r3, r7
    2b4e:	4014      	ands	r4, r2
    2b50:	2c00      	cmp	r4, #0
    2b52:	d005      	beq.n	2b60 <memset+0x8c>
    2b54:	b2c9      	uxtb	r1, r1
    2b56:	191c      	adds	r4, r3, r4
    2b58:	7019      	strb	r1, [r3, #0]
    2b5a:	3301      	adds	r3, #1
    2b5c:	429c      	cmp	r4, r3
    2b5e:	d1fb      	bne.n	2b58 <memset+0x84>
    2b60:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2b62:	0014      	movs	r4, r2
    2b64:	0003      	movs	r3, r0
    2b66:	e7c6      	b.n	2af6 <memset+0x22>

00002b68 <strlen>:
    2b68:	b510      	push	{r4, lr}
    2b6a:	0783      	lsls	r3, r0, #30
    2b6c:	d025      	beq.n	2bba <strlen+0x52>
    2b6e:	7803      	ldrb	r3, [r0, #0]
    2b70:	2b00      	cmp	r3, #0
    2b72:	d024      	beq.n	2bbe <strlen+0x56>
    2b74:	0003      	movs	r3, r0
    2b76:	2103      	movs	r1, #3
    2b78:	e002      	b.n	2b80 <strlen+0x18>
    2b7a:	781a      	ldrb	r2, [r3, #0]
    2b7c:	2a00      	cmp	r2, #0
    2b7e:	d01a      	beq.n	2bb6 <strlen+0x4e>
    2b80:	3301      	adds	r3, #1
    2b82:	420b      	tst	r3, r1
    2b84:	d1f9      	bne.n	2b7a <strlen+0x12>
    2b86:	6819      	ldr	r1, [r3, #0]
    2b88:	4a0e      	ldr	r2, [pc, #56]	; (2bc4 <strlen+0x5c>)
    2b8a:	4c0f      	ldr	r4, [pc, #60]	; (2bc8 <strlen+0x60>)
    2b8c:	188a      	adds	r2, r1, r2
    2b8e:	438a      	bics	r2, r1
    2b90:	4222      	tst	r2, r4
    2b92:	d106      	bne.n	2ba2 <strlen+0x3a>
    2b94:	3304      	adds	r3, #4
    2b96:	6819      	ldr	r1, [r3, #0]
    2b98:	4a0a      	ldr	r2, [pc, #40]	; (2bc4 <strlen+0x5c>)
    2b9a:	188a      	adds	r2, r1, r2
    2b9c:	438a      	bics	r2, r1
    2b9e:	4222      	tst	r2, r4
    2ba0:	d0f8      	beq.n	2b94 <strlen+0x2c>
    2ba2:	001a      	movs	r2, r3
    2ba4:	781b      	ldrb	r3, [r3, #0]
    2ba6:	2b00      	cmp	r3, #0
    2ba8:	d003      	beq.n	2bb2 <strlen+0x4a>
    2baa:	3201      	adds	r2, #1
    2bac:	7811      	ldrb	r1, [r2, #0]
    2bae:	2900      	cmp	r1, #0
    2bb0:	d1fb      	bne.n	2baa <strlen+0x42>
    2bb2:	1a10      	subs	r0, r2, r0
    2bb4:	bd10      	pop	{r4, pc}
    2bb6:	1a18      	subs	r0, r3, r0
    2bb8:	e7fc      	b.n	2bb4 <strlen+0x4c>
    2bba:	0003      	movs	r3, r0
    2bbc:	e7e3      	b.n	2b86 <strlen+0x1e>
    2bbe:	2000      	movs	r0, #0
    2bc0:	e7f8      	b.n	2bb4 <strlen+0x4c>
    2bc2:	46c0      	nop			; (mov r8, r8)
    2bc4:	fefefeff 	.word	0xfefefeff
    2bc8:	80808080 	.word	0x80808080

00002bcc <_vsprintf_r>:
    2bcc:	b530      	push	{r4, r5, lr}
    2bce:	b09b      	sub	sp, #108	; 0x6c
    2bd0:	9100      	str	r1, [sp, #0]
    2bd2:	9104      	str	r1, [sp, #16]
    2bd4:	4908      	ldr	r1, [pc, #32]	; (2bf8 <_vsprintf_r+0x2c>)
    2bd6:	466d      	mov	r5, sp
    2bd8:	9102      	str	r1, [sp, #8]
    2bda:	9105      	str	r1, [sp, #20]
    2bdc:	2101      	movs	r1, #1
    2bde:	2482      	movs	r4, #130	; 0x82
    2be0:	4249      	negs	r1, r1
    2be2:	81e9      	strh	r1, [r5, #14]
    2be4:	00a4      	lsls	r4, r4, #2
    2be6:	4669      	mov	r1, sp
    2be8:	81ac      	strh	r4, [r5, #12]
    2bea:	f000 f845 	bl	2c78 <_svfprintf_r>
    2bee:	2300      	movs	r3, #0
    2bf0:	9a00      	ldr	r2, [sp, #0]
    2bf2:	7013      	strb	r3, [r2, #0]
    2bf4:	b01b      	add	sp, #108	; 0x6c
    2bf6:	bd30      	pop	{r4, r5, pc}
    2bf8:	7fffffff 	.word	0x7fffffff

00002bfc <vsprintf>:
    2bfc:	b510      	push	{r4, lr}
    2bfe:	0004      	movs	r4, r0
    2c00:	0013      	movs	r3, r2
    2c02:	4a03      	ldr	r2, [pc, #12]	; (2c10 <vsprintf+0x14>)
    2c04:	6810      	ldr	r0, [r2, #0]
    2c06:	000a      	movs	r2, r1
    2c08:	0021      	movs	r1, r4
    2c0a:	f7ff ffdf 	bl	2bcc <_vsprintf_r>
    2c0e:	bd10      	pop	{r4, pc}
    2c10:	20000010 	.word	0x20000010

00002c14 <register_fini>:
    2c14:	4b03      	ldr	r3, [pc, #12]	; (2c24 <register_fini+0x10>)
    2c16:	b510      	push	{r4, lr}
    2c18:	2b00      	cmp	r3, #0
    2c1a:	d002      	beq.n	2c22 <register_fini+0xe>
    2c1c:	4802      	ldr	r0, [pc, #8]	; (2c28 <register_fini+0x14>)
    2c1e:	f000 f805 	bl	2c2c <atexit>
    2c22:	bd10      	pop	{r4, pc}
    2c24:	00000000 	.word	0x00000000
    2c28:	00002c3d 	.word	0x00002c3d

00002c2c <atexit>:
    2c2c:	b510      	push	{r4, lr}
    2c2e:	0001      	movs	r1, r0
    2c30:	2300      	movs	r3, #0
    2c32:	2200      	movs	r2, #0
    2c34:	2000      	movs	r0, #0
    2c36:	f001 fb23 	bl	4280 <__register_exitproc>
    2c3a:	bd10      	pop	{r4, pc}

00002c3c <__libc_fini_array>:
    2c3c:	b570      	push	{r4, r5, r6, lr}
    2c3e:	4b09      	ldr	r3, [pc, #36]	; (2c64 <__libc_fini_array+0x28>)
    2c40:	4c09      	ldr	r4, [pc, #36]	; (2c68 <__libc_fini_array+0x2c>)
    2c42:	1ae4      	subs	r4, r4, r3
    2c44:	10a4      	asrs	r4, r4, #2
    2c46:	d009      	beq.n	2c5c <__libc_fini_array+0x20>
    2c48:	4a08      	ldr	r2, [pc, #32]	; (2c6c <__libc_fini_array+0x30>)
    2c4a:	18a5      	adds	r5, r4, r2
    2c4c:	00ad      	lsls	r5, r5, #2
    2c4e:	18ed      	adds	r5, r5, r3
    2c50:	682b      	ldr	r3, [r5, #0]
    2c52:	3c01      	subs	r4, #1
    2c54:	4798      	blx	r3
    2c56:	3d04      	subs	r5, #4
    2c58:	2c00      	cmp	r4, #0
    2c5a:	d1f9      	bne.n	2c50 <__libc_fini_array+0x14>
    2c5c:	f005 fc6e 	bl	853c <_fini>
    2c60:	bd70      	pop	{r4, r5, r6, pc}
    2c62:	46c0      	nop			; (mov r8, r8)
    2c64:	00008548 	.word	0x00008548
    2c68:	0000854c 	.word	0x0000854c
    2c6c:	3fffffff 	.word	0x3fffffff

00002c70 <__retarget_lock_acquire_recursive>:
    2c70:	4770      	bx	lr
    2c72:	46c0      	nop			; (mov r8, r8)

00002c74 <__retarget_lock_release_recursive>:
    2c74:	4770      	bx	lr
    2c76:	46c0      	nop			; (mov r8, r8)

00002c78 <_svfprintf_r>:
    2c78:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c7a:	46de      	mov	lr, fp
    2c7c:	4645      	mov	r5, r8
    2c7e:	4657      	mov	r7, sl
    2c80:	464e      	mov	r6, r9
    2c82:	b5e0      	push	{r5, r6, r7, lr}
    2c84:	b0c3      	sub	sp, #268	; 0x10c
    2c86:	000d      	movs	r5, r1
    2c88:	9106      	str	r1, [sp, #24]
    2c8a:	0014      	movs	r4, r2
    2c8c:	930f      	str	r3, [sp, #60]	; 0x3c
    2c8e:	9009      	str	r0, [sp, #36]	; 0x24
    2c90:	f002 fbde 	bl	5450 <_localeconv_r>
    2c94:	6803      	ldr	r3, [r0, #0]
    2c96:	0018      	movs	r0, r3
    2c98:	9319      	str	r3, [sp, #100]	; 0x64
    2c9a:	f7ff ff65 	bl	2b68 <strlen>
    2c9e:	9018      	str	r0, [sp, #96]	; 0x60
    2ca0:	89ab      	ldrh	r3, [r5, #12]
    2ca2:	061b      	lsls	r3, r3, #24
    2ca4:	d505      	bpl.n	2cb2 <_svfprintf_r+0x3a>
    2ca6:	692b      	ldr	r3, [r5, #16]
    2ca8:	9307      	str	r3, [sp, #28]
    2caa:	2b00      	cmp	r3, #0
    2cac:	d101      	bne.n	2cb2 <_svfprintf_r+0x3a>
    2cae:	f001 f863 	bl	3d78 <_svfprintf_r+0x1100>
    2cb2:	ab32      	add	r3, sp, #200	; 0xc8
    2cb4:	9325      	str	r3, [sp, #148]	; 0x94
    2cb6:	2300      	movs	r3, #0
    2cb8:	46a3      	mov	fp, r4
    2cba:	af25      	add	r7, sp, #148	; 0x94
    2cbc:	60bb      	str	r3, [r7, #8]
    2cbe:	607b      	str	r3, [r7, #4]
    2cc0:	9314      	str	r3, [sp, #80]	; 0x50
    2cc2:	9316      	str	r3, [sp, #88]	; 0x58
    2cc4:	9315      	str	r3, [sp, #84]	; 0x54
    2cc6:	ae32      	add	r6, sp, #200	; 0xc8
    2cc8:	9317      	str	r3, [sp, #92]	; 0x5c
    2cca:	931a      	str	r3, [sp, #104]	; 0x68
    2ccc:	930a      	str	r3, [sp, #40]	; 0x28
    2cce:	465b      	mov	r3, fp
    2cd0:	781b      	ldrb	r3, [r3, #0]
    2cd2:	465c      	mov	r4, fp
    2cd4:	2b00      	cmp	r3, #0
    2cd6:	d01c      	beq.n	2d12 <_svfprintf_r+0x9a>
    2cd8:	2b25      	cmp	r3, #37	; 0x25
    2cda:	d102      	bne.n	2ce2 <_svfprintf_r+0x6a>
    2cdc:	e019      	b.n	2d12 <_svfprintf_r+0x9a>
    2cde:	2b25      	cmp	r3, #37	; 0x25
    2ce0:	d003      	beq.n	2cea <_svfprintf_r+0x72>
    2ce2:	3401      	adds	r4, #1
    2ce4:	7823      	ldrb	r3, [r4, #0]
    2ce6:	2b00      	cmp	r3, #0
    2ce8:	d1f9      	bne.n	2cde <_svfprintf_r+0x66>
    2cea:	465b      	mov	r3, fp
    2cec:	1ae5      	subs	r5, r4, r3
    2cee:	d010      	beq.n	2d12 <_svfprintf_r+0x9a>
    2cf0:	465b      	mov	r3, fp
    2cf2:	6033      	str	r3, [r6, #0]
    2cf4:	68bb      	ldr	r3, [r7, #8]
    2cf6:	6075      	str	r5, [r6, #4]
    2cf8:	195b      	adds	r3, r3, r5
    2cfa:	60bb      	str	r3, [r7, #8]
    2cfc:	687b      	ldr	r3, [r7, #4]
    2cfe:	3301      	adds	r3, #1
    2d00:	607b      	str	r3, [r7, #4]
    2d02:	2b07      	cmp	r3, #7
    2d04:	dc2e      	bgt.n	2d64 <_svfprintf_r+0xec>
    2d06:	3608      	adds	r6, #8
    2d08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2d0a:	469c      	mov	ip, r3
    2d0c:	44ac      	add	ip, r5
    2d0e:	4663      	mov	r3, ip
    2d10:	930a      	str	r3, [sp, #40]	; 0x28
    2d12:	7823      	ldrb	r3, [r4, #0]
    2d14:	2b00      	cmp	r3, #0
    2d16:	d02e      	beq.n	2d76 <_svfprintf_r+0xfe>
    2d18:	1c63      	adds	r3, r4, #1
    2d1a:	469b      	mov	fp, r3
    2d1c:	2300      	movs	r3, #0
    2d1e:	aa16      	add	r2, sp, #88	; 0x58
    2d20:	77d3      	strb	r3, [r2, #31]
    2d22:	2201      	movs	r2, #1
    2d24:	4252      	negs	r2, r2
    2d26:	4692      	mov	sl, r2
    2d28:	2200      	movs	r2, #0
    2d2a:	2100      	movs	r1, #0
    2d2c:	920b      	str	r2, [sp, #44]	; 0x2c
    2d2e:	3220      	adds	r2, #32
    2d30:	4691      	mov	r9, r2
    2d32:	3220      	adds	r2, #32
    2d34:	7863      	ldrb	r3, [r4, #1]
    2d36:	4688      	mov	r8, r1
    2d38:	2000      	movs	r0, #0
    2d3a:	2400      	movs	r4, #0
    2d3c:	4694      	mov	ip, r2
    2d3e:	4659      	mov	r1, fp
    2d40:	3101      	adds	r1, #1
    2d42:	001a      	movs	r2, r3
    2d44:	3a20      	subs	r2, #32
    2d46:	2a58      	cmp	r2, #88	; 0x58
    2d48:	d900      	bls.n	2d4c <_svfprintf_r+0xd4>
    2d4a:	e2fd      	b.n	3348 <_svfprintf_r+0x6d0>
    2d4c:	4dd7      	ldr	r5, [pc, #860]	; (30ac <_svfprintf_r+0x434>)
    2d4e:	0092      	lsls	r2, r2, #2
    2d50:	58aa      	ldr	r2, [r5, r2]
    2d52:	4697      	mov	pc, r2
    2d54:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2d56:	920f      	str	r2, [sp, #60]	; 0x3c
    2d58:	425b      	negs	r3, r3
    2d5a:	930b      	str	r3, [sp, #44]	; 0x2c
    2d5c:	2304      	movs	r3, #4
    2d5e:	431c      	orrs	r4, r3
    2d60:	780b      	ldrb	r3, [r1, #0]
    2d62:	e7ed      	b.n	2d40 <_svfprintf_r+0xc8>
    2d64:	003a      	movs	r2, r7
    2d66:	9906      	ldr	r1, [sp, #24]
    2d68:	9809      	ldr	r0, [sp, #36]	; 0x24
    2d6a:	f003 fa1f 	bl	61ac <__ssprint_r>
    2d6e:	2800      	cmp	r0, #0
    2d70:	d109      	bne.n	2d86 <_svfprintf_r+0x10e>
    2d72:	ae32      	add	r6, sp, #200	; 0xc8
    2d74:	e7c8      	b.n	2d08 <_svfprintf_r+0x90>
    2d76:	68bb      	ldr	r3, [r7, #8]
    2d78:	2b00      	cmp	r3, #0
    2d7a:	d004      	beq.n	2d86 <_svfprintf_r+0x10e>
    2d7c:	003a      	movs	r2, r7
    2d7e:	9906      	ldr	r1, [sp, #24]
    2d80:	9809      	ldr	r0, [sp, #36]	; 0x24
    2d82:	f003 fa13 	bl	61ac <__ssprint_r>
    2d86:	9b06      	ldr	r3, [sp, #24]
    2d88:	899b      	ldrh	r3, [r3, #12]
    2d8a:	065b      	lsls	r3, r3, #25
    2d8c:	d501      	bpl.n	2d92 <_svfprintf_r+0x11a>
    2d8e:	f001 f8ce 	bl	3f2e <_svfprintf_r+0x12b6>
    2d92:	980a      	ldr	r0, [sp, #40]	; 0x28
    2d94:	b043      	add	sp, #268	; 0x10c
    2d96:	bc3c      	pop	{r2, r3, r4, r5}
    2d98:	4690      	mov	r8, r2
    2d9a:	4699      	mov	r9, r3
    2d9c:	46a2      	mov	sl, r4
    2d9e:	46ab      	mov	fp, r5
    2da0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2da2:	2201      	movs	r2, #1
    2da4:	780b      	ldrb	r3, [r1, #0]
    2da6:	4690      	mov	r8, r2
    2da8:	202b      	movs	r0, #43	; 0x2b
    2daa:	e7c9      	b.n	2d40 <_svfprintf_r+0xc8>
    2dac:	1c4b      	adds	r3, r1, #1
    2dae:	469b      	mov	fp, r3
    2db0:	780b      	ldrb	r3, [r1, #0]
    2db2:	2b2a      	cmp	r3, #42	; 0x2a
    2db4:	d101      	bne.n	2dba <_svfprintf_r+0x142>
    2db6:	f001 fa1b 	bl	41f0 <_svfprintf_r+0x1578>
    2dba:	001a      	movs	r2, r3
    2dbc:	2100      	movs	r1, #0
    2dbe:	3a30      	subs	r2, #48	; 0x30
    2dc0:	468a      	mov	sl, r1
    2dc2:	4659      	mov	r1, fp
    2dc4:	2a09      	cmp	r2, #9
    2dc6:	d8bc      	bhi.n	2d42 <_svfprintf_r+0xca>
    2dc8:	0003      	movs	r3, r0
    2dca:	0011      	movs	r1, r2
    2dcc:	4650      	mov	r0, sl
    2dce:	465a      	mov	r2, fp
    2dd0:	469a      	mov	sl, r3
    2dd2:	46a3      	mov	fp, r4
    2dd4:	0083      	lsls	r3, r0, #2
    2dd6:	181b      	adds	r3, r3, r0
    2dd8:	7814      	ldrb	r4, [r2, #0]
    2dda:	005b      	lsls	r3, r3, #1
    2ddc:	1858      	adds	r0, r3, r1
    2dde:	0021      	movs	r1, r4
    2de0:	1c53      	adds	r3, r2, #1
    2de2:	3930      	subs	r1, #48	; 0x30
    2de4:	001a      	movs	r2, r3
    2de6:	2909      	cmp	r1, #9
    2de8:	d9f4      	bls.n	2dd4 <_svfprintf_r+0x15c>
    2dea:	4652      	mov	r2, sl
    2dec:	0019      	movs	r1, r3
    2dee:	4682      	mov	sl, r0
    2df0:	0023      	movs	r3, r4
    2df2:	0010      	movs	r0, r2
    2df4:	465c      	mov	r4, fp
    2df6:	e7a4      	b.n	2d42 <_svfprintf_r+0xca>
    2df8:	2380      	movs	r3, #128	; 0x80
    2dfa:	431c      	orrs	r4, r3
    2dfc:	780b      	ldrb	r3, [r1, #0]
    2dfe:	e79f      	b.n	2d40 <_svfprintf_r+0xc8>
    2e00:	468b      	mov	fp, r1
    2e02:	4641      	mov	r1, r8
    2e04:	9312      	str	r3, [sp, #72]	; 0x48
    2e06:	2900      	cmp	r1, #0
    2e08:	d001      	beq.n	2e0e <_svfprintf_r+0x196>
    2e0a:	f001 fa1f 	bl	424c <_svfprintf_r+0x15d4>
    2e0e:	2310      	movs	r3, #16
    2e10:	431c      	orrs	r4, r3
    2e12:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    2e14:	06a3      	lsls	r3, r4, #26
    2e16:	d501      	bpl.n	2e1c <_svfprintf_r+0x1a4>
    2e18:	f000 fe88 	bl	3b2c <_svfprintf_r+0xeb4>
    2e1c:	06e3      	lsls	r3, r4, #27
    2e1e:	d501      	bpl.n	2e24 <_svfprintf_r+0x1ac>
    2e20:	f000 fd80 	bl	3924 <_svfprintf_r+0xcac>
    2e24:	0663      	lsls	r3, r4, #25
    2e26:	d401      	bmi.n	2e2c <_svfprintf_r+0x1b4>
    2e28:	f000 fd7c 	bl	3924 <_svfprintf_r+0xcac>
    2e2c:	2100      	movs	r1, #0
    2e2e:	5e53      	ldrsh	r3, [r2, r1]
    2e30:	930c      	str	r3, [sp, #48]	; 0x30
    2e32:	3204      	adds	r2, #4
    2e34:	17db      	asrs	r3, r3, #31
    2e36:	930d      	str	r3, [sp, #52]	; 0x34
    2e38:	920f      	str	r2, [sp, #60]	; 0x3c
    2e3a:	d501      	bpl.n	2e40 <_svfprintf_r+0x1c8>
    2e3c:	f000 fe86 	bl	3b4c <_svfprintf_r+0xed4>
    2e40:	990c      	ldr	r1, [sp, #48]	; 0x30
    2e42:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    2e44:	0008      	movs	r0, r1
    2e46:	ab16      	add	r3, sp, #88	; 0x58
    2e48:	7fdb      	ldrb	r3, [r3, #31]
    2e4a:	4310      	orrs	r0, r2
    2e4c:	4698      	mov	r8, r3
    2e4e:	0002      	movs	r2, r0
    2e50:	2301      	movs	r3, #1
    2e52:	4651      	mov	r1, sl
    2e54:	3101      	adds	r1, #1
    2e56:	d100      	bne.n	2e5a <_svfprintf_r+0x1e2>
    2e58:	e0ff      	b.n	305a <_svfprintf_r+0x3e2>
    2e5a:	2180      	movs	r1, #128	; 0x80
    2e5c:	0020      	movs	r0, r4
    2e5e:	4388      	bics	r0, r1
    2e60:	9008      	str	r0, [sp, #32]
    2e62:	2a00      	cmp	r2, #0
    2e64:	d000      	beq.n	2e68 <_svfprintf_r+0x1f0>
    2e66:	e0fc      	b.n	3062 <_svfprintf_r+0x3ea>
    2e68:	4652      	mov	r2, sl
    2e6a:	2a00      	cmp	r2, #0
    2e6c:	d001      	beq.n	2e72 <_svfprintf_r+0x1fa>
    2e6e:	f000 fc2c 	bl	36ca <_svfprintf_r+0xa52>
    2e72:	2b00      	cmp	r3, #0
    2e74:	d001      	beq.n	2e7a <_svfprintf_r+0x202>
    2e76:	f000 fd04 	bl	3882 <_svfprintf_r+0xc0a>
    2e7a:	2001      	movs	r0, #1
    2e7c:	ab32      	add	r3, sp, #200	; 0xc8
    2e7e:	4020      	ands	r0, r4
    2e80:	900e      	str	r0, [sp, #56]	; 0x38
    2e82:	9311      	str	r3, [sp, #68]	; 0x44
    2e84:	d008      	beq.n	2e98 <_svfprintf_r+0x220>
    2e86:	2327      	movs	r3, #39	; 0x27
    2e88:	2130      	movs	r1, #48	; 0x30
    2e8a:	aa28      	add	r2, sp, #160	; 0xa0
    2e8c:	54d1      	strb	r1, [r2, r3]
    2e8e:	aa16      	add	r2, sp, #88	; 0x58
    2e90:	4694      	mov	ip, r2
    2e92:	3348      	adds	r3, #72	; 0x48
    2e94:	4463      	add	r3, ip
    2e96:	9311      	str	r3, [sp, #68]	; 0x44
    2e98:	4653      	mov	r3, sl
    2e9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    2e9c:	9307      	str	r3, [sp, #28]
    2e9e:	4592      	cmp	sl, r2
    2ea0:	da00      	bge.n	2ea4 <_svfprintf_r+0x22c>
    2ea2:	9207      	str	r2, [sp, #28]
    2ea4:	2300      	movs	r3, #0
    2ea6:	9313      	str	r3, [sp, #76]	; 0x4c
    2ea8:	4643      	mov	r3, r8
    2eaa:	2b00      	cmp	r3, #0
    2eac:	d002      	beq.n	2eb4 <_svfprintf_r+0x23c>
    2eae:	9b07      	ldr	r3, [sp, #28]
    2eb0:	3301      	adds	r3, #1
    2eb2:	9307      	str	r3, [sp, #28]
    2eb4:	2302      	movs	r3, #2
    2eb6:	9a08      	ldr	r2, [sp, #32]
    2eb8:	401a      	ands	r2, r3
    2eba:	4691      	mov	r9, r2
    2ebc:	d002      	beq.n	2ec4 <_svfprintf_r+0x24c>
    2ebe:	9b07      	ldr	r3, [sp, #28]
    2ec0:	3302      	adds	r3, #2
    2ec2:	9307      	str	r3, [sp, #28]
    2ec4:	2384      	movs	r3, #132	; 0x84
    2ec6:	9a08      	ldr	r2, [sp, #32]
    2ec8:	401a      	ands	r2, r3
    2eca:	9210      	str	r2, [sp, #64]	; 0x40
    2ecc:	d000      	beq.n	2ed0 <_svfprintf_r+0x258>
    2ece:	e24d      	b.n	336c <_svfprintf_r+0x6f4>
    2ed0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2ed2:	9a07      	ldr	r2, [sp, #28]
    2ed4:	1a9c      	subs	r4, r3, r2
    2ed6:	2c00      	cmp	r4, #0
    2ed8:	dc00      	bgt.n	2edc <_svfprintf_r+0x264>
    2eda:	e247      	b.n	336c <_svfprintf_r+0x6f4>
    2edc:	4974      	ldr	r1, [pc, #464]	; (30b0 <_svfprintf_r+0x438>)
    2ede:	68ba      	ldr	r2, [r7, #8]
    2ee0:	687b      	ldr	r3, [r7, #4]
    2ee2:	4688      	mov	r8, r1
    2ee4:	2c10      	cmp	r4, #16
    2ee6:	dd1f      	ble.n	2f28 <_svfprintf_r+0x2b0>
    2ee8:	0031      	movs	r1, r6
    2eea:	2510      	movs	r5, #16
    2eec:	4646      	mov	r6, r8
    2eee:	e003      	b.n	2ef8 <_svfprintf_r+0x280>
    2ef0:	3c10      	subs	r4, #16
    2ef2:	3108      	adds	r1, #8
    2ef4:	2c10      	cmp	r4, #16
    2ef6:	dd15      	ble.n	2f24 <_svfprintf_r+0x2ac>
    2ef8:	3210      	adds	r2, #16
    2efa:	3301      	adds	r3, #1
    2efc:	600e      	str	r6, [r1, #0]
    2efe:	604d      	str	r5, [r1, #4]
    2f00:	60ba      	str	r2, [r7, #8]
    2f02:	607b      	str	r3, [r7, #4]
    2f04:	2b07      	cmp	r3, #7
    2f06:	ddf3      	ble.n	2ef0 <_svfprintf_r+0x278>
    2f08:	003a      	movs	r2, r7
    2f0a:	9906      	ldr	r1, [sp, #24]
    2f0c:	9809      	ldr	r0, [sp, #36]	; 0x24
    2f0e:	f003 f94d 	bl	61ac <__ssprint_r>
    2f12:	2800      	cmp	r0, #0
    2f14:	d000      	beq.n	2f18 <_svfprintf_r+0x2a0>
    2f16:	e736      	b.n	2d86 <_svfprintf_r+0x10e>
    2f18:	3c10      	subs	r4, #16
    2f1a:	68ba      	ldr	r2, [r7, #8]
    2f1c:	687b      	ldr	r3, [r7, #4]
    2f1e:	a932      	add	r1, sp, #200	; 0xc8
    2f20:	2c10      	cmp	r4, #16
    2f22:	dce9      	bgt.n	2ef8 <_svfprintf_r+0x280>
    2f24:	46b0      	mov	r8, r6
    2f26:	000e      	movs	r6, r1
    2f28:	4641      	mov	r1, r8
    2f2a:	6074      	str	r4, [r6, #4]
    2f2c:	3301      	adds	r3, #1
    2f2e:	18a4      	adds	r4, r4, r2
    2f30:	6031      	str	r1, [r6, #0]
    2f32:	60bc      	str	r4, [r7, #8]
    2f34:	607b      	str	r3, [r7, #4]
    2f36:	2b07      	cmp	r3, #7
    2f38:	dd01      	ble.n	2f3e <_svfprintf_r+0x2c6>
    2f3a:	f000 fca8 	bl	388e <_svfprintf_r+0xc16>
    2f3e:	ab16      	add	r3, sp, #88	; 0x58
    2f40:	7fdb      	ldrb	r3, [r3, #31]
    2f42:	3608      	adds	r6, #8
    2f44:	4698      	mov	r8, r3
    2f46:	e212      	b.n	336e <_svfprintf_r+0x6f6>
    2f48:	468b      	mov	fp, r1
    2f4a:	4641      	mov	r1, r8
    2f4c:	9312      	str	r3, [sp, #72]	; 0x48
    2f4e:	2900      	cmp	r1, #0
    2f50:	d001      	beq.n	2f56 <_svfprintf_r+0x2de>
    2f52:	f001 f977 	bl	4244 <_svfprintf_r+0x15cc>
    2f56:	2207      	movs	r2, #7
    2f58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2f5a:	3307      	adds	r3, #7
    2f5c:	4393      	bics	r3, r2
    2f5e:	3201      	adds	r2, #1
    2f60:	4694      	mov	ip, r2
    2f62:	449c      	add	ip, r3
    2f64:	4662      	mov	r2, ip
    2f66:	920f      	str	r2, [sp, #60]	; 0x3c
    2f68:	681a      	ldr	r2, [r3, #0]
    2f6a:	9216      	str	r2, [sp, #88]	; 0x58
    2f6c:	685b      	ldr	r3, [r3, #4]
    2f6e:	2201      	movs	r2, #1
    2f70:	9315      	str	r3, [sp, #84]	; 0x54
    2f72:	9b15      	ldr	r3, [sp, #84]	; 0x54
    2f74:	9d16      	ldr	r5, [sp, #88]	; 0x58
    2f76:	005b      	lsls	r3, r3, #1
    2f78:	085b      	lsrs	r3, r3, #1
    2f7a:	4698      	mov	r8, r3
    2f7c:	4252      	negs	r2, r2
    2f7e:	4b4d      	ldr	r3, [pc, #308]	; (30b4 <_svfprintf_r+0x43c>)
    2f80:	0028      	movs	r0, r5
    2f82:	4641      	mov	r1, r8
    2f84:	f004 ffc6 	bl	7f14 <__aeabi_dcmpun>
    2f88:	2800      	cmp	r0, #0
    2f8a:	d001      	beq.n	2f90 <_svfprintf_r+0x318>
    2f8c:	f000 fdfd 	bl	3b8a <_svfprintf_r+0xf12>
    2f90:	2201      	movs	r2, #1
    2f92:	4b48      	ldr	r3, [pc, #288]	; (30b4 <_svfprintf_r+0x43c>)
    2f94:	4252      	negs	r2, r2
    2f96:	0028      	movs	r0, r5
    2f98:	4641      	mov	r1, r8
    2f9a:	f003 fd43 	bl	6a24 <__aeabi_dcmple>
    2f9e:	2800      	cmp	r0, #0
    2fa0:	d001      	beq.n	2fa6 <_svfprintf_r+0x32e>
    2fa2:	f000 fdf2 	bl	3b8a <_svfprintf_r+0xf12>
    2fa6:	2200      	movs	r2, #0
    2fa8:	2300      	movs	r3, #0
    2faa:	9816      	ldr	r0, [sp, #88]	; 0x58
    2fac:	9915      	ldr	r1, [sp, #84]	; 0x54
    2fae:	f003 fd2f 	bl	6a10 <__aeabi_dcmplt>
    2fb2:	2800      	cmp	r0, #0
    2fb4:	d001      	beq.n	2fba <_svfprintf_r+0x342>
    2fb6:	f001 f822 	bl	3ffe <_svfprintf_r+0x1386>
    2fba:	ab16      	add	r3, sp, #88	; 0x58
    2fbc:	7fdb      	ldrb	r3, [r3, #31]
    2fbe:	4698      	mov	r8, r3
    2fc0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    2fc2:	2b47      	cmp	r3, #71	; 0x47
    2fc4:	dd01      	ble.n	2fca <_svfprintf_r+0x352>
    2fc6:	f000 fec7 	bl	3d58 <_svfprintf_r+0x10e0>
    2fca:	4b3b      	ldr	r3, [pc, #236]	; (30b8 <_svfprintf_r+0x440>)
    2fcc:	9311      	str	r3, [sp, #68]	; 0x44
    2fce:	2380      	movs	r3, #128	; 0x80
    2fd0:	439c      	bics	r4, r3
    2fd2:	3b7d      	subs	r3, #125	; 0x7d
    2fd4:	9307      	str	r3, [sp, #28]
    2fd6:	930e      	str	r3, [sp, #56]	; 0x38
    2fd8:	2300      	movs	r3, #0
    2fda:	9408      	str	r4, [sp, #32]
    2fdc:	469a      	mov	sl, r3
    2fde:	9313      	str	r3, [sp, #76]	; 0x4c
    2fe0:	e762      	b.n	2ea8 <_svfprintf_r+0x230>
    2fe2:	2200      	movs	r2, #0
    2fe4:	3b30      	subs	r3, #48	; 0x30
    2fe6:	0015      	movs	r5, r2
    2fe8:	001a      	movs	r2, r3
    2fea:	0003      	movs	r3, r0
    2fec:	9407      	str	r4, [sp, #28]
    2fee:	0008      	movs	r0, r1
    2ff0:	002c      	movs	r4, r5
    2ff2:	469b      	mov	fp, r3
    2ff4:	00a3      	lsls	r3, r4, #2
    2ff6:	191c      	adds	r4, r3, r4
    2ff8:	7803      	ldrb	r3, [r0, #0]
    2ffa:	0064      	lsls	r4, r4, #1
    2ffc:	1914      	adds	r4, r2, r4
    2ffe:	001a      	movs	r2, r3
    3000:	3101      	adds	r1, #1
    3002:	3a30      	subs	r2, #48	; 0x30
    3004:	0008      	movs	r0, r1
    3006:	2a09      	cmp	r2, #9
    3008:	d9f4      	bls.n	2ff4 <_svfprintf_r+0x37c>
    300a:	940b      	str	r4, [sp, #44]	; 0x2c
    300c:	4658      	mov	r0, fp
    300e:	9c07      	ldr	r4, [sp, #28]
    3010:	e697      	b.n	2d42 <_svfprintf_r+0xca>
    3012:	2308      	movs	r3, #8
    3014:	431c      	orrs	r4, r3
    3016:	780b      	ldrb	r3, [r1, #0]
    3018:	e692      	b.n	2d40 <_svfprintf_r+0xc8>
    301a:	9312      	str	r3, [sp, #72]	; 0x48
    301c:	2310      	movs	r3, #16
    301e:	431c      	orrs	r4, r3
    3020:	468b      	mov	fp, r1
    3022:	06a3      	lsls	r3, r4, #26
    3024:	d500      	bpl.n	3028 <_svfprintf_r+0x3b0>
    3026:	e17b      	b.n	3320 <_svfprintf_r+0x6a8>
    3028:	06e3      	lsls	r3, r4, #27
    302a:	d501      	bpl.n	3030 <_svfprintf_r+0x3b8>
    302c:	f000 fc7e 	bl	392c <_svfprintf_r+0xcb4>
    3030:	0663      	lsls	r3, r4, #25
    3032:	d401      	bmi.n	3038 <_svfprintf_r+0x3c0>
    3034:	f000 fc7a 	bl	392c <_svfprintf_r+0xcb4>
    3038:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    303a:	881a      	ldrh	r2, [r3, #0]
    303c:	920c      	str	r2, [sp, #48]	; 0x30
    303e:	2200      	movs	r2, #0
    3040:	3304      	adds	r3, #4
    3042:	930f      	str	r3, [sp, #60]	; 0x3c
    3044:	2300      	movs	r3, #0
    3046:	920d      	str	r2, [sp, #52]	; 0x34
    3048:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    304a:	2100      	movs	r1, #0
    304c:	a816      	add	r0, sp, #88	; 0x58
    304e:	77c1      	strb	r1, [r0, #31]
    3050:	4688      	mov	r8, r1
    3052:	4651      	mov	r1, sl
    3054:	3101      	adds	r1, #1
    3056:	d000      	beq.n	305a <_svfprintf_r+0x3e2>
    3058:	e6ff      	b.n	2e5a <_svfprintf_r+0x1e2>
    305a:	2a00      	cmp	r2, #0
    305c:	d100      	bne.n	3060 <_svfprintf_r+0x3e8>
    305e:	e335      	b.n	36cc <_svfprintf_r+0xa54>
    3060:	9408      	str	r4, [sp, #32]
    3062:	2b01      	cmp	r3, #1
    3064:	d100      	bne.n	3068 <_svfprintf_r+0x3f0>
    3066:	e3e5      	b.n	3834 <_svfprintf_r+0xbbc>
    3068:	2b02      	cmp	r3, #2
    306a:	d000      	beq.n	306e <_svfprintf_r+0x3f6>
    306c:	e362      	b.n	3734 <_svfprintf_r+0xabc>
    306e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
    3070:	200f      	movs	r0, #15
    3072:	46a1      	mov	r9, r4
    3074:	46b4      	mov	ip, r6
    3076:	ab32      	add	r3, sp, #200	; 0xc8
    3078:	0019      	movs	r1, r3
    307a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    307c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    307e:	0004      	movs	r4, r0
    3080:	464d      	mov	r5, r9
    3082:	4014      	ands	r4, r2
    3084:	5d2c      	ldrb	r4, [r5, r4]
    3086:	071e      	lsls	r6, r3, #28
    3088:	0915      	lsrs	r5, r2, #4
    308a:	3901      	subs	r1, #1
    308c:	432e      	orrs	r6, r5
    308e:	700c      	strb	r4, [r1, #0]
    3090:	091c      	lsrs	r4, r3, #4
    3092:	0023      	movs	r3, r4
    3094:	0034      	movs	r4, r6
    3096:	0032      	movs	r2, r6
    3098:	431c      	orrs	r4, r3
    309a:	d1f0      	bne.n	307e <_svfprintf_r+0x406>
    309c:	920c      	str	r2, [sp, #48]	; 0x30
    309e:	930d      	str	r3, [sp, #52]	; 0x34
    30a0:	ab32      	add	r3, sp, #200	; 0xc8
    30a2:	1a5b      	subs	r3, r3, r1
    30a4:	9111      	str	r1, [sp, #68]	; 0x44
    30a6:	4666      	mov	r6, ip
    30a8:	930e      	str	r3, [sp, #56]	; 0x38
    30aa:	e6f5      	b.n	2e98 <_svfprintf_r+0x220>
    30ac:	00008100 	.word	0x00008100
    30b0:	000082a8 	.word	0x000082a8
    30b4:	7fefffff 	.word	0x7fefffff
    30b8:	00008264 	.word	0x00008264
    30bc:	9312      	str	r3, [sp, #72]	; 0x48
    30be:	2310      	movs	r3, #16
    30c0:	431c      	orrs	r4, r3
    30c2:	468b      	mov	fp, r1
    30c4:	06a3      	lsls	r3, r4, #26
    30c6:	d500      	bpl.n	30ca <_svfprintf_r+0x452>
    30c8:	e111      	b.n	32ee <_svfprintf_r+0x676>
    30ca:	06e3      	lsls	r3, r4, #27
    30cc:	d501      	bpl.n	30d2 <_svfprintf_r+0x45a>
    30ce:	f000 fc31 	bl	3934 <_svfprintf_r+0xcbc>
    30d2:	0663      	lsls	r3, r4, #25
    30d4:	d401      	bmi.n	30da <_svfprintf_r+0x462>
    30d6:	f000 fc2d 	bl	3934 <_svfprintf_r+0xcbc>
    30da:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    30dc:	881a      	ldrh	r2, [r3, #0]
    30de:	920c      	str	r2, [sp, #48]	; 0x30
    30e0:	2200      	movs	r2, #0
    30e2:	3304      	adds	r3, #4
    30e4:	920d      	str	r2, [sp, #52]	; 0x34
    30e6:	930f      	str	r3, [sp, #60]	; 0x3c
    30e8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    30ea:	2301      	movs	r3, #1
    30ec:	e7ad      	b.n	304a <_svfprintf_r+0x3d2>
    30ee:	468b      	mov	fp, r1
    30f0:	4641      	mov	r1, r8
    30f2:	9312      	str	r3, [sp, #72]	; 0x48
    30f4:	2900      	cmp	r1, #0
    30f6:	d001      	beq.n	30fc <_svfprintf_r+0x484>
    30f8:	f001 f890 	bl	421c <_svfprintf_r+0x15a4>
    30fc:	4bb8      	ldr	r3, [pc, #736]	; (33e0 <_svfprintf_r+0x768>)
    30fe:	9317      	str	r3, [sp, #92]	; 0x5c
    3100:	06a3      	lsls	r3, r4, #26
    3102:	d500      	bpl.n	3106 <_svfprintf_r+0x48e>
    3104:	e0ab      	b.n	325e <_svfprintf_r+0x5e6>
    3106:	06e3      	lsls	r3, r4, #27
    3108:	d501      	bpl.n	310e <_svfprintf_r+0x496>
    310a:	f000 fc07 	bl	391c <_svfprintf_r+0xca4>
    310e:	0663      	lsls	r3, r4, #25
    3110:	d401      	bmi.n	3116 <_svfprintf_r+0x49e>
    3112:	f000 fc03 	bl	391c <_svfprintf_r+0xca4>
    3116:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    3118:	881a      	ldrh	r2, [r3, #0]
    311a:	920c      	str	r2, [sp, #48]	; 0x30
    311c:	2200      	movs	r2, #0
    311e:	3304      	adds	r3, #4
    3120:	920d      	str	r2, [sp, #52]	; 0x34
    3122:	930f      	str	r3, [sp, #60]	; 0x3c
    3124:	07e3      	lsls	r3, r4, #31
    3126:	d400      	bmi.n	312a <_svfprintf_r+0x4b2>
    3128:	e0a9      	b.n	327e <_svfprintf_r+0x606>
    312a:	990c      	ldr	r1, [sp, #48]	; 0x30
    312c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    312e:	000b      	movs	r3, r1
    3130:	4313      	orrs	r3, r2
    3132:	001a      	movs	r2, r3
    3134:	2302      	movs	r3, #2
    3136:	2a00      	cmp	r2, #0
    3138:	d100      	bne.n	313c <_svfprintf_r+0x4c4>
    313a:	e786      	b.n	304a <_svfprintf_r+0x3d2>
    313c:	2030      	movs	r0, #48	; 0x30
    313e:	a91e      	add	r1, sp, #120	; 0x78
    3140:	7008      	strb	r0, [r1, #0]
    3142:	2548      	movs	r5, #72	; 0x48
    3144:	4668      	mov	r0, sp
    3146:	1940      	adds	r0, r0, r5
    3148:	7800      	ldrb	r0, [r0, #0]
    314a:	431c      	orrs	r4, r3
    314c:	7048      	strb	r0, [r1, #1]
    314e:	e77c      	b.n	304a <_svfprintf_r+0x3d2>
    3150:	468b      	mov	fp, r1
    3152:	4641      	mov	r1, r8
    3154:	2900      	cmp	r1, #0
    3156:	d001      	beq.n	315c <_svfprintf_r+0x4e4>
    3158:	f001 f883 	bl	4262 <_svfprintf_r+0x15ea>
    315c:	06a3      	lsls	r3, r4, #26
    315e:	d501      	bpl.n	3164 <_svfprintf_r+0x4ec>
    3160:	f000 fde9 	bl	3d36 <_svfprintf_r+0x10be>
    3164:	06e3      	lsls	r3, r4, #27
    3166:	d501      	bpl.n	316c <_svfprintf_r+0x4f4>
    3168:	f000 fd9b 	bl	3ca2 <_svfprintf_r+0x102a>
    316c:	0663      	lsls	r3, r4, #25
    316e:	d401      	bmi.n	3174 <_svfprintf_r+0x4fc>
    3170:	f000 fd97 	bl	3ca2 <_svfprintf_r+0x102a>
    3174:	4669      	mov	r1, sp
    3176:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    3178:	8d09      	ldrh	r1, [r1, #40]	; 0x28
    317a:	681a      	ldr	r2, [r3, #0]
    317c:	3304      	adds	r3, #4
    317e:	9207      	str	r2, [sp, #28]
    3180:	8011      	strh	r1, [r2, #0]
    3182:	930f      	str	r3, [sp, #60]	; 0x3c
    3184:	e5a3      	b.n	2cce <_svfprintf_r+0x56>
    3186:	464b      	mov	r3, r9
    3188:	431c      	orrs	r4, r3
    318a:	780b      	ldrb	r3, [r1, #0]
    318c:	e5d8      	b.n	2d40 <_svfprintf_r+0xc8>
    318e:	9312      	str	r3, [sp, #72]	; 0x48
    3190:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    3192:	468b      	mov	fp, r1
    3194:	1d1d      	adds	r5, r3, #4
    3196:	681b      	ldr	r3, [r3, #0]
    3198:	a916      	add	r1, sp, #88	; 0x58
    319a:	001a      	movs	r2, r3
    319c:	9311      	str	r3, [sp, #68]	; 0x44
    319e:	2300      	movs	r3, #0
    31a0:	77cb      	strb	r3, [r1, #31]
    31a2:	2a00      	cmp	r2, #0
    31a4:	d101      	bne.n	31aa <_svfprintf_r+0x532>
    31a6:	f000 fefb 	bl	3fa0 <_svfprintf_r+0x1328>
    31aa:	4653      	mov	r3, sl
    31ac:	3301      	adds	r3, #1
    31ae:	d101      	bne.n	31b4 <_svfprintf_r+0x53c>
    31b0:	f000 fe38 	bl	3e24 <_svfprintf_r+0x11ac>
    31b4:	4652      	mov	r2, sl
    31b6:	2100      	movs	r1, #0
    31b8:	9811      	ldr	r0, [sp, #68]	; 0x44
    31ba:	f002 fc0b 	bl	59d4 <memchr>
    31be:	2800      	cmp	r0, #0
    31c0:	d101      	bne.n	31c6 <_svfprintf_r+0x54e>
    31c2:	f000 ff54 	bl	406e <_svfprintf_r+0x13f6>
    31c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
    31c8:	1ac3      	subs	r3, r0, r3
    31ca:	001a      	movs	r2, r3
    31cc:	930e      	str	r3, [sp, #56]	; 0x38
    31ce:	43db      	mvns	r3, r3
    31d0:	17db      	asrs	r3, r3, #31
    31d2:	401a      	ands	r2, r3
    31d4:	ab16      	add	r3, sp, #88	; 0x58
    31d6:	7fdb      	ldrb	r3, [r3, #31]
    31d8:	9207      	str	r2, [sp, #28]
    31da:	4698      	mov	r8, r3
    31dc:	2300      	movs	r3, #0
    31de:	950f      	str	r5, [sp, #60]	; 0x3c
    31e0:	9408      	str	r4, [sp, #32]
    31e2:	469a      	mov	sl, r3
    31e4:	9313      	str	r3, [sp, #76]	; 0x4c
    31e6:	e65f      	b.n	2ea8 <_svfprintf_r+0x230>
    31e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    31ea:	9312      	str	r3, [sp, #72]	; 0x48
    31ec:	6813      	ldr	r3, [r2, #0]
    31ee:	ad28      	add	r5, sp, #160	; 0xa0
    31f0:	9307      	str	r3, [sp, #28]
    31f2:	466b      	mov	r3, sp
    31f4:	7f1b      	ldrb	r3, [r3, #28]
    31f6:	468b      	mov	fp, r1
    31f8:	702b      	strb	r3, [r5, #0]
    31fa:	2300      	movs	r3, #0
    31fc:	a916      	add	r1, sp, #88	; 0x58
    31fe:	77cb      	strb	r3, [r1, #31]
    3200:	0013      	movs	r3, r2
    3202:	3304      	adds	r3, #4
    3204:	930f      	str	r3, [sp, #60]	; 0x3c
    3206:	2300      	movs	r3, #0
    3208:	9408      	str	r4, [sp, #32]
    320a:	4698      	mov	r8, r3
    320c:	3301      	adds	r3, #1
    320e:	9307      	str	r3, [sp, #28]
    3210:	930e      	str	r3, [sp, #56]	; 0x38
    3212:	2300      	movs	r3, #0
    3214:	9511      	str	r5, [sp, #68]	; 0x44
    3216:	469a      	mov	sl, r3
    3218:	9313      	str	r3, [sp, #76]	; 0x4c
    321a:	e64b      	b.n	2eb4 <_svfprintf_r+0x23c>
    321c:	468b      	mov	fp, r1
    321e:	4641      	mov	r1, r8
    3220:	9312      	str	r3, [sp, #72]	; 0x48
    3222:	2900      	cmp	r1, #0
    3224:	d100      	bne.n	3228 <_svfprintf_r+0x5b0>
    3226:	e5f4      	b.n	2e12 <_svfprintf_r+0x19a>
    3228:	ab16      	add	r3, sp, #88	; 0x58
    322a:	77d8      	strb	r0, [r3, #31]
    322c:	e5f1      	b.n	2e12 <_svfprintf_r+0x19a>
    322e:	4663      	mov	r3, ip
    3230:	431c      	orrs	r4, r3
    3232:	780b      	ldrb	r3, [r1, #0]
    3234:	e584      	b.n	2d40 <_svfprintf_r+0xc8>
    3236:	780b      	ldrb	r3, [r1, #0]
    3238:	2b6c      	cmp	r3, #108	; 0x6c
    323a:	d101      	bne.n	3240 <_svfprintf_r+0x5c8>
    323c:	f000 fd86 	bl	3d4c <_svfprintf_r+0x10d4>
    3240:	2210      	movs	r2, #16
    3242:	4314      	orrs	r4, r2
    3244:	e57c      	b.n	2d40 <_svfprintf_r+0xc8>
    3246:	468b      	mov	fp, r1
    3248:	4641      	mov	r1, r8
    324a:	9312      	str	r3, [sp, #72]	; 0x48
    324c:	2900      	cmp	r1, #0
    324e:	d001      	beq.n	3254 <_svfprintf_r+0x5dc>
    3250:	f000 ffe8 	bl	4224 <_svfprintf_r+0x15ac>
    3254:	4b63      	ldr	r3, [pc, #396]	; (33e4 <_svfprintf_r+0x76c>)
    3256:	9317      	str	r3, [sp, #92]	; 0x5c
    3258:	06a3      	lsls	r3, r4, #26
    325a:	d400      	bmi.n	325e <_svfprintf_r+0x5e6>
    325c:	e753      	b.n	3106 <_svfprintf_r+0x48e>
    325e:	2207      	movs	r2, #7
    3260:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    3262:	3307      	adds	r3, #7
    3264:	4393      	bics	r3, r2
    3266:	3201      	adds	r2, #1
    3268:	4694      	mov	ip, r2
    326a:	449c      	add	ip, r3
    326c:	4662      	mov	r2, ip
    326e:	920f      	str	r2, [sp, #60]	; 0x3c
    3270:	681a      	ldr	r2, [r3, #0]
    3272:	685b      	ldr	r3, [r3, #4]
    3274:	920c      	str	r2, [sp, #48]	; 0x30
    3276:	930d      	str	r3, [sp, #52]	; 0x34
    3278:	07e3      	lsls	r3, r4, #31
    327a:	d500      	bpl.n	327e <_svfprintf_r+0x606>
    327c:	e755      	b.n	312a <_svfprintf_r+0x4b2>
    327e:	990c      	ldr	r1, [sp, #48]	; 0x30
    3280:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    3282:	0008      	movs	r0, r1
    3284:	4310      	orrs	r0, r2
    3286:	2302      	movs	r3, #2
    3288:	0002      	movs	r2, r0
    328a:	e6de      	b.n	304a <_svfprintf_r+0x3d2>
    328c:	468b      	mov	fp, r1
    328e:	990f      	ldr	r1, [sp, #60]	; 0x3c
    3290:	2230      	movs	r2, #48	; 0x30
    3292:	680b      	ldr	r3, [r1, #0]
    3294:	930c      	str	r3, [sp, #48]	; 0x30
    3296:	2300      	movs	r3, #0
    3298:	930d      	str	r3, [sp, #52]	; 0x34
    329a:	3302      	adds	r3, #2
    329c:	431c      	orrs	r4, r3
    329e:	ab1e      	add	r3, sp, #120	; 0x78
    32a0:	701a      	strb	r2, [r3, #0]
    32a2:	3248      	adds	r2, #72	; 0x48
    32a4:	705a      	strb	r2, [r3, #1]
    32a6:	000b      	movs	r3, r1
    32a8:	3304      	adds	r3, #4
    32aa:	930f      	str	r3, [sp, #60]	; 0x3c
    32ac:	4b4d      	ldr	r3, [pc, #308]	; (33e4 <_svfprintf_r+0x76c>)
    32ae:	9212      	str	r2, [sp, #72]	; 0x48
    32b0:	9317      	str	r3, [sp, #92]	; 0x5c
    32b2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    32b4:	2302      	movs	r3, #2
    32b6:	e6c8      	b.n	304a <_svfprintf_r+0x3d2>
    32b8:	2301      	movs	r3, #1
    32ba:	431c      	orrs	r4, r3
    32bc:	780b      	ldrb	r3, [r1, #0]
    32be:	e53f      	b.n	2d40 <_svfprintf_r+0xc8>
    32c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    32c2:	1d1a      	adds	r2, r3, #4
    32c4:	681b      	ldr	r3, [r3, #0]
    32c6:	930b      	str	r3, [sp, #44]	; 0x2c
    32c8:	2b00      	cmp	r3, #0
    32ca:	da00      	bge.n	32ce <_svfprintf_r+0x656>
    32cc:	e542      	b.n	2d54 <_svfprintf_r+0xdc>
    32ce:	780b      	ldrb	r3, [r1, #0]
    32d0:	920f      	str	r2, [sp, #60]	; 0x3c
    32d2:	e535      	b.n	2d40 <_svfprintf_r+0xc8>
    32d4:	780b      	ldrb	r3, [r1, #0]
    32d6:	2800      	cmp	r0, #0
    32d8:	d000      	beq.n	32dc <_svfprintf_r+0x664>
    32da:	e531      	b.n	2d40 <_svfprintf_r+0xc8>
    32dc:	2201      	movs	r2, #1
    32de:	3020      	adds	r0, #32
    32e0:	4690      	mov	r8, r2
    32e2:	e52d      	b.n	2d40 <_svfprintf_r+0xc8>
    32e4:	468b      	mov	fp, r1
    32e6:	9312      	str	r3, [sp, #72]	; 0x48
    32e8:	06a3      	lsls	r3, r4, #26
    32ea:	d400      	bmi.n	32ee <_svfprintf_r+0x676>
    32ec:	e6ed      	b.n	30ca <_svfprintf_r+0x452>
    32ee:	2207      	movs	r2, #7
    32f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    32f2:	3307      	adds	r3, #7
    32f4:	4393      	bics	r3, r2
    32f6:	3201      	adds	r2, #1
    32f8:	4694      	mov	ip, r2
    32fa:	449c      	add	ip, r3
    32fc:	4662      	mov	r2, ip
    32fe:	920f      	str	r2, [sp, #60]	; 0x3c
    3300:	681a      	ldr	r2, [r3, #0]
    3302:	685b      	ldr	r3, [r3, #4]
    3304:	0011      	movs	r1, r2
    3306:	001a      	movs	r2, r3
    3308:	0008      	movs	r0, r1
    330a:	4310      	orrs	r0, r2
    330c:	910c      	str	r1, [sp, #48]	; 0x30
    330e:	920d      	str	r2, [sp, #52]	; 0x34
    3310:	2301      	movs	r3, #1
    3312:	0002      	movs	r2, r0
    3314:	e699      	b.n	304a <_svfprintf_r+0x3d2>
    3316:	468b      	mov	fp, r1
    3318:	9312      	str	r3, [sp, #72]	; 0x48
    331a:	06a3      	lsls	r3, r4, #26
    331c:	d400      	bmi.n	3320 <_svfprintf_r+0x6a8>
    331e:	e683      	b.n	3028 <_svfprintf_r+0x3b0>
    3320:	2207      	movs	r2, #7
    3322:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    3324:	3307      	adds	r3, #7
    3326:	4393      	bics	r3, r2
    3328:	3201      	adds	r2, #1
    332a:	4694      	mov	ip, r2
    332c:	449c      	add	ip, r3
    332e:	4662      	mov	r2, ip
    3330:	920f      	str	r2, [sp, #60]	; 0x3c
    3332:	681a      	ldr	r2, [r3, #0]
    3334:	685b      	ldr	r3, [r3, #4]
    3336:	0011      	movs	r1, r2
    3338:	001a      	movs	r2, r3
    333a:	0008      	movs	r0, r1
    333c:	4310      	orrs	r0, r2
    333e:	910c      	str	r1, [sp, #48]	; 0x30
    3340:	920d      	str	r2, [sp, #52]	; 0x34
    3342:	2300      	movs	r3, #0
    3344:	0002      	movs	r2, r0
    3346:	e680      	b.n	304a <_svfprintf_r+0x3d2>
    3348:	468b      	mov	fp, r1
    334a:	4641      	mov	r1, r8
    334c:	9312      	str	r3, [sp, #72]	; 0x48
    334e:	2900      	cmp	r1, #0
    3350:	d001      	beq.n	3356 <_svfprintf_r+0x6de>
    3352:	f000 ff7f 	bl	4254 <_svfprintf_r+0x15dc>
    3356:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3358:	2b00      	cmp	r3, #0
    335a:	d100      	bne.n	335e <_svfprintf_r+0x6e6>
    335c:	e50b      	b.n	2d76 <_svfprintf_r+0xfe>
    335e:	ad28      	add	r5, sp, #160	; 0xa0
    3360:	702b      	strb	r3, [r5, #0]
    3362:	2300      	movs	r3, #0
    3364:	aa16      	add	r2, sp, #88	; 0x58
    3366:	77d3      	strb	r3, [r2, #31]
    3368:	9408      	str	r4, [sp, #32]
    336a:	e74e      	b.n	320a <_svfprintf_r+0x592>
    336c:	68bc      	ldr	r4, [r7, #8]
    336e:	4643      	mov	r3, r8
    3370:	2b00      	cmp	r3, #0
    3372:	d00f      	beq.n	3394 <_svfprintf_r+0x71c>
    3374:	aa16      	add	r2, sp, #88	; 0x58
    3376:	231f      	movs	r3, #31
    3378:	4694      	mov	ip, r2
    337a:	4463      	add	r3, ip
    337c:	6033      	str	r3, [r6, #0]
    337e:	2301      	movs	r3, #1
    3380:	6073      	str	r3, [r6, #4]
    3382:	687b      	ldr	r3, [r7, #4]
    3384:	3401      	adds	r4, #1
    3386:	3301      	adds	r3, #1
    3388:	60bc      	str	r4, [r7, #8]
    338a:	607b      	str	r3, [r7, #4]
    338c:	2b07      	cmp	r3, #7
    338e:	dd00      	ble.n	3392 <_svfprintf_r+0x71a>
    3390:	e1b3      	b.n	36fa <_svfprintf_r+0xa82>
    3392:	3608      	adds	r6, #8
    3394:	464b      	mov	r3, r9
    3396:	2b00      	cmp	r3, #0
    3398:	d00c      	beq.n	33b4 <_svfprintf_r+0x73c>
    339a:	ab1e      	add	r3, sp, #120	; 0x78
    339c:	6033      	str	r3, [r6, #0]
    339e:	2302      	movs	r3, #2
    33a0:	6073      	str	r3, [r6, #4]
    33a2:	687b      	ldr	r3, [r7, #4]
    33a4:	3402      	adds	r4, #2
    33a6:	3301      	adds	r3, #1
    33a8:	60bc      	str	r4, [r7, #8]
    33aa:	607b      	str	r3, [r7, #4]
    33ac:	2b07      	cmp	r3, #7
    33ae:	dd00      	ble.n	33b2 <_svfprintf_r+0x73a>
    33b0:	e1af      	b.n	3712 <_svfprintf_r+0xa9a>
    33b2:	3608      	adds	r6, #8
    33b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    33b6:	2b80      	cmp	r3, #128	; 0x80
    33b8:	d100      	bne.n	33bc <_svfprintf_r+0x744>
    33ba:	e120      	b.n	35fe <_svfprintf_r+0x986>
    33bc:	4653      	mov	r3, sl
    33be:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    33c0:	1a9d      	subs	r5, r3, r2
    33c2:	2d00      	cmp	r5, #0
    33c4:	dd3c      	ble.n	3440 <_svfprintf_r+0x7c8>
    33c6:	4a08      	ldr	r2, [pc, #32]	; (33e8 <_svfprintf_r+0x770>)
    33c8:	687b      	ldr	r3, [r7, #4]
    33ca:	4691      	mov	r9, r2
    33cc:	2d10      	cmp	r5, #16
    33ce:	dd2c      	ble.n	342a <_svfprintf_r+0x7b2>
    33d0:	2210      	movs	r2, #16
    33d2:	0021      	movs	r1, r4
    33d4:	4692      	mov	sl, r2
    33d6:	9c09      	ldr	r4, [sp, #36]	; 0x24
    33d8:	0032      	movs	r2, r6
    33da:	002e      	movs	r6, r5
    33dc:	464d      	mov	r5, r9
    33de:	e009      	b.n	33f4 <_svfprintf_r+0x77c>
    33e0:	00008274 	.word	0x00008274
    33e4:	00008288 	.word	0x00008288
    33e8:	000082b8 	.word	0x000082b8
    33ec:	3e10      	subs	r6, #16
    33ee:	3208      	adds	r2, #8
    33f0:	2e10      	cmp	r6, #16
    33f2:	dd16      	ble.n	3422 <_svfprintf_r+0x7aa>
    33f4:	4650      	mov	r0, sl
    33f6:	3110      	adds	r1, #16
    33f8:	3301      	adds	r3, #1
    33fa:	6015      	str	r5, [r2, #0]
    33fc:	6050      	str	r0, [r2, #4]
    33fe:	60b9      	str	r1, [r7, #8]
    3400:	607b      	str	r3, [r7, #4]
    3402:	2b07      	cmp	r3, #7
    3404:	ddf2      	ble.n	33ec <_svfprintf_r+0x774>
    3406:	003a      	movs	r2, r7
    3408:	9906      	ldr	r1, [sp, #24]
    340a:	0020      	movs	r0, r4
    340c:	f002 fece 	bl	61ac <__ssprint_r>
    3410:	2800      	cmp	r0, #0
    3412:	d000      	beq.n	3416 <_svfprintf_r+0x79e>
    3414:	e4b7      	b.n	2d86 <_svfprintf_r+0x10e>
    3416:	3e10      	subs	r6, #16
    3418:	68b9      	ldr	r1, [r7, #8]
    341a:	687b      	ldr	r3, [r7, #4]
    341c:	aa32      	add	r2, sp, #200	; 0xc8
    341e:	2e10      	cmp	r6, #16
    3420:	dce8      	bgt.n	33f4 <_svfprintf_r+0x77c>
    3422:	46a9      	mov	r9, r5
    3424:	000c      	movs	r4, r1
    3426:	0035      	movs	r5, r6
    3428:	0016      	movs	r6, r2
    342a:	464a      	mov	r2, r9
    342c:	1964      	adds	r4, r4, r5
    342e:	3301      	adds	r3, #1
    3430:	6032      	str	r2, [r6, #0]
    3432:	6075      	str	r5, [r6, #4]
    3434:	60bc      	str	r4, [r7, #8]
    3436:	607b      	str	r3, [r7, #4]
    3438:	2b07      	cmp	r3, #7
    343a:	dd00      	ble.n	343e <_svfprintf_r+0x7c6>
    343c:	e151      	b.n	36e2 <_svfprintf_r+0xa6a>
    343e:	3608      	adds	r6, #8
    3440:	9b08      	ldr	r3, [sp, #32]
    3442:	05db      	lsls	r3, r3, #23
    3444:	d500      	bpl.n	3448 <_svfprintf_r+0x7d0>
    3446:	e0b6      	b.n	35b6 <_svfprintf_r+0x93e>
    3448:	9b11      	ldr	r3, [sp, #68]	; 0x44
    344a:	6033      	str	r3, [r6, #0]
    344c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    344e:	469c      	mov	ip, r3
    3450:	6073      	str	r3, [r6, #4]
    3452:	687b      	ldr	r3, [r7, #4]
    3454:	4464      	add	r4, ip
    3456:	3301      	adds	r3, #1
    3458:	60bc      	str	r4, [r7, #8]
    345a:	607b      	str	r3, [r7, #4]
    345c:	2b07      	cmp	r3, #7
    345e:	dd00      	ble.n	3462 <_svfprintf_r+0x7ea>
    3460:	e09d      	b.n	359e <_svfprintf_r+0x926>
    3462:	3608      	adds	r6, #8
    3464:	9b08      	ldr	r3, [sp, #32]
    3466:	075b      	lsls	r3, r3, #29
    3468:	d541      	bpl.n	34ee <_svfprintf_r+0x876>
    346a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    346c:	9a07      	ldr	r2, [sp, #28]
    346e:	1a9d      	subs	r5, r3, r2
    3470:	2d00      	cmp	r5, #0
    3472:	dd3c      	ble.n	34ee <_svfprintf_r+0x876>
    3474:	4ac4      	ldr	r2, [pc, #784]	; (3788 <_svfprintf_r+0xb10>)
    3476:	687b      	ldr	r3, [r7, #4]
    3478:	4690      	mov	r8, r2
    347a:	2d10      	cmp	r5, #16
    347c:	dd26      	ble.n	34cc <_svfprintf_r+0x854>
    347e:	2210      	movs	r2, #16
    3480:	0021      	movs	r1, r4
    3482:	4691      	mov	r9, r2
    3484:	9c09      	ldr	r4, [sp, #36]	; 0x24
    3486:	0032      	movs	r2, r6
    3488:	002e      	movs	r6, r5
    348a:	9d06      	ldr	r5, [sp, #24]
    348c:	e003      	b.n	3496 <_svfprintf_r+0x81e>
    348e:	3e10      	subs	r6, #16
    3490:	3208      	adds	r2, #8
    3492:	2e10      	cmp	r6, #16
    3494:	dd17      	ble.n	34c6 <_svfprintf_r+0x84e>
    3496:	48bc      	ldr	r0, [pc, #752]	; (3788 <_svfprintf_r+0xb10>)
    3498:	3110      	adds	r1, #16
    349a:	6010      	str	r0, [r2, #0]
    349c:	4648      	mov	r0, r9
    349e:	3301      	adds	r3, #1
    34a0:	6050      	str	r0, [r2, #4]
    34a2:	60b9      	str	r1, [r7, #8]
    34a4:	607b      	str	r3, [r7, #4]
    34a6:	2b07      	cmp	r3, #7
    34a8:	ddf1      	ble.n	348e <_svfprintf_r+0x816>
    34aa:	003a      	movs	r2, r7
    34ac:	0029      	movs	r1, r5
    34ae:	0020      	movs	r0, r4
    34b0:	f002 fe7c 	bl	61ac <__ssprint_r>
    34b4:	2800      	cmp	r0, #0
    34b6:	d000      	beq.n	34ba <_svfprintf_r+0x842>
    34b8:	e465      	b.n	2d86 <_svfprintf_r+0x10e>
    34ba:	3e10      	subs	r6, #16
    34bc:	68b9      	ldr	r1, [r7, #8]
    34be:	687b      	ldr	r3, [r7, #4]
    34c0:	aa32      	add	r2, sp, #200	; 0xc8
    34c2:	2e10      	cmp	r6, #16
    34c4:	dce7      	bgt.n	3496 <_svfprintf_r+0x81e>
    34c6:	0035      	movs	r5, r6
    34c8:	000c      	movs	r4, r1
    34ca:	0016      	movs	r6, r2
    34cc:	4642      	mov	r2, r8
    34ce:	1964      	adds	r4, r4, r5
    34d0:	3301      	adds	r3, #1
    34d2:	c624      	stmia	r6!, {r2, r5}
    34d4:	60bc      	str	r4, [r7, #8]
    34d6:	607b      	str	r3, [r7, #4]
    34d8:	2b07      	cmp	r3, #7
    34da:	dd08      	ble.n	34ee <_svfprintf_r+0x876>
    34dc:	003a      	movs	r2, r7
    34de:	9906      	ldr	r1, [sp, #24]
    34e0:	9809      	ldr	r0, [sp, #36]	; 0x24
    34e2:	f002 fe63 	bl	61ac <__ssprint_r>
    34e6:	2800      	cmp	r0, #0
    34e8:	d000      	beq.n	34ec <_svfprintf_r+0x874>
    34ea:	e44c      	b.n	2d86 <_svfprintf_r+0x10e>
    34ec:	68bc      	ldr	r4, [r7, #8]
    34ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    34f0:	9907      	ldr	r1, [sp, #28]
    34f2:	428b      	cmp	r3, r1
    34f4:	da00      	bge.n	34f8 <_svfprintf_r+0x880>
    34f6:	000b      	movs	r3, r1
    34f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    34fa:	4694      	mov	ip, r2
    34fc:	449c      	add	ip, r3
    34fe:	4663      	mov	r3, ip
    3500:	930a      	str	r3, [sp, #40]	; 0x28
    3502:	2c00      	cmp	r4, #0
    3504:	d000      	beq.n	3508 <_svfprintf_r+0x890>
    3506:	e0d6      	b.n	36b6 <_svfprintf_r+0xa3e>
    3508:	2300      	movs	r3, #0
    350a:	ae32      	add	r6, sp, #200	; 0xc8
    350c:	607b      	str	r3, [r7, #4]
    350e:	f7ff fbde 	bl	2cce <_svfprintf_r+0x56>
    3512:	9b14      	ldr	r3, [sp, #80]	; 0x50
    3514:	2b01      	cmp	r3, #1
    3516:	dc00      	bgt.n	351a <_svfprintf_r+0x8a2>
    3518:	e0ae      	b.n	3678 <_svfprintf_r+0xa00>
    351a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    351c:	3401      	adds	r4, #1
    351e:	6033      	str	r3, [r6, #0]
    3520:	2301      	movs	r3, #1
    3522:	6073      	str	r3, [r6, #4]
    3524:	687b      	ldr	r3, [r7, #4]
    3526:	60bc      	str	r4, [r7, #8]
    3528:	3301      	adds	r3, #1
    352a:	607b      	str	r3, [r7, #4]
    352c:	2b07      	cmp	r3, #7
    352e:	dd00      	ble.n	3532 <_svfprintf_r+0x8ba>
    3530:	e2df      	b.n	3af2 <_svfprintf_r+0xe7a>
    3532:	3608      	adds	r6, #8
    3534:	9a19      	ldr	r2, [sp, #100]	; 0x64
    3536:	3301      	adds	r3, #1
    3538:	6032      	str	r2, [r6, #0]
    353a:	9a18      	ldr	r2, [sp, #96]	; 0x60
    353c:	4698      	mov	r8, r3
    353e:	4694      	mov	ip, r2
    3540:	4464      	add	r4, ip
    3542:	6072      	str	r2, [r6, #4]
    3544:	60bc      	str	r4, [r7, #8]
    3546:	607b      	str	r3, [r7, #4]
    3548:	2b07      	cmp	r3, #7
    354a:	dd00      	ble.n	354e <_svfprintf_r+0x8d6>
    354c:	e2de      	b.n	3b0c <_svfprintf_r+0xe94>
    354e:	3608      	adds	r6, #8
    3550:	2200      	movs	r2, #0
    3552:	2300      	movs	r3, #0
    3554:	9816      	ldr	r0, [sp, #88]	; 0x58
    3556:	9915      	ldr	r1, [sp, #84]	; 0x54
    3558:	f003 fa54 	bl	6a04 <__aeabi_dcmpeq>
    355c:	2800      	cmp	r0, #0
    355e:	d000      	beq.n	3562 <_svfprintf_r+0x8ea>
    3560:	e1a4      	b.n	38ac <_svfprintf_r+0xc34>
    3562:	9d11      	ldr	r5, [sp, #68]	; 0x44
    3564:	9b14      	ldr	r3, [sp, #80]	; 0x50
    3566:	3501      	adds	r5, #1
    3568:	3b01      	subs	r3, #1
    356a:	6035      	str	r5, [r6, #0]
    356c:	6073      	str	r3, [r6, #4]
    356e:	18e4      	adds	r4, r4, r3
    3570:	2301      	movs	r3, #1
    3572:	469c      	mov	ip, r3
    3574:	44e0      	add	r8, ip
    3576:	4643      	mov	r3, r8
    3578:	60bc      	str	r4, [r7, #8]
    357a:	607b      	str	r3, [r7, #4]
    357c:	2b07      	cmp	r3, #7
    357e:	dd00      	ble.n	3582 <_svfprintf_r+0x90a>
    3580:	e08b      	b.n	369a <_svfprintf_r+0xa22>
    3582:	3608      	adds	r6, #8
    3584:	ab21      	add	r3, sp, #132	; 0x84
    3586:	6033      	str	r3, [r6, #0]
    3588:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    358a:	469c      	mov	ip, r3
    358c:	6073      	str	r3, [r6, #4]
    358e:	4643      	mov	r3, r8
    3590:	4464      	add	r4, ip
    3592:	3301      	adds	r3, #1
    3594:	60bc      	str	r4, [r7, #8]
    3596:	607b      	str	r3, [r7, #4]
    3598:	2b07      	cmp	r3, #7
    359a:	dc00      	bgt.n	359e <_svfprintf_r+0x926>
    359c:	e761      	b.n	3462 <_svfprintf_r+0x7ea>
    359e:	003a      	movs	r2, r7
    35a0:	9906      	ldr	r1, [sp, #24]
    35a2:	9809      	ldr	r0, [sp, #36]	; 0x24
    35a4:	f002 fe02 	bl	61ac <__ssprint_r>
    35a8:	2800      	cmp	r0, #0
    35aa:	d001      	beq.n	35b0 <_svfprintf_r+0x938>
    35ac:	f7ff fbeb 	bl	2d86 <_svfprintf_r+0x10e>
    35b0:	68bc      	ldr	r4, [r7, #8]
    35b2:	ae32      	add	r6, sp, #200	; 0xc8
    35b4:	e756      	b.n	3464 <_svfprintf_r+0x7ec>
    35b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    35b8:	2b65      	cmp	r3, #101	; 0x65
    35ba:	ddaa      	ble.n	3512 <_svfprintf_r+0x89a>
    35bc:	2200      	movs	r2, #0
    35be:	2300      	movs	r3, #0
    35c0:	9816      	ldr	r0, [sp, #88]	; 0x58
    35c2:	9915      	ldr	r1, [sp, #84]	; 0x54
    35c4:	f003 fa1e 	bl	6a04 <__aeabi_dcmpeq>
    35c8:	2800      	cmp	r0, #0
    35ca:	d100      	bne.n	35ce <_svfprintf_r+0x956>
    35cc:	e0e2      	b.n	3794 <_svfprintf_r+0xb1c>
    35ce:	4b6f      	ldr	r3, [pc, #444]	; (378c <_svfprintf_r+0xb14>)
    35d0:	3401      	adds	r4, #1
    35d2:	6033      	str	r3, [r6, #0]
    35d4:	2301      	movs	r3, #1
    35d6:	6073      	str	r3, [r6, #4]
    35d8:	687b      	ldr	r3, [r7, #4]
    35da:	60bc      	str	r4, [r7, #8]
    35dc:	3301      	adds	r3, #1
    35de:	607b      	str	r3, [r7, #4]
    35e0:	2b07      	cmp	r3, #7
    35e2:	dd00      	ble.n	35e6 <_svfprintf_r+0x96e>
    35e4:	e366      	b.n	3cb4 <_svfprintf_r+0x103c>
    35e6:	3608      	adds	r6, #8
    35e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    35ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
    35ec:	4293      	cmp	r3, r2
    35ee:	da00      	bge.n	35f2 <_svfprintf_r+0x97a>
    35f0:	e1a4      	b.n	393c <_svfprintf_r+0xcc4>
    35f2:	9b08      	ldr	r3, [sp, #32]
    35f4:	07db      	lsls	r3, r3, #31
    35f6:	d500      	bpl.n	35fa <_svfprintf_r+0x982>
    35f8:	e1a0      	b.n	393c <_svfprintf_r+0xcc4>
    35fa:	68bc      	ldr	r4, [r7, #8]
    35fc:	e732      	b.n	3464 <_svfprintf_r+0x7ec>
    35fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3600:	9a07      	ldr	r2, [sp, #28]
    3602:	1a9d      	subs	r5, r3, r2
    3604:	2d00      	cmp	r5, #0
    3606:	dc00      	bgt.n	360a <_svfprintf_r+0x992>
    3608:	e6d8      	b.n	33bc <_svfprintf_r+0x744>
    360a:	4a61      	ldr	r2, [pc, #388]	; (3790 <_svfprintf_r+0xb18>)
    360c:	687b      	ldr	r3, [r7, #4]
    360e:	4691      	mov	r9, r2
    3610:	2d10      	cmp	r5, #16
    3612:	dd25      	ble.n	3660 <_svfprintf_r+0x9e8>
    3614:	2210      	movs	r2, #16
    3616:	0021      	movs	r1, r4
    3618:	4690      	mov	r8, r2
    361a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    361c:	0032      	movs	r2, r6
    361e:	464e      	mov	r6, r9
    3620:	e003      	b.n	362a <_svfprintf_r+0x9b2>
    3622:	3d10      	subs	r5, #16
    3624:	3208      	adds	r2, #8
    3626:	2d10      	cmp	r5, #16
    3628:	dd17      	ble.n	365a <_svfprintf_r+0x9e2>
    362a:	4640      	mov	r0, r8
    362c:	3110      	adds	r1, #16
    362e:	3301      	adds	r3, #1
    3630:	6016      	str	r6, [r2, #0]
    3632:	6050      	str	r0, [r2, #4]
    3634:	60b9      	str	r1, [r7, #8]
    3636:	607b      	str	r3, [r7, #4]
    3638:	2b07      	cmp	r3, #7
    363a:	ddf2      	ble.n	3622 <_svfprintf_r+0x9aa>
    363c:	003a      	movs	r2, r7
    363e:	9906      	ldr	r1, [sp, #24]
    3640:	0020      	movs	r0, r4
    3642:	f002 fdb3 	bl	61ac <__ssprint_r>
    3646:	2800      	cmp	r0, #0
    3648:	d001      	beq.n	364e <_svfprintf_r+0x9d6>
    364a:	f7ff fb9c 	bl	2d86 <_svfprintf_r+0x10e>
    364e:	3d10      	subs	r5, #16
    3650:	68b9      	ldr	r1, [r7, #8]
    3652:	687b      	ldr	r3, [r7, #4]
    3654:	aa32      	add	r2, sp, #200	; 0xc8
    3656:	2d10      	cmp	r5, #16
    3658:	dce7      	bgt.n	362a <_svfprintf_r+0x9b2>
    365a:	46b1      	mov	r9, r6
    365c:	000c      	movs	r4, r1
    365e:	0016      	movs	r6, r2
    3660:	464a      	mov	r2, r9
    3662:	1964      	adds	r4, r4, r5
    3664:	3301      	adds	r3, #1
    3666:	6032      	str	r2, [r6, #0]
    3668:	6075      	str	r5, [r6, #4]
    366a:	60bc      	str	r4, [r7, #8]
    366c:	607b      	str	r3, [r7, #4]
    366e:	2b07      	cmp	r3, #7
    3670:	dd00      	ble.n	3674 <_svfprintf_r+0x9fc>
    3672:	e27e      	b.n	3b72 <_svfprintf_r+0xefa>
    3674:	3608      	adds	r6, #8
    3676:	e6a1      	b.n	33bc <_svfprintf_r+0x744>
    3678:	2301      	movs	r3, #1
    367a:	9a08      	ldr	r2, [sp, #32]
    367c:	4213      	tst	r3, r2
    367e:	d000      	beq.n	3682 <_svfprintf_r+0xa0a>
    3680:	e74b      	b.n	351a <_svfprintf_r+0x8a2>
    3682:	6073      	str	r3, [r6, #4]
    3684:	687b      	ldr	r3, [r7, #4]
    3686:	9a11      	ldr	r2, [sp, #68]	; 0x44
    3688:	3301      	adds	r3, #1
    368a:	3401      	adds	r4, #1
    368c:	6032      	str	r2, [r6, #0]
    368e:	60bc      	str	r4, [r7, #8]
    3690:	4698      	mov	r8, r3
    3692:	607b      	str	r3, [r7, #4]
    3694:	2b07      	cmp	r3, #7
    3696:	dc00      	bgt.n	369a <_svfprintf_r+0xa22>
    3698:	e773      	b.n	3582 <_svfprintf_r+0x90a>
    369a:	003a      	movs	r2, r7
    369c:	9906      	ldr	r1, [sp, #24]
    369e:	9809      	ldr	r0, [sp, #36]	; 0x24
    36a0:	f002 fd84 	bl	61ac <__ssprint_r>
    36a4:	2800      	cmp	r0, #0
    36a6:	d001      	beq.n	36ac <_svfprintf_r+0xa34>
    36a8:	f7ff fb6d 	bl	2d86 <_svfprintf_r+0x10e>
    36ac:	687b      	ldr	r3, [r7, #4]
    36ae:	68bc      	ldr	r4, [r7, #8]
    36b0:	4698      	mov	r8, r3
    36b2:	ae32      	add	r6, sp, #200	; 0xc8
    36b4:	e766      	b.n	3584 <_svfprintf_r+0x90c>
    36b6:	003a      	movs	r2, r7
    36b8:	9906      	ldr	r1, [sp, #24]
    36ba:	9809      	ldr	r0, [sp, #36]	; 0x24
    36bc:	f002 fd76 	bl	61ac <__ssprint_r>
    36c0:	2800      	cmp	r0, #0
    36c2:	d100      	bne.n	36c6 <_svfprintf_r+0xa4e>
    36c4:	e720      	b.n	3508 <_svfprintf_r+0x890>
    36c6:	f7ff fb5e 	bl	2d86 <_svfprintf_r+0x10e>
    36ca:	9c08      	ldr	r4, [sp, #32]
    36cc:	2b01      	cmp	r3, #1
    36ce:	d100      	bne.n	36d2 <_svfprintf_r+0xa5a>
    36d0:	e184      	b.n	39dc <_svfprintf_r+0xd64>
    36d2:	2b02      	cmp	r3, #2
    36d4:	d129      	bne.n	372a <_svfprintf_r+0xab2>
    36d6:	9408      	str	r4, [sp, #32]
    36d8:	2300      	movs	r3, #0
    36da:	2400      	movs	r4, #0
    36dc:	930c      	str	r3, [sp, #48]	; 0x30
    36de:	940d      	str	r4, [sp, #52]	; 0x34
    36e0:	e4c5      	b.n	306e <_svfprintf_r+0x3f6>
    36e2:	003a      	movs	r2, r7
    36e4:	9906      	ldr	r1, [sp, #24]
    36e6:	9809      	ldr	r0, [sp, #36]	; 0x24
    36e8:	f002 fd60 	bl	61ac <__ssprint_r>
    36ec:	2800      	cmp	r0, #0
    36ee:	d001      	beq.n	36f4 <_svfprintf_r+0xa7c>
    36f0:	f7ff fb49 	bl	2d86 <_svfprintf_r+0x10e>
    36f4:	68bc      	ldr	r4, [r7, #8]
    36f6:	ae32      	add	r6, sp, #200	; 0xc8
    36f8:	e6a2      	b.n	3440 <_svfprintf_r+0x7c8>
    36fa:	003a      	movs	r2, r7
    36fc:	9906      	ldr	r1, [sp, #24]
    36fe:	9809      	ldr	r0, [sp, #36]	; 0x24
    3700:	f002 fd54 	bl	61ac <__ssprint_r>
    3704:	2800      	cmp	r0, #0
    3706:	d001      	beq.n	370c <_svfprintf_r+0xa94>
    3708:	f7ff fb3d 	bl	2d86 <_svfprintf_r+0x10e>
    370c:	68bc      	ldr	r4, [r7, #8]
    370e:	ae32      	add	r6, sp, #200	; 0xc8
    3710:	e640      	b.n	3394 <_svfprintf_r+0x71c>
    3712:	003a      	movs	r2, r7
    3714:	9906      	ldr	r1, [sp, #24]
    3716:	9809      	ldr	r0, [sp, #36]	; 0x24
    3718:	f002 fd48 	bl	61ac <__ssprint_r>
    371c:	2800      	cmp	r0, #0
    371e:	d001      	beq.n	3724 <_svfprintf_r+0xaac>
    3720:	f7ff fb31 	bl	2d86 <_svfprintf_r+0x10e>
    3724:	68bc      	ldr	r4, [r7, #8]
    3726:	ae32      	add	r6, sp, #200	; 0xc8
    3728:	e644      	b.n	33b4 <_svfprintf_r+0x73c>
    372a:	9408      	str	r4, [sp, #32]
    372c:	2300      	movs	r3, #0
    372e:	2400      	movs	r4, #0
    3730:	930c      	str	r3, [sp, #48]	; 0x30
    3732:	940d      	str	r4, [sp, #52]	; 0x34
    3734:	980c      	ldr	r0, [sp, #48]	; 0x30
    3736:	990d      	ldr	r1, [sp, #52]	; 0x34
    3738:	465b      	mov	r3, fp
    373a:	aa32      	add	r2, sp, #200	; 0xc8
    373c:	9307      	str	r3, [sp, #28]
    373e:	4691      	mov	r9, r2
    3740:	46b3      	mov	fp, r6
    3742:	e000      	b.n	3746 <_svfprintf_r+0xace>
    3744:	46a1      	mov	r9, r4
    3746:	074a      	lsls	r2, r1, #29
    3748:	4694      	mov	ip, r2
    374a:	464b      	mov	r3, r9
    374c:	4665      	mov	r5, ip
    374e:	1e5c      	subs	r4, r3, #1
    3750:	08c6      	lsrs	r6, r0, #3
    3752:	2307      	movs	r3, #7
    3754:	08ca      	lsrs	r2, r1, #3
    3756:	4335      	orrs	r5, r6
    3758:	0011      	movs	r1, r2
    375a:	002a      	movs	r2, r5
    375c:	4003      	ands	r3, r0
    375e:	3330      	adds	r3, #48	; 0x30
    3760:	7023      	strb	r3, [r4, #0]
    3762:	0028      	movs	r0, r5
    3764:	430a      	orrs	r2, r1
    3766:	d1ed      	bne.n	3744 <_svfprintf_r+0xacc>
    3768:	900c      	str	r0, [sp, #48]	; 0x30
    376a:	910d      	str	r1, [sp, #52]	; 0x34
    376c:	9907      	ldr	r1, [sp, #28]
    376e:	465e      	mov	r6, fp
    3770:	468b      	mov	fp, r1
    3772:	9908      	ldr	r1, [sp, #32]
    3774:	464a      	mov	r2, r9
    3776:	9411      	str	r4, [sp, #68]	; 0x44
    3778:	07c9      	lsls	r1, r1, #31
    377a:	d500      	bpl.n	377e <_svfprintf_r+0xb06>
    377c:	e13d      	b.n	39fa <_svfprintf_r+0xd82>
    377e:	ab32      	add	r3, sp, #200	; 0xc8
    3780:	1b1b      	subs	r3, r3, r4
    3782:	930e      	str	r3, [sp, #56]	; 0x38
    3784:	f7ff fb88 	bl	2e98 <_svfprintf_r+0x220>
    3788:	000082a8 	.word	0x000082a8
    378c:	000082a4 	.word	0x000082a4
    3790:	000082b8 	.word	0x000082b8
    3794:	981f      	ldr	r0, [sp, #124]	; 0x7c
    3796:	2800      	cmp	r0, #0
    3798:	dc00      	bgt.n	379c <_svfprintf_r+0xb24>
    379a:	e296      	b.n	3cca <_svfprintf_r+0x1052>
    379c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    379e:	9914      	ldr	r1, [sp, #80]	; 0x50
    37a0:	0013      	movs	r3, r2
    37a2:	4690      	mov	r8, r2
    37a4:	428b      	cmp	r3, r1
    37a6:	dd00      	ble.n	37aa <_svfprintf_r+0xb32>
    37a8:	4688      	mov	r8, r1
    37aa:	4643      	mov	r3, r8
    37ac:	2b00      	cmp	r3, #0
    37ae:	dd0c      	ble.n	37ca <_svfprintf_r+0xb52>
    37b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    37b2:	4444      	add	r4, r8
    37b4:	6033      	str	r3, [r6, #0]
    37b6:	4643      	mov	r3, r8
    37b8:	6073      	str	r3, [r6, #4]
    37ba:	687b      	ldr	r3, [r7, #4]
    37bc:	60bc      	str	r4, [r7, #8]
    37be:	3301      	adds	r3, #1
    37c0:	607b      	str	r3, [r7, #4]
    37c2:	2b07      	cmp	r3, #7
    37c4:	dd00      	ble.n	37c8 <_svfprintf_r+0xb50>
    37c6:	e3b7      	b.n	3f38 <_svfprintf_r+0x12c0>
    37c8:	3608      	adds	r6, #8
    37ca:	4643      	mov	r3, r8
    37cc:	43db      	mvns	r3, r3
    37ce:	4642      	mov	r2, r8
    37d0:	17db      	asrs	r3, r3, #31
    37d2:	4013      	ands	r3, r2
    37d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    37d6:	1ad3      	subs	r3, r2, r3
    37d8:	4698      	mov	r8, r3
    37da:	2b00      	cmp	r3, #0
    37dc:	dc00      	bgt.n	37e0 <_svfprintf_r+0xb68>
    37de:	e128      	b.n	3a32 <_svfprintf_r+0xdba>
    37e0:	2b10      	cmp	r3, #16
    37e2:	dc01      	bgt.n	37e8 <_svfprintf_r+0xb70>
    37e4:	f000 fce7 	bl	41b6 <_svfprintf_r+0x153e>
    37e8:	4acf      	ldr	r2, [pc, #828]	; (3b28 <_svfprintf_r+0xeb0>)
    37ea:	0021      	movs	r1, r4
    37ec:	4691      	mov	r9, r2
    37ee:	2210      	movs	r2, #16
    37f0:	687b      	ldr	r3, [r7, #4]
    37f2:	4692      	mov	sl, r2
    37f4:	9d09      	ldr	r5, [sp, #36]	; 0x24
    37f6:	0032      	movs	r2, r6
    37f8:	464c      	mov	r4, r9
    37fa:	4646      	mov	r6, r8
    37fc:	e004      	b.n	3808 <_svfprintf_r+0xb90>
    37fe:	3208      	adds	r2, #8
    3800:	3e10      	subs	r6, #16
    3802:	2e10      	cmp	r6, #16
    3804:	dc00      	bgt.n	3808 <_svfprintf_r+0xb90>
    3806:	e104      	b.n	3a12 <_svfprintf_r+0xd9a>
    3808:	4650      	mov	r0, sl
    380a:	3110      	adds	r1, #16
    380c:	3301      	adds	r3, #1
    380e:	6014      	str	r4, [r2, #0]
    3810:	6050      	str	r0, [r2, #4]
    3812:	60b9      	str	r1, [r7, #8]
    3814:	607b      	str	r3, [r7, #4]
    3816:	2b07      	cmp	r3, #7
    3818:	ddf1      	ble.n	37fe <_svfprintf_r+0xb86>
    381a:	003a      	movs	r2, r7
    381c:	9906      	ldr	r1, [sp, #24]
    381e:	0028      	movs	r0, r5
    3820:	f002 fcc4 	bl	61ac <__ssprint_r>
    3824:	2800      	cmp	r0, #0
    3826:	d001      	beq.n	382c <_svfprintf_r+0xbb4>
    3828:	f7ff faad 	bl	2d86 <_svfprintf_r+0x10e>
    382c:	68b9      	ldr	r1, [r7, #8]
    382e:	687b      	ldr	r3, [r7, #4]
    3830:	aa32      	add	r2, sp, #200	; 0xc8
    3832:	e7e5      	b.n	3800 <_svfprintf_r+0xb88>
    3834:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3836:	2b00      	cmp	r3, #0
    3838:	d100      	bne.n	383c <_svfprintf_r+0xbc4>
    383a:	e0ca      	b.n	39d2 <_svfprintf_r+0xd5a>
    383c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    383e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    3840:	ab32      	add	r3, sp, #200	; 0xc8
    3842:	46b1      	mov	r9, r6
    3844:	001e      	movs	r6, r3
    3846:	0020      	movs	r0, r4
    3848:	0029      	movs	r1, r5
    384a:	220a      	movs	r2, #10
    384c:	2300      	movs	r3, #0
    384e:	f7fe fc4b 	bl	20e8 <__aeabi_uldivmod>
    3852:	3e01      	subs	r6, #1
    3854:	3230      	adds	r2, #48	; 0x30
    3856:	7032      	strb	r2, [r6, #0]
    3858:	2300      	movs	r3, #0
    385a:	0020      	movs	r0, r4
    385c:	0029      	movs	r1, r5
    385e:	220a      	movs	r2, #10
    3860:	f7fe fc42 	bl	20e8 <__aeabi_uldivmod>
    3864:	0003      	movs	r3, r0
    3866:	0004      	movs	r4, r0
    3868:	000d      	movs	r5, r1
    386a:	430b      	orrs	r3, r1
    386c:	d1eb      	bne.n	3846 <_svfprintf_r+0xbce>
    386e:	0032      	movs	r2, r6
    3870:	ab32      	add	r3, sp, #200	; 0xc8
    3872:	1a9b      	subs	r3, r3, r2
    3874:	9611      	str	r6, [sp, #68]	; 0x44
    3876:	940c      	str	r4, [sp, #48]	; 0x30
    3878:	950d      	str	r5, [sp, #52]	; 0x34
    387a:	464e      	mov	r6, r9
    387c:	930e      	str	r3, [sp, #56]	; 0x38
    387e:	f7ff fb0b 	bl	2e98 <_svfprintf_r+0x220>
    3882:	2300      	movs	r3, #0
    3884:	930e      	str	r3, [sp, #56]	; 0x38
    3886:	ab32      	add	r3, sp, #200	; 0xc8
    3888:	9311      	str	r3, [sp, #68]	; 0x44
    388a:	f7ff fb05 	bl	2e98 <_svfprintf_r+0x220>
    388e:	003a      	movs	r2, r7
    3890:	9906      	ldr	r1, [sp, #24]
    3892:	9809      	ldr	r0, [sp, #36]	; 0x24
    3894:	f002 fc8a 	bl	61ac <__ssprint_r>
    3898:	2800      	cmp	r0, #0
    389a:	d001      	beq.n	38a0 <_svfprintf_r+0xc28>
    389c:	f7ff fa73 	bl	2d86 <_svfprintf_r+0x10e>
    38a0:	ab16      	add	r3, sp, #88	; 0x58
    38a2:	7fdb      	ldrb	r3, [r3, #31]
    38a4:	68bc      	ldr	r4, [r7, #8]
    38a6:	4698      	mov	r8, r3
    38a8:	ae32      	add	r6, sp, #200	; 0xc8
    38aa:	e560      	b.n	336e <_svfprintf_r+0x6f6>
    38ac:	9b14      	ldr	r3, [sp, #80]	; 0x50
    38ae:	1e5d      	subs	r5, r3, #1
    38b0:	2d00      	cmp	r5, #0
    38b2:	dc00      	bgt.n	38b6 <_svfprintf_r+0xc3e>
    38b4:	e666      	b.n	3584 <_svfprintf_r+0x90c>
    38b6:	4b9c      	ldr	r3, [pc, #624]	; (3b28 <_svfprintf_r+0xeb0>)
    38b8:	4699      	mov	r9, r3
    38ba:	2d10      	cmp	r5, #16
    38bc:	dd29      	ble.n	3912 <_svfprintf_r+0xc9a>
    38be:	2310      	movs	r3, #16
    38c0:	0032      	movs	r2, r6
    38c2:	469a      	mov	sl, r3
    38c4:	002e      	movs	r6, r5
    38c6:	0021      	movs	r1, r4
    38c8:	4643      	mov	r3, r8
    38ca:	9c09      	ldr	r4, [sp, #36]	; 0x24
    38cc:	464d      	mov	r5, r9
    38ce:	e003      	b.n	38d8 <_svfprintf_r+0xc60>
    38d0:	3e10      	subs	r6, #16
    38d2:	3208      	adds	r2, #8
    38d4:	2e10      	cmp	r6, #16
    38d6:	dd17      	ble.n	3908 <_svfprintf_r+0xc90>
    38d8:	4650      	mov	r0, sl
    38da:	3110      	adds	r1, #16
    38dc:	3301      	adds	r3, #1
    38de:	6015      	str	r5, [r2, #0]
    38e0:	6050      	str	r0, [r2, #4]
    38e2:	60b9      	str	r1, [r7, #8]
    38e4:	607b      	str	r3, [r7, #4]
    38e6:	2b07      	cmp	r3, #7
    38e8:	ddf2      	ble.n	38d0 <_svfprintf_r+0xc58>
    38ea:	003a      	movs	r2, r7
    38ec:	9906      	ldr	r1, [sp, #24]
    38ee:	0020      	movs	r0, r4
    38f0:	f002 fc5c 	bl	61ac <__ssprint_r>
    38f4:	2800      	cmp	r0, #0
    38f6:	d001      	beq.n	38fc <_svfprintf_r+0xc84>
    38f8:	f7ff fa45 	bl	2d86 <_svfprintf_r+0x10e>
    38fc:	3e10      	subs	r6, #16
    38fe:	68b9      	ldr	r1, [r7, #8]
    3900:	687b      	ldr	r3, [r7, #4]
    3902:	aa32      	add	r2, sp, #200	; 0xc8
    3904:	2e10      	cmp	r6, #16
    3906:	dce7      	bgt.n	38d8 <_svfprintf_r+0xc60>
    3908:	46a9      	mov	r9, r5
    390a:	000c      	movs	r4, r1
    390c:	0035      	movs	r5, r6
    390e:	4698      	mov	r8, r3
    3910:	0016      	movs	r6, r2
    3912:	464b      	mov	r3, r9
    3914:	6075      	str	r5, [r6, #4]
    3916:	6033      	str	r3, [r6, #0]
    3918:	1964      	adds	r4, r4, r5
    391a:	e629      	b.n	3570 <_svfprintf_r+0x8f8>
    391c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    391e:	681a      	ldr	r2, [r3, #0]
    3920:	f7ff fbfb 	bl	311a <_svfprintf_r+0x4a2>
    3924:	6813      	ldr	r3, [r2, #0]
    3926:	9307      	str	r3, [sp, #28]
    3928:	f7ff fa82 	bl	2e30 <_svfprintf_r+0x1b8>
    392c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    392e:	681a      	ldr	r2, [r3, #0]
    3930:	f7ff fb84 	bl	303c <_svfprintf_r+0x3c4>
    3934:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    3936:	681a      	ldr	r2, [r3, #0]
    3938:	f7ff fbd1 	bl	30de <_svfprintf_r+0x466>
    393c:	9b19      	ldr	r3, [sp, #100]	; 0x64
    393e:	68ba      	ldr	r2, [r7, #8]
    3940:	6033      	str	r3, [r6, #0]
    3942:	9b18      	ldr	r3, [sp, #96]	; 0x60
    3944:	469c      	mov	ip, r3
    3946:	6073      	str	r3, [r6, #4]
    3948:	687b      	ldr	r3, [r7, #4]
    394a:	4462      	add	r2, ip
    394c:	3301      	adds	r3, #1
    394e:	0014      	movs	r4, r2
    3950:	60ba      	str	r2, [r7, #8]
    3952:	607b      	str	r3, [r7, #4]
    3954:	2b07      	cmp	r3, #7
    3956:	dd00      	ble.n	395a <_svfprintf_r+0xce2>
    3958:	e202      	b.n	3d60 <_svfprintf_r+0x10e8>
    395a:	3608      	adds	r6, #8
    395c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    395e:	1e5d      	subs	r5, r3, #1
    3960:	2d00      	cmp	r5, #0
    3962:	dc00      	bgt.n	3966 <_svfprintf_r+0xcee>
    3964:	e57e      	b.n	3464 <_svfprintf_r+0x7ec>
    3966:	4a70      	ldr	r2, [pc, #448]	; (3b28 <_svfprintf_r+0xeb0>)
    3968:	687b      	ldr	r3, [r7, #4]
    396a:	4691      	mov	r9, r2
    396c:	2d10      	cmp	r5, #16
    396e:	dd25      	ble.n	39bc <_svfprintf_r+0xd44>
    3970:	2210      	movs	r2, #16
    3972:	0021      	movs	r1, r4
    3974:	4690      	mov	r8, r2
    3976:	9c09      	ldr	r4, [sp, #36]	; 0x24
    3978:	0032      	movs	r2, r6
    397a:	002e      	movs	r6, r5
    397c:	464d      	mov	r5, r9
    397e:	e003      	b.n	3988 <_svfprintf_r+0xd10>
    3980:	3208      	adds	r2, #8
    3982:	3e10      	subs	r6, #16
    3984:	2e10      	cmp	r6, #16
    3986:	dd15      	ble.n	39b4 <_svfprintf_r+0xd3c>
    3988:	4640      	mov	r0, r8
    398a:	3110      	adds	r1, #16
    398c:	3301      	adds	r3, #1
    398e:	6015      	str	r5, [r2, #0]
    3990:	6050      	str	r0, [r2, #4]
    3992:	60b9      	str	r1, [r7, #8]
    3994:	607b      	str	r3, [r7, #4]
    3996:	2b07      	cmp	r3, #7
    3998:	ddf2      	ble.n	3980 <_svfprintf_r+0xd08>
    399a:	003a      	movs	r2, r7
    399c:	9906      	ldr	r1, [sp, #24]
    399e:	0020      	movs	r0, r4
    39a0:	f002 fc04 	bl	61ac <__ssprint_r>
    39a4:	2800      	cmp	r0, #0
    39a6:	d001      	beq.n	39ac <_svfprintf_r+0xd34>
    39a8:	f7ff f9ed 	bl	2d86 <_svfprintf_r+0x10e>
    39ac:	68b9      	ldr	r1, [r7, #8]
    39ae:	687b      	ldr	r3, [r7, #4]
    39b0:	aa32      	add	r2, sp, #200	; 0xc8
    39b2:	e7e6      	b.n	3982 <_svfprintf_r+0xd0a>
    39b4:	46a9      	mov	r9, r5
    39b6:	000c      	movs	r4, r1
    39b8:	0035      	movs	r5, r6
    39ba:	0016      	movs	r6, r2
    39bc:	464a      	mov	r2, r9
    39be:	1964      	adds	r4, r4, r5
    39c0:	3301      	adds	r3, #1
    39c2:	6032      	str	r2, [r6, #0]
    39c4:	6075      	str	r5, [r6, #4]
    39c6:	60bc      	str	r4, [r7, #8]
    39c8:	607b      	str	r3, [r7, #4]
    39ca:	2b07      	cmp	r3, #7
    39cc:	dc00      	bgt.n	39d0 <_svfprintf_r+0xd58>
    39ce:	e548      	b.n	3462 <_svfprintf_r+0x7ea>
    39d0:	e5e5      	b.n	359e <_svfprintf_r+0x926>
    39d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    39d4:	2b09      	cmp	r3, #9
    39d6:	d900      	bls.n	39da <_svfprintf_r+0xd62>
    39d8:	e730      	b.n	383c <_svfprintf_r+0xbc4>
    39da:	9c08      	ldr	r4, [sp, #32]
    39dc:	2227      	movs	r2, #39	; 0x27
    39de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    39e0:	a928      	add	r1, sp, #160	; 0xa0
    39e2:	3330      	adds	r3, #48	; 0x30
    39e4:	548b      	strb	r3, [r1, r2]
    39e6:	2301      	movs	r3, #1
    39e8:	aa16      	add	r2, sp, #88	; 0x58
    39ea:	4694      	mov	ip, r2
    39ec:	930e      	str	r3, [sp, #56]	; 0x38
    39ee:	336e      	adds	r3, #110	; 0x6e
    39f0:	4463      	add	r3, ip
    39f2:	9408      	str	r4, [sp, #32]
    39f4:	9311      	str	r3, [sp, #68]	; 0x44
    39f6:	f7ff fa4f 	bl	2e98 <_svfprintf_r+0x220>
    39fa:	2b30      	cmp	r3, #48	; 0x30
    39fc:	d100      	bne.n	3a00 <_svfprintf_r+0xd88>
    39fe:	e20b      	b.n	3e18 <_svfprintf_r+0x11a0>
    3a00:	2330      	movs	r3, #48	; 0x30
    3a02:	3a02      	subs	r2, #2
    3a04:	7013      	strb	r3, [r2, #0]
    3a06:	ab32      	add	r3, sp, #200	; 0xc8
    3a08:	1a9b      	subs	r3, r3, r2
    3a0a:	930e      	str	r3, [sp, #56]	; 0x38
    3a0c:	9211      	str	r2, [sp, #68]	; 0x44
    3a0e:	f7ff fa43 	bl	2e98 <_svfprintf_r+0x220>
    3a12:	46b0      	mov	r8, r6
    3a14:	46a1      	mov	r9, r4
    3a16:	0016      	movs	r6, r2
    3a18:	000c      	movs	r4, r1
    3a1a:	464a      	mov	r2, r9
    3a1c:	6032      	str	r2, [r6, #0]
    3a1e:	4642      	mov	r2, r8
    3a20:	4444      	add	r4, r8
    3a22:	3301      	adds	r3, #1
    3a24:	6072      	str	r2, [r6, #4]
    3a26:	60bc      	str	r4, [r7, #8]
    3a28:	607b      	str	r3, [r7, #4]
    3a2a:	2b07      	cmp	r3, #7
    3a2c:	dd00      	ble.n	3a30 <_svfprintf_r+0xdb8>
    3a2e:	e29c      	b.n	3f6a <_svfprintf_r+0x12f2>
    3a30:	3608      	adds	r6, #8
    3a32:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    3a34:	9a14      	ldr	r2, [sp, #80]	; 0x50
    3a36:	4293      	cmp	r3, r2
    3a38:	db4c      	blt.n	3ad4 <_svfprintf_r+0xe5c>
    3a3a:	9a08      	ldr	r2, [sp, #32]
    3a3c:	07d2      	lsls	r2, r2, #31
    3a3e:	d449      	bmi.n	3ad4 <_svfprintf_r+0xe5c>
    3a40:	9a14      	ldr	r2, [sp, #80]	; 0x50
    3a42:	9913      	ldr	r1, [sp, #76]	; 0x4c
    3a44:	1ad3      	subs	r3, r2, r3
    3a46:	1a52      	subs	r2, r2, r1
    3a48:	4690      	mov	r8, r2
    3a4a:	429a      	cmp	r2, r3
    3a4c:	dd00      	ble.n	3a50 <_svfprintf_r+0xdd8>
    3a4e:	4698      	mov	r8, r3
    3a50:	4642      	mov	r2, r8
    3a52:	2a00      	cmp	r2, #0
    3a54:	dd0f      	ble.n	3a76 <_svfprintf_r+0xdfe>
    3a56:	9913      	ldr	r1, [sp, #76]	; 0x4c
    3a58:	9a11      	ldr	r2, [sp, #68]	; 0x44
    3a5a:	468c      	mov	ip, r1
    3a5c:	4462      	add	r2, ip
    3a5e:	6032      	str	r2, [r6, #0]
    3a60:	4642      	mov	r2, r8
    3a62:	6072      	str	r2, [r6, #4]
    3a64:	687a      	ldr	r2, [r7, #4]
    3a66:	4444      	add	r4, r8
    3a68:	3201      	adds	r2, #1
    3a6a:	60bc      	str	r4, [r7, #8]
    3a6c:	607a      	str	r2, [r7, #4]
    3a6e:	2a07      	cmp	r2, #7
    3a70:	dd00      	ble.n	3a74 <_svfprintf_r+0xdfc>
    3a72:	e286      	b.n	3f82 <_svfprintf_r+0x130a>
    3a74:	3608      	adds	r6, #8
    3a76:	4642      	mov	r2, r8
    3a78:	43d5      	mvns	r5, r2
    3a7a:	17ed      	asrs	r5, r5, #31
    3a7c:	4015      	ands	r5, r2
    3a7e:	1b5d      	subs	r5, r3, r5
    3a80:	2d00      	cmp	r5, #0
    3a82:	dc00      	bgt.n	3a86 <_svfprintf_r+0xe0e>
    3a84:	e4ee      	b.n	3464 <_svfprintf_r+0x7ec>
    3a86:	4a28      	ldr	r2, [pc, #160]	; (3b28 <_svfprintf_r+0xeb0>)
    3a88:	687b      	ldr	r3, [r7, #4]
    3a8a:	4691      	mov	r9, r2
    3a8c:	2d10      	cmp	r5, #16
    3a8e:	dd95      	ble.n	39bc <_svfprintf_r+0xd44>
    3a90:	2210      	movs	r2, #16
    3a92:	0021      	movs	r1, r4
    3a94:	4690      	mov	r8, r2
    3a96:	9c09      	ldr	r4, [sp, #36]	; 0x24
    3a98:	0032      	movs	r2, r6
    3a9a:	002e      	movs	r6, r5
    3a9c:	464d      	mov	r5, r9
    3a9e:	e003      	b.n	3aa8 <_svfprintf_r+0xe30>
    3aa0:	3208      	adds	r2, #8
    3aa2:	3e10      	subs	r6, #16
    3aa4:	2e10      	cmp	r6, #16
    3aa6:	dd85      	ble.n	39b4 <_svfprintf_r+0xd3c>
    3aa8:	4640      	mov	r0, r8
    3aaa:	3110      	adds	r1, #16
    3aac:	3301      	adds	r3, #1
    3aae:	6015      	str	r5, [r2, #0]
    3ab0:	6050      	str	r0, [r2, #4]
    3ab2:	60b9      	str	r1, [r7, #8]
    3ab4:	607b      	str	r3, [r7, #4]
    3ab6:	2b07      	cmp	r3, #7
    3ab8:	ddf2      	ble.n	3aa0 <_svfprintf_r+0xe28>
    3aba:	003a      	movs	r2, r7
    3abc:	9906      	ldr	r1, [sp, #24]
    3abe:	0020      	movs	r0, r4
    3ac0:	f002 fb74 	bl	61ac <__ssprint_r>
    3ac4:	2800      	cmp	r0, #0
    3ac6:	d001      	beq.n	3acc <_svfprintf_r+0xe54>
    3ac8:	f7ff f95d 	bl	2d86 <_svfprintf_r+0x10e>
    3acc:	68b9      	ldr	r1, [r7, #8]
    3ace:	687b      	ldr	r3, [r7, #4]
    3ad0:	aa32      	add	r2, sp, #200	; 0xc8
    3ad2:	e7e6      	b.n	3aa2 <_svfprintf_r+0xe2a>
    3ad4:	9a19      	ldr	r2, [sp, #100]	; 0x64
    3ad6:	6032      	str	r2, [r6, #0]
    3ad8:	9a18      	ldr	r2, [sp, #96]	; 0x60
    3ada:	4694      	mov	ip, r2
    3adc:	6072      	str	r2, [r6, #4]
    3ade:	687a      	ldr	r2, [r7, #4]
    3ae0:	4464      	add	r4, ip
    3ae2:	3201      	adds	r2, #1
    3ae4:	60bc      	str	r4, [r7, #8]
    3ae6:	607a      	str	r2, [r7, #4]
    3ae8:	2a07      	cmp	r2, #7
    3aea:	dd00      	ble.n	3aee <_svfprintf_r+0xe76>
    3aec:	e230      	b.n	3f50 <_svfprintf_r+0x12d8>
    3aee:	3608      	adds	r6, #8
    3af0:	e7a6      	b.n	3a40 <_svfprintf_r+0xdc8>
    3af2:	003a      	movs	r2, r7
    3af4:	9906      	ldr	r1, [sp, #24]
    3af6:	9809      	ldr	r0, [sp, #36]	; 0x24
    3af8:	f002 fb58 	bl	61ac <__ssprint_r>
    3afc:	2800      	cmp	r0, #0
    3afe:	d001      	beq.n	3b04 <_svfprintf_r+0xe8c>
    3b00:	f7ff f941 	bl	2d86 <_svfprintf_r+0x10e>
    3b04:	68bc      	ldr	r4, [r7, #8]
    3b06:	687b      	ldr	r3, [r7, #4]
    3b08:	ae32      	add	r6, sp, #200	; 0xc8
    3b0a:	e513      	b.n	3534 <_svfprintf_r+0x8bc>
    3b0c:	003a      	movs	r2, r7
    3b0e:	9906      	ldr	r1, [sp, #24]
    3b10:	9809      	ldr	r0, [sp, #36]	; 0x24
    3b12:	f002 fb4b 	bl	61ac <__ssprint_r>
    3b16:	2800      	cmp	r0, #0
    3b18:	d001      	beq.n	3b1e <_svfprintf_r+0xea6>
    3b1a:	f7ff f934 	bl	2d86 <_svfprintf_r+0x10e>
    3b1e:	687b      	ldr	r3, [r7, #4]
    3b20:	68bc      	ldr	r4, [r7, #8]
    3b22:	4698      	mov	r8, r3
    3b24:	ae32      	add	r6, sp, #200	; 0xc8
    3b26:	e513      	b.n	3550 <_svfprintf_r+0x8d8>
    3b28:	000082b8 	.word	0x000082b8
    3b2c:	2307      	movs	r3, #7
    3b2e:	3207      	adds	r2, #7
    3b30:	439a      	bics	r2, r3
    3b32:	3301      	adds	r3, #1
    3b34:	469c      	mov	ip, r3
    3b36:	4494      	add	ip, r2
    3b38:	4663      	mov	r3, ip
    3b3a:	930f      	str	r3, [sp, #60]	; 0x3c
    3b3c:	6853      	ldr	r3, [r2, #4]
    3b3e:	6812      	ldr	r2, [r2, #0]
    3b40:	930d      	str	r3, [sp, #52]	; 0x34
    3b42:	920c      	str	r2, [sp, #48]	; 0x30
    3b44:	2b00      	cmp	r3, #0
    3b46:	db01      	blt.n	3b4c <_svfprintf_r+0xed4>
    3b48:	f7ff f97a 	bl	2e40 <_svfprintf_r+0x1c8>
    3b4c:	980c      	ldr	r0, [sp, #48]	; 0x30
    3b4e:	990d      	ldr	r1, [sp, #52]	; 0x34
    3b50:	2300      	movs	r3, #0
    3b52:	4242      	negs	r2, r0
    3b54:	418b      	sbcs	r3, r1
    3b56:	0011      	movs	r1, r2
    3b58:	001a      	movs	r2, r3
    3b5a:	232d      	movs	r3, #45	; 0x2d
    3b5c:	a816      	add	r0, sp, #88	; 0x58
    3b5e:	77c3      	strb	r3, [r0, #31]
    3b60:	0008      	movs	r0, r1
    3b62:	4310      	orrs	r0, r2
    3b64:	910c      	str	r1, [sp, #48]	; 0x30
    3b66:	920d      	str	r2, [sp, #52]	; 0x34
    3b68:	4698      	mov	r8, r3
    3b6a:	0002      	movs	r2, r0
    3b6c:	3b2c      	subs	r3, #44	; 0x2c
    3b6e:	f7ff f970 	bl	2e52 <_svfprintf_r+0x1da>
    3b72:	003a      	movs	r2, r7
    3b74:	9906      	ldr	r1, [sp, #24]
    3b76:	9809      	ldr	r0, [sp, #36]	; 0x24
    3b78:	f002 fb18 	bl	61ac <__ssprint_r>
    3b7c:	2800      	cmp	r0, #0
    3b7e:	d001      	beq.n	3b84 <_svfprintf_r+0xf0c>
    3b80:	f7ff f901 	bl	2d86 <_svfprintf_r+0x10e>
    3b84:	68bc      	ldr	r4, [r7, #8]
    3b86:	ae32      	add	r6, sp, #200	; 0xc8
    3b88:	e418      	b.n	33bc <_svfprintf_r+0x744>
    3b8a:	9916      	ldr	r1, [sp, #88]	; 0x58
    3b8c:	9d15      	ldr	r5, [sp, #84]	; 0x54
    3b8e:	000a      	movs	r2, r1
    3b90:	0008      	movs	r0, r1
    3b92:	002b      	movs	r3, r5
    3b94:	0029      	movs	r1, r5
    3b96:	f004 f9bd 	bl	7f14 <__aeabi_dcmpun>
    3b9a:	2800      	cmp	r0, #0
    3b9c:	d000      	beq.n	3ba0 <_svfprintf_r+0xf28>
    3b9e:	e2e6      	b.n	416e <_svfprintf_r+0x14f6>
    3ba0:	4653      	mov	r3, sl
    3ba2:	3301      	adds	r3, #1
    3ba4:	d100      	bne.n	3ba8 <_svfprintf_r+0xf30>
    3ba6:	e20d      	b.n	3fc4 <_svfprintf_r+0x134c>
    3ba8:	2320      	movs	r3, #32
    3baa:	9a12      	ldr	r2, [sp, #72]	; 0x48
    3bac:	439a      	bics	r2, r3
    3bae:	920e      	str	r2, [sp, #56]	; 0x38
    3bb0:	2a47      	cmp	r2, #71	; 0x47
    3bb2:	d100      	bne.n	3bb6 <_svfprintf_r+0xf3e>
    3bb4:	e11c      	b.n	3df0 <_svfprintf_r+0x1178>
    3bb6:	2380      	movs	r3, #128	; 0x80
    3bb8:	005b      	lsls	r3, r3, #1
    3bba:	4323      	orrs	r3, r4
    3bbc:	9308      	str	r3, [sp, #32]
    3bbe:	9b15      	ldr	r3, [sp, #84]	; 0x54
    3bc0:	2b00      	cmp	r3, #0
    3bc2:	da00      	bge.n	3bc6 <_svfprintf_r+0xf4e>
    3bc4:	e221      	b.n	400a <_svfprintf_r+0x1392>
    3bc6:	9a16      	ldr	r2, [sp, #88]	; 0x58
    3bc8:	9307      	str	r3, [sp, #28]
    3bca:	2300      	movs	r3, #0
    3bcc:	4691      	mov	r9, r2
    3bce:	9310      	str	r3, [sp, #64]	; 0x40
    3bd0:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3bd2:	2b66      	cmp	r3, #102	; 0x66
    3bd4:	d100      	bne.n	3bd8 <_svfprintf_r+0xf60>
    3bd6:	e1fc      	b.n	3fd2 <_svfprintf_r+0x135a>
    3bd8:	2b46      	cmp	r3, #70	; 0x46
    3bda:	d100      	bne.n	3bde <_svfprintf_r+0xf66>
    3bdc:	e0db      	b.n	3d96 <_svfprintf_r+0x111e>
    3bde:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    3be0:	9809      	ldr	r0, [sp, #36]	; 0x24
    3be2:	3a45      	subs	r2, #69	; 0x45
    3be4:	0013      	movs	r3, r2
    3be6:	4259      	negs	r1, r3
    3be8:	4159      	adcs	r1, r3
    3bea:	ab20      	add	r3, sp, #128	; 0x80
    3bec:	000d      	movs	r5, r1
    3bee:	9303      	str	r3, [sp, #12]
    3bf0:	ab1f      	add	r3, sp, #124	; 0x7c
    3bf2:	9302      	str	r3, [sp, #8]
    3bf4:	2302      	movs	r3, #2
    3bf6:	aa23      	add	r2, sp, #140	; 0x8c
    3bf8:	4455      	add	r5, sl
    3bfa:	921b      	str	r2, [sp, #108]	; 0x6c
    3bfc:	9204      	str	r2, [sp, #16]
    3bfe:	9300      	str	r3, [sp, #0]
    3c00:	9501      	str	r5, [sp, #4]
    3c02:	9b07      	ldr	r3, [sp, #28]
    3c04:	464a      	mov	r2, r9
    3c06:	f000 fc5f 	bl	44c8 <_dtoa_r>
    3c0a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3c0c:	9011      	str	r0, [sp, #68]	; 0x44
    3c0e:	2b67      	cmp	r3, #103	; 0x67
    3c10:	d000      	beq.n	3c14 <_svfprintf_r+0xf9c>
    3c12:	e239      	b.n	4088 <_svfprintf_r+0x1410>
    3c14:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3c16:	4698      	mov	r8, r3
    3c18:	44a8      	add	r8, r5
    3c1a:	07e3      	lsls	r3, r4, #31
    3c1c:	d400      	bmi.n	3c20 <_svfprintf_r+0xfa8>
    3c1e:	e28b      	b.n	4138 <_svfprintf_r+0x14c0>
    3c20:	2300      	movs	r3, #0
    3c22:	2200      	movs	r2, #0
    3c24:	4648      	mov	r0, r9
    3c26:	9907      	ldr	r1, [sp, #28]
    3c28:	f002 feec 	bl	6a04 <__aeabi_dcmpeq>
    3c2c:	4643      	mov	r3, r8
    3c2e:	2800      	cmp	r0, #0
    3c30:	d10a      	bne.n	3c48 <_svfprintf_r+0xfd0>
    3c32:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    3c34:	4543      	cmp	r3, r8
    3c36:	d207      	bcs.n	3c48 <_svfprintf_r+0xfd0>
    3c38:	2130      	movs	r1, #48	; 0x30
    3c3a:	4640      	mov	r0, r8
    3c3c:	1c5a      	adds	r2, r3, #1
    3c3e:	9223      	str	r2, [sp, #140]	; 0x8c
    3c40:	7019      	strb	r1, [r3, #0]
    3c42:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    3c44:	4298      	cmp	r0, r3
    3c46:	d8f9      	bhi.n	3c3c <_svfprintf_r+0xfc4>
    3c48:	9a11      	ldr	r2, [sp, #68]	; 0x44
    3c4a:	1a9b      	subs	r3, r3, r2
    3c4c:	9314      	str	r3, [sp, #80]	; 0x50
    3c4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3c50:	2b47      	cmp	r3, #71	; 0x47
    3c52:	d100      	bne.n	3c56 <_svfprintf_r+0xfde>
    3c54:	e0f6      	b.n	3e44 <_svfprintf_r+0x11cc>
    3c56:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3c58:	2b65      	cmp	r3, #101	; 0x65
    3c5a:	dc00      	bgt.n	3c5e <_svfprintf_r+0xfe6>
    3c5c:	e226      	b.n	40ac <_svfprintf_r+0x1434>
    3c5e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3c60:	2b66      	cmp	r3, #102	; 0x66
    3c62:	d100      	bne.n	3c66 <_svfprintf_r+0xfee>
    3c64:	e1f4      	b.n	4050 <_svfprintf_r+0x13d8>
    3c66:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    3c68:	9313      	str	r3, [sp, #76]	; 0x4c
    3c6a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    3c6c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    3c6e:	0019      	movs	r1, r3
    3c70:	4291      	cmp	r1, r2
    3c72:	dd00      	ble.n	3c76 <_svfprintf_r+0xffe>
    3c74:	e1d4      	b.n	4020 <_svfprintf_r+0x13a8>
    3c76:	07e3      	lsls	r3, r4, #31
    3c78:	d500      	bpl.n	3c7c <_svfprintf_r+0x1004>
    3c7a:	e249      	b.n	4110 <_svfprintf_r+0x1498>
    3c7c:	43d3      	mvns	r3, r2
    3c7e:	17db      	asrs	r3, r3, #31
    3c80:	0011      	movs	r1, r2
    3c82:	401a      	ands	r2, r3
    3c84:	2367      	movs	r3, #103	; 0x67
    3c86:	9207      	str	r2, [sp, #28]
    3c88:	910e      	str	r1, [sp, #56]	; 0x38
    3c8a:	9312      	str	r3, [sp, #72]	; 0x48
    3c8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    3c8e:	2b00      	cmp	r3, #0
    3c90:	d000      	beq.n	3c94 <_svfprintf_r+0x101c>
    3c92:	e0cf      	b.n	3e34 <_svfprintf_r+0x11bc>
    3c94:	ab16      	add	r3, sp, #88	; 0x58
    3c96:	7fdb      	ldrb	r3, [r3, #31]
    3c98:	4698      	mov	r8, r3
    3c9a:	2300      	movs	r3, #0
    3c9c:	469a      	mov	sl, r3
    3c9e:	f7ff f903 	bl	2ea8 <_svfprintf_r+0x230>
    3ca2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    3ca4:	990a      	ldr	r1, [sp, #40]	; 0x28
    3ca6:	6813      	ldr	r3, [r2, #0]
    3ca8:	6019      	str	r1, [r3, #0]
    3caa:	0013      	movs	r3, r2
    3cac:	3304      	adds	r3, #4
    3cae:	930f      	str	r3, [sp, #60]	; 0x3c
    3cb0:	f7ff f80d 	bl	2cce <_svfprintf_r+0x56>
    3cb4:	003a      	movs	r2, r7
    3cb6:	9906      	ldr	r1, [sp, #24]
    3cb8:	9809      	ldr	r0, [sp, #36]	; 0x24
    3cba:	f002 fa77 	bl	61ac <__ssprint_r>
    3cbe:	2800      	cmp	r0, #0
    3cc0:	d001      	beq.n	3cc6 <_svfprintf_r+0x104e>
    3cc2:	f7ff f860 	bl	2d86 <_svfprintf_r+0x10e>
    3cc6:	ae32      	add	r6, sp, #200	; 0xc8
    3cc8:	e48e      	b.n	35e8 <_svfprintf_r+0x970>
    3cca:	4bde      	ldr	r3, [pc, #888]	; (4044 <_svfprintf_r+0x13cc>)
    3ccc:	3401      	adds	r4, #1
    3cce:	6033      	str	r3, [r6, #0]
    3cd0:	2301      	movs	r3, #1
    3cd2:	6073      	str	r3, [r6, #4]
    3cd4:	687b      	ldr	r3, [r7, #4]
    3cd6:	60bc      	str	r4, [r7, #8]
    3cd8:	3301      	adds	r3, #1
    3cda:	607b      	str	r3, [r7, #4]
    3cdc:	2b07      	cmp	r3, #7
    3cde:	dc7a      	bgt.n	3dd6 <_svfprintf_r+0x115e>
    3ce0:	3608      	adds	r6, #8
    3ce2:	2800      	cmp	r0, #0
    3ce4:	d107      	bne.n	3cf6 <_svfprintf_r+0x107e>
    3ce6:	9b14      	ldr	r3, [sp, #80]	; 0x50
    3ce8:	2b00      	cmp	r3, #0
    3cea:	d104      	bne.n	3cf6 <_svfprintf_r+0x107e>
    3cec:	9b08      	ldr	r3, [sp, #32]
    3cee:	07db      	lsls	r3, r3, #31
    3cf0:	d401      	bmi.n	3cf6 <_svfprintf_r+0x107e>
    3cf2:	f7ff fbb7 	bl	3464 <_svfprintf_r+0x7ec>
    3cf6:	9b19      	ldr	r3, [sp, #100]	; 0x64
    3cf8:	6033      	str	r3, [r6, #0]
    3cfa:	9b18      	ldr	r3, [sp, #96]	; 0x60
    3cfc:	1919      	adds	r1, r3, r4
    3cfe:	6073      	str	r3, [r6, #4]
    3d00:	687b      	ldr	r3, [r7, #4]
    3d02:	60b9      	str	r1, [r7, #8]
    3d04:	3301      	adds	r3, #1
    3d06:	607b      	str	r3, [r7, #4]
    3d08:	2b07      	cmp	r3, #7
    3d0a:	dd00      	ble.n	3d0e <_svfprintf_r+0x1096>
    3d0c:	e1f2      	b.n	40f4 <_svfprintf_r+0x147c>
    3d0e:	0032      	movs	r2, r6
    3d10:	3208      	adds	r2, #8
    3d12:	2800      	cmp	r0, #0
    3d14:	da00      	bge.n	3d18 <_svfprintf_r+0x10a0>
    3d16:	e1cc      	b.n	40b2 <_svfprintf_r+0x143a>
    3d18:	9811      	ldr	r0, [sp, #68]	; 0x44
    3d1a:	3301      	adds	r3, #1
    3d1c:	6010      	str	r0, [r2, #0]
    3d1e:	9814      	ldr	r0, [sp, #80]	; 0x50
    3d20:	607b      	str	r3, [r7, #4]
    3d22:	1844      	adds	r4, r0, r1
    3d24:	6050      	str	r0, [r2, #4]
    3d26:	60bc      	str	r4, [r7, #8]
    3d28:	2b07      	cmp	r3, #7
    3d2a:	dd00      	ble.n	3d2e <_svfprintf_r+0x10b6>
    3d2c:	e437      	b.n	359e <_svfprintf_r+0x926>
    3d2e:	3208      	adds	r2, #8
    3d30:	0016      	movs	r6, r2
    3d32:	f7ff fb97 	bl	3464 <_svfprintf_r+0x7ec>
    3d36:	990f      	ldr	r1, [sp, #60]	; 0x3c
    3d38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3d3a:	680b      	ldr	r3, [r1, #0]
    3d3c:	601a      	str	r2, [r3, #0]
    3d3e:	17d2      	asrs	r2, r2, #31
    3d40:	605a      	str	r2, [r3, #4]
    3d42:	000b      	movs	r3, r1
    3d44:	3304      	adds	r3, #4
    3d46:	930f      	str	r3, [sp, #60]	; 0x3c
    3d48:	f7fe ffc1 	bl	2cce <_svfprintf_r+0x56>
    3d4c:	464b      	mov	r3, r9
    3d4e:	3101      	adds	r1, #1
    3d50:	431c      	orrs	r4, r3
    3d52:	780b      	ldrb	r3, [r1, #0]
    3d54:	f7fe fff4 	bl	2d40 <_svfprintf_r+0xc8>
    3d58:	4bbb      	ldr	r3, [pc, #748]	; (4048 <_svfprintf_r+0x13d0>)
    3d5a:	9311      	str	r3, [sp, #68]	; 0x44
    3d5c:	f7ff f937 	bl	2fce <_svfprintf_r+0x356>
    3d60:	003a      	movs	r2, r7
    3d62:	9906      	ldr	r1, [sp, #24]
    3d64:	9809      	ldr	r0, [sp, #36]	; 0x24
    3d66:	f002 fa21 	bl	61ac <__ssprint_r>
    3d6a:	2800      	cmp	r0, #0
    3d6c:	d001      	beq.n	3d72 <_svfprintf_r+0x10fa>
    3d6e:	f7ff f80a 	bl	2d86 <_svfprintf_r+0x10e>
    3d72:	68bc      	ldr	r4, [r7, #8]
    3d74:	ae32      	add	r6, sp, #200	; 0xc8
    3d76:	e5f1      	b.n	395c <_svfprintf_r+0xce4>
    3d78:	2140      	movs	r1, #64	; 0x40
    3d7a:	9809      	ldr	r0, [sp, #36]	; 0x24
    3d7c:	f001 fb76 	bl	546c <_malloc_r>
    3d80:	9b06      	ldr	r3, [sp, #24]
    3d82:	6018      	str	r0, [r3, #0]
    3d84:	6118      	str	r0, [r3, #16]
    3d86:	2800      	cmp	r0, #0
    3d88:	d100      	bne.n	3d8c <_svfprintf_r+0x1114>
    3d8a:	e24f      	b.n	422c <_svfprintf_r+0x15b4>
    3d8c:	2340      	movs	r3, #64	; 0x40
    3d8e:	9a06      	ldr	r2, [sp, #24]
    3d90:	6153      	str	r3, [r2, #20]
    3d92:	f7fe ff8e 	bl	2cb2 <_svfprintf_r+0x3a>
    3d96:	ab23      	add	r3, sp, #140	; 0x8c
    3d98:	931b      	str	r3, [sp, #108]	; 0x6c
    3d9a:	9304      	str	r3, [sp, #16]
    3d9c:	ab20      	add	r3, sp, #128	; 0x80
    3d9e:	9303      	str	r3, [sp, #12]
    3da0:	ab1f      	add	r3, sp, #124	; 0x7c
    3da2:	9302      	str	r3, [sp, #8]
    3da4:	4653      	mov	r3, sl
    3da6:	9301      	str	r3, [sp, #4]
    3da8:	2303      	movs	r3, #3
    3daa:	464a      	mov	r2, r9
    3dac:	9300      	str	r3, [sp, #0]
    3dae:	9809      	ldr	r0, [sp, #36]	; 0x24
    3db0:	9b07      	ldr	r3, [sp, #28]
    3db2:	f000 fb89 	bl	44c8 <_dtoa_r>
    3db6:	4655      	mov	r5, sl
    3db8:	9011      	str	r0, [sp, #68]	; 0x44
    3dba:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3dbc:	4698      	mov	r8, r3
    3dbe:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3dc0:	44a8      	add	r8, r5
    3dc2:	2b46      	cmp	r3, #70	; 0x46
    3dc4:	d000      	beq.n	3dc8 <_svfprintf_r+0x1150>
    3dc6:	e72b      	b.n	3c20 <_svfprintf_r+0xfa8>
    3dc8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    3dca:	781b      	ldrb	r3, [r3, #0]
    3dcc:	2b30      	cmp	r3, #48	; 0x30
    3dce:	d016      	beq.n	3dfe <_svfprintf_r+0x1186>
    3dd0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    3dd2:	4498      	add	r8, r3
    3dd4:	e724      	b.n	3c20 <_svfprintf_r+0xfa8>
    3dd6:	003a      	movs	r2, r7
    3dd8:	9906      	ldr	r1, [sp, #24]
    3dda:	9809      	ldr	r0, [sp, #36]	; 0x24
    3ddc:	f002 f9e6 	bl	61ac <__ssprint_r>
    3de0:	2800      	cmp	r0, #0
    3de2:	d001      	beq.n	3de8 <_svfprintf_r+0x1170>
    3de4:	f7fe ffcf 	bl	2d86 <_svfprintf_r+0x10e>
    3de8:	981f      	ldr	r0, [sp, #124]	; 0x7c
    3dea:	68bc      	ldr	r4, [r7, #8]
    3dec:	ae32      	add	r6, sp, #200	; 0xc8
    3dee:	e778      	b.n	3ce2 <_svfprintf_r+0x106a>
    3df0:	4653      	mov	r3, sl
    3df2:	2b00      	cmp	r3, #0
    3df4:	d000      	beq.n	3df8 <_svfprintf_r+0x1180>
    3df6:	e6de      	b.n	3bb6 <_svfprintf_r+0xf3e>
    3df8:	3301      	adds	r3, #1
    3dfa:	469a      	mov	sl, r3
    3dfc:	e6db      	b.n	3bb6 <_svfprintf_r+0xf3e>
    3dfe:	2200      	movs	r2, #0
    3e00:	2300      	movs	r3, #0
    3e02:	4648      	mov	r0, r9
    3e04:	9907      	ldr	r1, [sp, #28]
    3e06:	f002 fdfd 	bl	6a04 <__aeabi_dcmpeq>
    3e0a:	2800      	cmp	r0, #0
    3e0c:	d1e0      	bne.n	3dd0 <_svfprintf_r+0x1158>
    3e0e:	2301      	movs	r3, #1
    3e10:	1b5b      	subs	r3, r3, r5
    3e12:	931f      	str	r3, [sp, #124]	; 0x7c
    3e14:	4498      	add	r8, r3
    3e16:	e703      	b.n	3c20 <_svfprintf_r+0xfa8>
    3e18:	9a11      	ldr	r2, [sp, #68]	; 0x44
    3e1a:	ab32      	add	r3, sp, #200	; 0xc8
    3e1c:	1a9b      	subs	r3, r3, r2
    3e1e:	930e      	str	r3, [sp, #56]	; 0x38
    3e20:	f7ff f83a 	bl	2e98 <_svfprintf_r+0x220>
    3e24:	9811      	ldr	r0, [sp, #68]	; 0x44
    3e26:	f7fe fe9f 	bl	2b68 <strlen>
    3e2a:	0002      	movs	r2, r0
    3e2c:	900e      	str	r0, [sp, #56]	; 0x38
    3e2e:	0003      	movs	r3, r0
    3e30:	f7ff f9cd 	bl	31ce <_svfprintf_r+0x556>
    3e34:	232d      	movs	r3, #45	; 0x2d
    3e36:	aa16      	add	r2, sp, #88	; 0x58
    3e38:	77d3      	strb	r3, [r2, #31]
    3e3a:	4698      	mov	r8, r3
    3e3c:	2300      	movs	r3, #0
    3e3e:	469a      	mov	sl, r3
    3e40:	f7ff f835 	bl	2eae <_svfprintf_r+0x236>
    3e44:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    3e46:	9313      	str	r3, [sp, #76]	; 0x4c
    3e48:	1cda      	adds	r2, r3, #3
    3e4a:	db02      	blt.n	3e52 <_svfprintf_r+0x11da>
    3e4c:	459a      	cmp	sl, r3
    3e4e:	db00      	blt.n	3e52 <_svfprintf_r+0x11da>
    3e50:	e70b      	b.n	3c6a <_svfprintf_r+0xff2>
    3e52:	9b12      	ldr	r3, [sp, #72]	; 0x48
    3e54:	3b02      	subs	r3, #2
    3e56:	9312      	str	r3, [sp, #72]	; 0x48
    3e58:	222c      	movs	r2, #44	; 0x2c
    3e5a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    3e5c:	2148      	movs	r1, #72	; 0x48
    3e5e:	1e5d      	subs	r5, r3, #1
    3e60:	ab16      	add	r3, sp, #88	; 0x58
    3e62:	189b      	adds	r3, r3, r2
    3e64:	466a      	mov	r2, sp
    3e66:	1852      	adds	r2, r2, r1
    3e68:	7812      	ldrb	r2, [r2, #0]
    3e6a:	951f      	str	r5, [sp, #124]	; 0x7c
    3e6c:	701a      	strb	r2, [r3, #0]
    3e6e:	2d00      	cmp	r5, #0
    3e70:	da00      	bge.n	3e74 <_svfprintf_r+0x11fc>
    3e72:	e1a4      	b.n	41be <_svfprintf_r+0x1546>
    3e74:	212d      	movs	r1, #45	; 0x2d
    3e76:	232b      	movs	r3, #43	; 0x2b
    3e78:	aa16      	add	r2, sp, #88	; 0x58
    3e7a:	1852      	adds	r2, r2, r1
    3e7c:	7013      	strb	r3, [r2, #0]
    3e7e:	2d09      	cmp	r5, #9
    3e80:	dc00      	bgt.n	3e84 <_svfprintf_r+0x120c>
    3e82:	e14c      	b.n	411e <_svfprintf_r+0x14a6>
    3e84:	aa16      	add	r2, sp, #88	; 0x58
    3e86:	233b      	movs	r3, #59	; 0x3b
    3e88:	4694      	mov	ip, r2
    3e8a:	4463      	add	r3, ip
    3e8c:	469a      	mov	sl, r3
    3e8e:	46b1      	mov	r9, r6
    3e90:	46a0      	mov	r8, r4
    3e92:	4656      	mov	r6, sl
    3e94:	e000      	b.n	3e98 <_svfprintf_r+0x1220>
    3e96:	0026      	movs	r6, r4
    3e98:	0028      	movs	r0, r5
    3e9a:	210a      	movs	r1, #10
    3e9c:	f7fe f91e 	bl	20dc <__aeabi_idivmod>
    3ea0:	1e74      	subs	r4, r6, #1
    3ea2:	3130      	adds	r1, #48	; 0x30
    3ea4:	7021      	strb	r1, [r4, #0]
    3ea6:	0028      	movs	r0, r5
    3ea8:	210a      	movs	r1, #10
    3eaa:	f7fe f831 	bl	1f10 <__divsi3>
    3eae:	0005      	movs	r5, r0
    3eb0:	2809      	cmp	r0, #9
    3eb2:	dcf0      	bgt.n	3e96 <_svfprintf_r+0x121e>
    3eb4:	0023      	movs	r3, r4
    3eb6:	4644      	mov	r4, r8
    3eb8:	46b0      	mov	r8, r6
    3eba:	464e      	mov	r6, r9
    3ebc:	4699      	mov	r9, r3
    3ebe:	0003      	movs	r3, r0
    3ec0:	3330      	adds	r3, #48	; 0x30
    3ec2:	b2d8      	uxtb	r0, r3
    3ec4:	4643      	mov	r3, r8
    3ec6:	3b02      	subs	r3, #2
    3ec8:	7018      	strb	r0, [r3, #0]
    3eca:	459a      	cmp	sl, r3
    3ecc:	d800      	bhi.n	3ed0 <_svfprintf_r+0x1258>
    3ece:	e1b4      	b.n	423a <_svfprintf_r+0x15c2>
    3ed0:	4642      	mov	r2, r8
    3ed2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    3ed4:	4645      	mov	r5, r8
    3ed6:	1a99      	subs	r1, r3, r2
    3ed8:	2301      	movs	r3, #1
    3eda:	3107      	adds	r1, #7
    3edc:	425b      	negs	r3, r3
    3ede:	e001      	b.n	3ee4 <_svfprintf_r+0x126c>
    3ee0:	5ce8      	ldrb	r0, [r5, r3]
    3ee2:	3301      	adds	r3, #1
    3ee4:	aa21      	add	r2, sp, #132	; 0x84
    3ee6:	18d2      	adds	r2, r2, r3
    3ee8:	70d0      	strb	r0, [r2, #3]
    3eea:	428b      	cmp	r3, r1
    3eec:	d1f8      	bne.n	3ee0 <_svfprintf_r+0x1268>
    3eee:	a916      	add	r1, sp, #88	; 0x58
    3ef0:	468c      	mov	ip, r1
    3ef2:	222e      	movs	r2, #46	; 0x2e
    3ef4:	464b      	mov	r3, r9
    3ef6:	4462      	add	r2, ip
    3ef8:	4694      	mov	ip, r2
    3efa:	1afb      	subs	r3, r7, r3
    3efc:	4463      	add	r3, ip
    3efe:	aa21      	add	r2, sp, #132	; 0x84
    3f00:	9914      	ldr	r1, [sp, #80]	; 0x50
    3f02:	1a9b      	subs	r3, r3, r2
    3f04:	469c      	mov	ip, r3
    3f06:	000a      	movs	r2, r1
    3f08:	4462      	add	r2, ip
    3f0a:	931a      	str	r3, [sp, #104]	; 0x68
    3f0c:	920e      	str	r2, [sp, #56]	; 0x38
    3f0e:	2901      	cmp	r1, #1
    3f10:	dc00      	bgt.n	3f14 <_svfprintf_r+0x129c>
    3f12:	e145      	b.n	41a0 <_svfprintf_r+0x1528>
    3f14:	9a18      	ldr	r2, [sp, #96]	; 0x60
    3f16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3f18:	4694      	mov	ip, r2
    3f1a:	4463      	add	r3, ip
    3f1c:	001a      	movs	r2, r3
    3f1e:	930e      	str	r3, [sp, #56]	; 0x38
    3f20:	43db      	mvns	r3, r3
    3f22:	17db      	asrs	r3, r3, #31
    3f24:	401a      	ands	r2, r3
    3f26:	2300      	movs	r3, #0
    3f28:	9207      	str	r2, [sp, #28]
    3f2a:	9313      	str	r3, [sp, #76]	; 0x4c
    3f2c:	e6ae      	b.n	3c8c <_svfprintf_r+0x1014>
    3f2e:	2301      	movs	r3, #1
    3f30:	425b      	negs	r3, r3
    3f32:	930a      	str	r3, [sp, #40]	; 0x28
    3f34:	f7fe ff2d 	bl	2d92 <_svfprintf_r+0x11a>
    3f38:	003a      	movs	r2, r7
    3f3a:	9906      	ldr	r1, [sp, #24]
    3f3c:	9809      	ldr	r0, [sp, #36]	; 0x24
    3f3e:	f002 f935 	bl	61ac <__ssprint_r>
    3f42:	2800      	cmp	r0, #0
    3f44:	d001      	beq.n	3f4a <_svfprintf_r+0x12d2>
    3f46:	f7fe ff1e 	bl	2d86 <_svfprintf_r+0x10e>
    3f4a:	68bc      	ldr	r4, [r7, #8]
    3f4c:	ae32      	add	r6, sp, #200	; 0xc8
    3f4e:	e43c      	b.n	37ca <_svfprintf_r+0xb52>
    3f50:	003a      	movs	r2, r7
    3f52:	9906      	ldr	r1, [sp, #24]
    3f54:	9809      	ldr	r0, [sp, #36]	; 0x24
    3f56:	f002 f929 	bl	61ac <__ssprint_r>
    3f5a:	2800      	cmp	r0, #0
    3f5c:	d001      	beq.n	3f62 <_svfprintf_r+0x12ea>
    3f5e:	f7fe ff12 	bl	2d86 <_svfprintf_r+0x10e>
    3f62:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    3f64:	68bc      	ldr	r4, [r7, #8]
    3f66:	ae32      	add	r6, sp, #200	; 0xc8
    3f68:	e56a      	b.n	3a40 <_svfprintf_r+0xdc8>
    3f6a:	003a      	movs	r2, r7
    3f6c:	9906      	ldr	r1, [sp, #24]
    3f6e:	9809      	ldr	r0, [sp, #36]	; 0x24
    3f70:	f002 f91c 	bl	61ac <__ssprint_r>
    3f74:	2800      	cmp	r0, #0
    3f76:	d001      	beq.n	3f7c <_svfprintf_r+0x1304>
    3f78:	f7fe ff05 	bl	2d86 <_svfprintf_r+0x10e>
    3f7c:	68bc      	ldr	r4, [r7, #8]
    3f7e:	ae32      	add	r6, sp, #200	; 0xc8
    3f80:	e557      	b.n	3a32 <_svfprintf_r+0xdba>
    3f82:	003a      	movs	r2, r7
    3f84:	9906      	ldr	r1, [sp, #24]
    3f86:	9809      	ldr	r0, [sp, #36]	; 0x24
    3f88:	f002 f910 	bl	61ac <__ssprint_r>
    3f8c:	2800      	cmp	r0, #0
    3f8e:	d001      	beq.n	3f94 <_svfprintf_r+0x131c>
    3f90:	f7fe fef9 	bl	2d86 <_svfprintf_r+0x10e>
    3f94:	9b14      	ldr	r3, [sp, #80]	; 0x50
    3f96:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
    3f98:	68bc      	ldr	r4, [r7, #8]
    3f9a:	1a9b      	subs	r3, r3, r2
    3f9c:	ae32      	add	r6, sp, #200	; 0xc8
    3f9e:	e56a      	b.n	3a76 <_svfprintf_r+0xdfe>
    3fa0:	4653      	mov	r3, sl
    3fa2:	9307      	str	r3, [sp, #28]
    3fa4:	2b06      	cmp	r3, #6
    3fa6:	d901      	bls.n	3fac <_svfprintf_r+0x1334>
    3fa8:	2306      	movs	r3, #6
    3faa:	9307      	str	r3, [sp, #28]
    3fac:	9b07      	ldr	r3, [sp, #28]
    3fae:	950f      	str	r5, [sp, #60]	; 0x3c
    3fb0:	930e      	str	r3, [sp, #56]	; 0x38
    3fb2:	2300      	movs	r3, #0
    3fb4:	4698      	mov	r8, r3
    3fb6:	469a      	mov	sl, r3
    3fb8:	9313      	str	r3, [sp, #76]	; 0x4c
    3fba:	4b24      	ldr	r3, [pc, #144]	; (404c <_svfprintf_r+0x13d4>)
    3fbc:	9408      	str	r4, [sp, #32]
    3fbe:	9311      	str	r3, [sp, #68]	; 0x44
    3fc0:	f7fe ff78 	bl	2eb4 <_svfprintf_r+0x23c>
    3fc4:	2320      	movs	r3, #32
    3fc6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    3fc8:	439a      	bics	r2, r3
    3fca:	3b1a      	subs	r3, #26
    3fcc:	920e      	str	r2, [sp, #56]	; 0x38
    3fce:	469a      	mov	sl, r3
    3fd0:	e5f1      	b.n	3bb6 <_svfprintf_r+0xf3e>
    3fd2:	ab23      	add	r3, sp, #140	; 0x8c
    3fd4:	931b      	str	r3, [sp, #108]	; 0x6c
    3fd6:	9304      	str	r3, [sp, #16]
    3fd8:	ab20      	add	r3, sp, #128	; 0x80
    3fda:	9303      	str	r3, [sp, #12]
    3fdc:	ab1f      	add	r3, sp, #124	; 0x7c
    3fde:	9302      	str	r3, [sp, #8]
    3fe0:	4653      	mov	r3, sl
    3fe2:	9301      	str	r3, [sp, #4]
    3fe4:	2303      	movs	r3, #3
    3fe6:	464a      	mov	r2, r9
    3fe8:	9300      	str	r3, [sp, #0]
    3fea:	9809      	ldr	r0, [sp, #36]	; 0x24
    3fec:	9b07      	ldr	r3, [sp, #28]
    3fee:	f000 fa6b 	bl	44c8 <_dtoa_r>
    3ff2:	0003      	movs	r3, r0
    3ff4:	4453      	add	r3, sl
    3ff6:	9011      	str	r0, [sp, #68]	; 0x44
    3ff8:	4698      	mov	r8, r3
    3ffa:	4655      	mov	r5, sl
    3ffc:	e6e4      	b.n	3dc8 <_svfprintf_r+0x1150>
    3ffe:	232d      	movs	r3, #45	; 0x2d
    4000:	aa16      	add	r2, sp, #88	; 0x58
    4002:	77d3      	strb	r3, [r2, #31]
    4004:	4698      	mov	r8, r3
    4006:	f7fe ffdb 	bl	2fc0 <_svfprintf_r+0x348>
    400a:	2280      	movs	r2, #128	; 0x80
    400c:	0612      	lsls	r2, r2, #24
    400e:	4694      	mov	ip, r2
    4010:	9b16      	ldr	r3, [sp, #88]	; 0x58
    4012:	4699      	mov	r9, r3
    4014:	9b15      	ldr	r3, [sp, #84]	; 0x54
    4016:	4463      	add	r3, ip
    4018:	9307      	str	r3, [sp, #28]
    401a:	232d      	movs	r3, #45	; 0x2d
    401c:	9310      	str	r3, [sp, #64]	; 0x40
    401e:	e5d7      	b.n	3bd0 <_svfprintf_r+0xf58>
    4020:	9a18      	ldr	r2, [sp, #96]	; 0x60
    4022:	9b14      	ldr	r3, [sp, #80]	; 0x50
    4024:	4694      	mov	ip, r2
    4026:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    4028:	4463      	add	r3, ip
    402a:	930e      	str	r3, [sp, #56]	; 0x38
    402c:	2a00      	cmp	r2, #0
    402e:	dc00      	bgt.n	4032 <_svfprintf_r+0x13ba>
    4030:	e0ce      	b.n	41d0 <_svfprintf_r+0x1558>
    4032:	001a      	movs	r2, r3
    4034:	43db      	mvns	r3, r3
    4036:	17db      	asrs	r3, r3, #31
    4038:	401a      	ands	r2, r3
    403a:	2367      	movs	r3, #103	; 0x67
    403c:	9207      	str	r2, [sp, #28]
    403e:	9312      	str	r3, [sp, #72]	; 0x48
    4040:	e624      	b.n	3c8c <_svfprintf_r+0x1014>
    4042:	46c0      	nop			; (mov r8, r8)
    4044:	000082a4 	.word	0x000082a4
    4048:	00008268 	.word	0x00008268
    404c:	0000829c 	.word	0x0000829c
    4050:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    4052:	9313      	str	r3, [sp, #76]	; 0x4c
    4054:	2b00      	cmp	r3, #0
    4056:	dc00      	bgt.n	405a <_svfprintf_r+0x13e2>
    4058:	e0d5      	b.n	4206 <_svfprintf_r+0x158e>
    405a:	4652      	mov	r2, sl
    405c:	2a00      	cmp	r2, #0
    405e:	d000      	beq.n	4062 <_svfprintf_r+0x13ea>
    4060:	e092      	b.n	4188 <_svfprintf_r+0x1510>
    4062:	07e2      	lsls	r2, r4, #31
    4064:	d500      	bpl.n	4068 <_svfprintf_r+0x13f0>
    4066:	e08f      	b.n	4188 <_svfprintf_r+0x1510>
    4068:	9307      	str	r3, [sp, #28]
    406a:	930e      	str	r3, [sp, #56]	; 0x38
    406c:	e60e      	b.n	3c8c <_svfprintf_r+0x1014>
    406e:	ab16      	add	r3, sp, #88	; 0x58
    4070:	7fdb      	ldrb	r3, [r3, #31]
    4072:	950f      	str	r5, [sp, #60]	; 0x3c
    4074:	4698      	mov	r8, r3
    4076:	4653      	mov	r3, sl
    4078:	9307      	str	r3, [sp, #28]
    407a:	930e      	str	r3, [sp, #56]	; 0x38
    407c:	2300      	movs	r3, #0
    407e:	9408      	str	r4, [sp, #32]
    4080:	469a      	mov	sl, r3
    4082:	9313      	str	r3, [sp, #76]	; 0x4c
    4084:	f7fe ff10 	bl	2ea8 <_svfprintf_r+0x230>
    4088:	9b11      	ldr	r3, [sp, #68]	; 0x44
    408a:	4698      	mov	r8, r3
    408c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    408e:	44a8      	add	r8, r5
    4090:	2b47      	cmp	r3, #71	; 0x47
    4092:	d000      	beq.n	4096 <_svfprintf_r+0x141e>
    4094:	e5c4      	b.n	3c20 <_svfprintf_r+0xfa8>
    4096:	07e3      	lsls	r3, r4, #31
    4098:	d500      	bpl.n	409c <_svfprintf_r+0x1424>
    409a:	e68e      	b.n	3dba <_svfprintf_r+0x1142>
    409c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    409e:	9a11      	ldr	r2, [sp, #68]	; 0x44
    40a0:	1a9b      	subs	r3, r3, r2
    40a2:	9314      	str	r3, [sp, #80]	; 0x50
    40a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    40a6:	2b47      	cmp	r3, #71	; 0x47
    40a8:	d100      	bne.n	40ac <_svfprintf_r+0x1434>
    40aa:	e6cb      	b.n	3e44 <_svfprintf_r+0x11cc>
    40ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    40ae:	9313      	str	r3, [sp, #76]	; 0x4c
    40b0:	e6d2      	b.n	3e58 <_svfprintf_r+0x11e0>
    40b2:	4244      	negs	r4, r0
    40b4:	3010      	adds	r0, #16
    40b6:	db00      	blt.n	40ba <_svfprintf_r+0x1442>
    40b8:	e0d0      	b.n	425c <_svfprintf_r+0x15e4>
    40ba:	486e      	ldr	r0, [pc, #440]	; (4274 <_svfprintf_r+0x15fc>)
    40bc:	2610      	movs	r6, #16
    40be:	0005      	movs	r5, r0
    40c0:	e003      	b.n	40ca <_svfprintf_r+0x1452>
    40c2:	3208      	adds	r2, #8
    40c4:	3c10      	subs	r4, #16
    40c6:	2c10      	cmp	r4, #16
    40c8:	dd38      	ble.n	413c <_svfprintf_r+0x14c4>
    40ca:	3110      	adds	r1, #16
    40cc:	3301      	adds	r3, #1
    40ce:	6015      	str	r5, [r2, #0]
    40d0:	6056      	str	r6, [r2, #4]
    40d2:	60b9      	str	r1, [r7, #8]
    40d4:	607b      	str	r3, [r7, #4]
    40d6:	2b07      	cmp	r3, #7
    40d8:	ddf3      	ble.n	40c2 <_svfprintf_r+0x144a>
    40da:	003a      	movs	r2, r7
    40dc:	9906      	ldr	r1, [sp, #24]
    40de:	9809      	ldr	r0, [sp, #36]	; 0x24
    40e0:	f002 f864 	bl	61ac <__ssprint_r>
    40e4:	2800      	cmp	r0, #0
    40e6:	d001      	beq.n	40ec <_svfprintf_r+0x1474>
    40e8:	f7fe fe4d 	bl	2d86 <_svfprintf_r+0x10e>
    40ec:	68b9      	ldr	r1, [r7, #8]
    40ee:	687b      	ldr	r3, [r7, #4]
    40f0:	aa32      	add	r2, sp, #200	; 0xc8
    40f2:	e7e7      	b.n	40c4 <_svfprintf_r+0x144c>
    40f4:	003a      	movs	r2, r7
    40f6:	9906      	ldr	r1, [sp, #24]
    40f8:	9809      	ldr	r0, [sp, #36]	; 0x24
    40fa:	f002 f857 	bl	61ac <__ssprint_r>
    40fe:	2800      	cmp	r0, #0
    4100:	d001      	beq.n	4106 <_svfprintf_r+0x148e>
    4102:	f7fe fe40 	bl	2d86 <_svfprintf_r+0x10e>
    4106:	981f      	ldr	r0, [sp, #124]	; 0x7c
    4108:	68b9      	ldr	r1, [r7, #8]
    410a:	687b      	ldr	r3, [r7, #4]
    410c:	aa32      	add	r2, sp, #200	; 0xc8
    410e:	e600      	b.n	3d12 <_svfprintf_r+0x109a>
    4110:	9a18      	ldr	r2, [sp, #96]	; 0x60
    4112:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    4114:	4694      	mov	ip, r2
    4116:	4463      	add	r3, ip
    4118:	001a      	movs	r2, r3
    411a:	930e      	str	r3, [sp, #56]	; 0x38
    411c:	e78a      	b.n	4034 <_svfprintf_r+0x13bc>
    411e:	212e      	movs	r1, #46	; 0x2e
    4120:	2330      	movs	r3, #48	; 0x30
    4122:	aa16      	add	r2, sp, #88	; 0x58
    4124:	1852      	adds	r2, r2, r1
    4126:	7013      	strb	r3, [r2, #0]
    4128:	002b      	movs	r3, r5
    412a:	aa16      	add	r2, sp, #88	; 0x58
    412c:	3101      	adds	r1, #1
    412e:	3330      	adds	r3, #48	; 0x30
    4130:	1852      	adds	r2, r2, r1
    4132:	7013      	strb	r3, [r2, #0]
    4134:	ab22      	add	r3, sp, #136	; 0x88
    4136:	e6e2      	b.n	3efe <_svfprintf_r+0x1286>
    4138:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    413a:	e585      	b.n	3c48 <_svfprintf_r+0xfd0>
    413c:	46a9      	mov	r9, r5
    413e:	4648      	mov	r0, r9
    4140:	1909      	adds	r1, r1, r4
    4142:	3301      	adds	r3, #1
    4144:	6010      	str	r0, [r2, #0]
    4146:	6054      	str	r4, [r2, #4]
    4148:	60b9      	str	r1, [r7, #8]
    414a:	3208      	adds	r2, #8
    414c:	607b      	str	r3, [r7, #4]
    414e:	2b07      	cmp	r3, #7
    4150:	dc00      	bgt.n	4154 <_svfprintf_r+0x14dc>
    4152:	e5e1      	b.n	3d18 <_svfprintf_r+0x10a0>
    4154:	003a      	movs	r2, r7
    4156:	9906      	ldr	r1, [sp, #24]
    4158:	9809      	ldr	r0, [sp, #36]	; 0x24
    415a:	f002 f827 	bl	61ac <__ssprint_r>
    415e:	2800      	cmp	r0, #0
    4160:	d001      	beq.n	4166 <_svfprintf_r+0x14ee>
    4162:	f7fe fe10 	bl	2d86 <_svfprintf_r+0x10e>
    4166:	68b9      	ldr	r1, [r7, #8]
    4168:	687b      	ldr	r3, [r7, #4]
    416a:	aa32      	add	r2, sp, #200	; 0xc8
    416c:	e5d4      	b.n	3d18 <_svfprintf_r+0x10a0>
    416e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    4170:	2b00      	cmp	r3, #0
    4172:	db38      	blt.n	41e6 <_svfprintf_r+0x156e>
    4174:	ab16      	add	r3, sp, #88	; 0x58
    4176:	7fdb      	ldrb	r3, [r3, #31]
    4178:	4698      	mov	r8, r3
    417a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    417c:	2b47      	cmp	r3, #71	; 0x47
    417e:	dc2e      	bgt.n	41de <_svfprintf_r+0x1566>
    4180:	4b3d      	ldr	r3, [pc, #244]	; (4278 <_svfprintf_r+0x1600>)
    4182:	9311      	str	r3, [sp, #68]	; 0x44
    4184:	f7fe ff23 	bl	2fce <_svfprintf_r+0x356>
    4188:	9a18      	ldr	r2, [sp, #96]	; 0x60
    418a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    418c:	4694      	mov	ip, r2
    418e:	4463      	add	r3, ip
    4190:	4453      	add	r3, sl
    4192:	001a      	movs	r2, r3
    4194:	930e      	str	r3, [sp, #56]	; 0x38
    4196:	43db      	mvns	r3, r3
    4198:	17db      	asrs	r3, r3, #31
    419a:	401a      	ands	r2, r3
    419c:	9207      	str	r2, [sp, #28]
    419e:	e575      	b.n	3c8c <_svfprintf_r+0x1014>
    41a0:	2301      	movs	r3, #1
    41a2:	4023      	ands	r3, r4
    41a4:	9313      	str	r3, [sp, #76]	; 0x4c
    41a6:	d000      	beq.n	41aa <_svfprintf_r+0x1532>
    41a8:	e6b4      	b.n	3f14 <_svfprintf_r+0x129c>
    41aa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    41ac:	43d3      	mvns	r3, r2
    41ae:	17db      	asrs	r3, r3, #31
    41b0:	401a      	ands	r2, r3
    41b2:	9207      	str	r2, [sp, #28]
    41b4:	e56a      	b.n	3c8c <_svfprintf_r+0x1014>
    41b6:	4a2f      	ldr	r2, [pc, #188]	; (4274 <_svfprintf_r+0x15fc>)
    41b8:	687b      	ldr	r3, [r7, #4]
    41ba:	4691      	mov	r9, r2
    41bc:	e42d      	b.n	3a1a <_svfprintf_r+0xda2>
    41be:	2301      	movs	r3, #1
    41c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    41c2:	391b      	subs	r1, #27
    41c4:	1a9d      	subs	r5, r3, r2
    41c6:	aa16      	add	r2, sp, #88	; 0x58
    41c8:	332c      	adds	r3, #44	; 0x2c
    41ca:	1852      	adds	r2, r2, r1
    41cc:	7013      	strb	r3, [r2, #0]
    41ce:	e656      	b.n	3e7e <_svfprintf_r+0x1206>
    41d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    41d2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    41d4:	1a98      	subs	r0, r3, r2
    41d6:	1c43      	adds	r3, r0, #1
    41d8:	001a      	movs	r2, r3
    41da:	930e      	str	r3, [sp, #56]	; 0x38
    41dc:	e72a      	b.n	4034 <_svfprintf_r+0x13bc>
    41de:	4b27      	ldr	r3, [pc, #156]	; (427c <_svfprintf_r+0x1604>)
    41e0:	9311      	str	r3, [sp, #68]	; 0x44
    41e2:	f7fe fef4 	bl	2fce <_svfprintf_r+0x356>
    41e6:	232d      	movs	r3, #45	; 0x2d
    41e8:	aa16      	add	r2, sp, #88	; 0x58
    41ea:	77d3      	strb	r3, [r2, #31]
    41ec:	4698      	mov	r8, r3
    41ee:	e7c4      	b.n	417a <_svfprintf_r+0x1502>
    41f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    41f2:	1d1a      	adds	r2, r3, #4
    41f4:	681b      	ldr	r3, [r3, #0]
    41f6:	469a      	mov	sl, r3
    41f8:	2b00      	cmp	r3, #0
    41fa:	db36      	blt.n	426a <_svfprintf_r+0x15f2>
    41fc:	784b      	ldrb	r3, [r1, #1]
    41fe:	920f      	str	r2, [sp, #60]	; 0x3c
    4200:	4659      	mov	r1, fp
    4202:	f7fe fd9d 	bl	2d40 <_svfprintf_r+0xc8>
    4206:	4653      	mov	r3, sl
    4208:	2b00      	cmp	r3, #0
    420a:	d101      	bne.n	4210 <_svfprintf_r+0x1598>
    420c:	07e3      	lsls	r3, r4, #31
    420e:	d503      	bpl.n	4218 <_svfprintf_r+0x15a0>
    4210:	9b18      	ldr	r3, [sp, #96]	; 0x60
    4212:	1c58      	adds	r0, r3, #1
    4214:	0003      	movs	r3, r0
    4216:	e7bb      	b.n	4190 <_svfprintf_r+0x1518>
    4218:	2301      	movs	r3, #1
    421a:	e725      	b.n	4068 <_svfprintf_r+0x13f0>
    421c:	ab16      	add	r3, sp, #88	; 0x58
    421e:	77d8      	strb	r0, [r3, #31]
    4220:	f7fe ff6c 	bl	30fc <_svfprintf_r+0x484>
    4224:	ab16      	add	r3, sp, #88	; 0x58
    4226:	77d8      	strb	r0, [r3, #31]
    4228:	f7ff f814 	bl	3254 <_svfprintf_r+0x5dc>
    422c:	230c      	movs	r3, #12
    422e:	9a09      	ldr	r2, [sp, #36]	; 0x24
    4230:	6013      	str	r3, [r2, #0]
    4232:	3b0d      	subs	r3, #13
    4234:	930a      	str	r3, [sp, #40]	; 0x28
    4236:	f7fe fdac 	bl	2d92 <_svfprintf_r+0x11a>
    423a:	aa16      	add	r2, sp, #88	; 0x58
    423c:	232e      	movs	r3, #46	; 0x2e
    423e:	4694      	mov	ip, r2
    4240:	4463      	add	r3, ip
    4242:	e65c      	b.n	3efe <_svfprintf_r+0x1286>
    4244:	ab16      	add	r3, sp, #88	; 0x58
    4246:	77d8      	strb	r0, [r3, #31]
    4248:	f7fe fe85 	bl	2f56 <_svfprintf_r+0x2de>
    424c:	ab16      	add	r3, sp, #88	; 0x58
    424e:	77d8      	strb	r0, [r3, #31]
    4250:	f7fe fddd 	bl	2e0e <_svfprintf_r+0x196>
    4254:	ab16      	add	r3, sp, #88	; 0x58
    4256:	77d8      	strb	r0, [r3, #31]
    4258:	f7ff f87d 	bl	3356 <_svfprintf_r+0x6de>
    425c:	4805      	ldr	r0, [pc, #20]	; (4274 <_svfprintf_r+0x15fc>)
    425e:	4681      	mov	r9, r0
    4260:	e76d      	b.n	413e <_svfprintf_r+0x14c6>
    4262:	ab16      	add	r3, sp, #88	; 0x58
    4264:	77d8      	strb	r0, [r3, #31]
    4266:	f7fe ff79 	bl	315c <_svfprintf_r+0x4e4>
    426a:	2301      	movs	r3, #1
    426c:	425b      	negs	r3, r3
    426e:	469a      	mov	sl, r3
    4270:	e7c4      	b.n	41fc <_svfprintf_r+0x1584>
    4272:	46c0      	nop			; (mov r8, r8)
    4274:	000082b8 	.word	0x000082b8
    4278:	0000826c 	.word	0x0000826c
    427c:	00008270 	.word	0x00008270

00004280 <__register_exitproc>:
    4280:	b5f0      	push	{r4, r5, r6, r7, lr}
    4282:	464e      	mov	r6, r9
    4284:	4645      	mov	r5, r8
    4286:	46de      	mov	lr, fp
    4288:	4657      	mov	r7, sl
    428a:	b5e0      	push	{r5, r6, r7, lr}
    428c:	4d36      	ldr	r5, [pc, #216]	; (4368 <__register_exitproc+0xe8>)
    428e:	b083      	sub	sp, #12
    4290:	0006      	movs	r6, r0
    4292:	6828      	ldr	r0, [r5, #0]
    4294:	4698      	mov	r8, r3
    4296:	000f      	movs	r7, r1
    4298:	4691      	mov	r9, r2
    429a:	f7fe fce9 	bl	2c70 <__retarget_lock_acquire_recursive>
    429e:	4b33      	ldr	r3, [pc, #204]	; (436c <__register_exitproc+0xec>)
    42a0:	681c      	ldr	r4, [r3, #0]
    42a2:	23a4      	movs	r3, #164	; 0xa4
    42a4:	005b      	lsls	r3, r3, #1
    42a6:	58e0      	ldr	r0, [r4, r3]
    42a8:	2800      	cmp	r0, #0
    42aa:	d052      	beq.n	4352 <__register_exitproc+0xd2>
    42ac:	6843      	ldr	r3, [r0, #4]
    42ae:	2b1f      	cmp	r3, #31
    42b0:	dc13      	bgt.n	42da <__register_exitproc+0x5a>
    42b2:	1c5a      	adds	r2, r3, #1
    42b4:	9201      	str	r2, [sp, #4]
    42b6:	2e00      	cmp	r6, #0
    42b8:	d128      	bne.n	430c <__register_exitproc+0x8c>
    42ba:	9a01      	ldr	r2, [sp, #4]
    42bc:	3302      	adds	r3, #2
    42be:	009b      	lsls	r3, r3, #2
    42c0:	6042      	str	r2, [r0, #4]
    42c2:	501f      	str	r7, [r3, r0]
    42c4:	6828      	ldr	r0, [r5, #0]
    42c6:	f7fe fcd5 	bl	2c74 <__retarget_lock_release_recursive>
    42ca:	2000      	movs	r0, #0
    42cc:	b003      	add	sp, #12
    42ce:	bc3c      	pop	{r2, r3, r4, r5}
    42d0:	4690      	mov	r8, r2
    42d2:	4699      	mov	r9, r3
    42d4:	46a2      	mov	sl, r4
    42d6:	46ab      	mov	fp, r5
    42d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    42da:	4b25      	ldr	r3, [pc, #148]	; (4370 <__register_exitproc+0xf0>)
    42dc:	2b00      	cmp	r3, #0
    42de:	d03d      	beq.n	435c <__register_exitproc+0xdc>
    42e0:	20c8      	movs	r0, #200	; 0xc8
    42e2:	0040      	lsls	r0, r0, #1
    42e4:	e000      	b.n	42e8 <__register_exitproc+0x68>
    42e6:	bf00      	nop
    42e8:	2800      	cmp	r0, #0
    42ea:	d037      	beq.n	435c <__register_exitproc+0xdc>
    42ec:	22a4      	movs	r2, #164	; 0xa4
    42ee:	2300      	movs	r3, #0
    42f0:	0052      	lsls	r2, r2, #1
    42f2:	58a1      	ldr	r1, [r4, r2]
    42f4:	6043      	str	r3, [r0, #4]
    42f6:	6001      	str	r1, [r0, #0]
    42f8:	50a0      	str	r0, [r4, r2]
    42fa:	3240      	adds	r2, #64	; 0x40
    42fc:	5083      	str	r3, [r0, r2]
    42fe:	3204      	adds	r2, #4
    4300:	5083      	str	r3, [r0, r2]
    4302:	3301      	adds	r3, #1
    4304:	9301      	str	r3, [sp, #4]
    4306:	2300      	movs	r3, #0
    4308:	2e00      	cmp	r6, #0
    430a:	d0d6      	beq.n	42ba <__register_exitproc+0x3a>
    430c:	009a      	lsls	r2, r3, #2
    430e:	4692      	mov	sl, r2
    4310:	4482      	add	sl, r0
    4312:	464a      	mov	r2, r9
    4314:	2188      	movs	r1, #136	; 0x88
    4316:	4654      	mov	r4, sl
    4318:	5062      	str	r2, [r4, r1]
    431a:	22c4      	movs	r2, #196	; 0xc4
    431c:	0052      	lsls	r2, r2, #1
    431e:	4691      	mov	r9, r2
    4320:	4481      	add	r9, r0
    4322:	464a      	mov	r2, r9
    4324:	3987      	subs	r1, #135	; 0x87
    4326:	4099      	lsls	r1, r3
    4328:	6812      	ldr	r2, [r2, #0]
    432a:	468b      	mov	fp, r1
    432c:	430a      	orrs	r2, r1
    432e:	4694      	mov	ip, r2
    4330:	464a      	mov	r2, r9
    4332:	4661      	mov	r1, ip
    4334:	6011      	str	r1, [r2, #0]
    4336:	2284      	movs	r2, #132	; 0x84
    4338:	4641      	mov	r1, r8
    433a:	0052      	lsls	r2, r2, #1
    433c:	50a1      	str	r1, [r4, r2]
    433e:	2e02      	cmp	r6, #2
    4340:	d1bb      	bne.n	42ba <__register_exitproc+0x3a>
    4342:	0002      	movs	r2, r0
    4344:	465c      	mov	r4, fp
    4346:	328d      	adds	r2, #141	; 0x8d
    4348:	32ff      	adds	r2, #255	; 0xff
    434a:	6811      	ldr	r1, [r2, #0]
    434c:	430c      	orrs	r4, r1
    434e:	6014      	str	r4, [r2, #0]
    4350:	e7b3      	b.n	42ba <__register_exitproc+0x3a>
    4352:	0020      	movs	r0, r4
    4354:	304d      	adds	r0, #77	; 0x4d
    4356:	30ff      	adds	r0, #255	; 0xff
    4358:	50e0      	str	r0, [r4, r3]
    435a:	e7a7      	b.n	42ac <__register_exitproc+0x2c>
    435c:	6828      	ldr	r0, [r5, #0]
    435e:	f7fe fc89 	bl	2c74 <__retarget_lock_release_recursive>
    4362:	2001      	movs	r0, #1
    4364:	4240      	negs	r0, r0
    4366:	e7b1      	b.n	42cc <__register_exitproc+0x4c>
    4368:	20000440 	.word	0x20000440
    436c:	000080fc 	.word	0x000080fc
    4370:	00000000 	.word	0x00000000

00004374 <quorem>:
    4374:	b5f0      	push	{r4, r5, r6, r7, lr}
    4376:	4645      	mov	r5, r8
    4378:	4680      	mov	r8, r0
    437a:	46de      	mov	lr, fp
    437c:	4657      	mov	r7, sl
    437e:	464e      	mov	r6, r9
    4380:	4642      	mov	r2, r8
    4382:	b5e0      	push	{r5, r6, r7, lr}
    4384:	690c      	ldr	r4, [r1, #16]
    4386:	6912      	ldr	r2, [r2, #16]
    4388:	b085      	sub	sp, #20
    438a:	000b      	movs	r3, r1
    438c:	9102      	str	r1, [sp, #8]
    438e:	2000      	movs	r0, #0
    4390:	4294      	cmp	r4, r2
    4392:	dd00      	ble.n	4396 <quorem+0x22>
    4394:	e090      	b.n	44b8 <quorem+0x144>
    4396:	2214      	movs	r2, #20
    4398:	4694      	mov	ip, r2
    439a:	4463      	add	r3, ip
    439c:	4699      	mov	r9, r3
    439e:	464a      	mov	r2, r9
    43a0:	3c01      	subs	r4, #1
    43a2:	00a3      	lsls	r3, r4, #2
    43a4:	18d6      	adds	r6, r2, r3
    43a6:	2214      	movs	r2, #20
    43a8:	4442      	add	r2, r8
    43aa:	4693      	mov	fp, r2
    43ac:	449b      	add	fp, r3
    43ae:	6833      	ldr	r3, [r6, #0]
    43b0:	0015      	movs	r5, r2
    43b2:	1c59      	adds	r1, r3, #1
    43b4:	465b      	mov	r3, fp
    43b6:	6818      	ldr	r0, [r3, #0]
    43b8:	9201      	str	r2, [sp, #4]
    43ba:	f7fd fd1f 	bl	1dfc <__udivsi3>
    43be:	1e03      	subs	r3, r0, #0
    43c0:	9000      	str	r0, [sp, #0]
    43c2:	d042      	beq.n	444a <quorem+0xd6>
    43c4:	0029      	movs	r1, r5
    43c6:	2700      	movs	r7, #0
    43c8:	464d      	mov	r5, r9
    43ca:	2000      	movs	r0, #0
    43cc:	46b1      	mov	r9, r6
    43ce:	46a2      	mov	sl, r4
    43d0:	003e      	movs	r6, r7
    43d2:	0004      	movs	r4, r0
    43d4:	469c      	mov	ip, r3
    43d6:	002f      	movs	r7, r5
    43d8:	0008      	movs	r0, r1
    43da:	9503      	str	r5, [sp, #12]
    43dc:	4663      	mov	r3, ip
    43de:	cf04      	ldmia	r7!, {r2}
    43e0:	0415      	lsls	r5, r2, #16
    43e2:	0c2d      	lsrs	r5, r5, #16
    43e4:	435d      	muls	r5, r3
    43e6:	0c12      	lsrs	r2, r2, #16
    43e8:	435a      	muls	r2, r3
    43ea:	19ad      	adds	r5, r5, r6
    43ec:	0c2b      	lsrs	r3, r5, #16
    43ee:	18d2      	adds	r2, r2, r3
    43f0:	6803      	ldr	r3, [r0, #0]
    43f2:	042d      	lsls	r5, r5, #16
    43f4:	0419      	lsls	r1, r3, #16
    43f6:	0c09      	lsrs	r1, r1, #16
    43f8:	1909      	adds	r1, r1, r4
    43fa:	0c16      	lsrs	r6, r2, #16
    43fc:	0c2d      	lsrs	r5, r5, #16
    43fe:	0412      	lsls	r2, r2, #16
    4400:	1b49      	subs	r1, r1, r5
    4402:	0c12      	lsrs	r2, r2, #16
    4404:	0c1b      	lsrs	r3, r3, #16
    4406:	1a9b      	subs	r3, r3, r2
    4408:	140a      	asrs	r2, r1, #16
    440a:	189b      	adds	r3, r3, r2
    440c:	0409      	lsls	r1, r1, #16
    440e:	141c      	asrs	r4, r3, #16
    4410:	0c09      	lsrs	r1, r1, #16
    4412:	041b      	lsls	r3, r3, #16
    4414:	4319      	orrs	r1, r3
    4416:	c002      	stmia	r0!, {r1}
    4418:	45b9      	cmp	r9, r7
    441a:	d2df      	bcs.n	43dc <quorem+0x68>
    441c:	9b03      	ldr	r3, [sp, #12]
    441e:	464e      	mov	r6, r9
    4420:	4699      	mov	r9, r3
    4422:	465b      	mov	r3, fp
    4424:	681b      	ldr	r3, [r3, #0]
    4426:	4654      	mov	r4, sl
    4428:	2b00      	cmp	r3, #0
    442a:	d10e      	bne.n	444a <quorem+0xd6>
    442c:	465b      	mov	r3, fp
    442e:	9a01      	ldr	r2, [sp, #4]
    4430:	3b04      	subs	r3, #4
    4432:	429a      	cmp	r2, r3
    4434:	d304      	bcc.n	4440 <quorem+0xcc>
    4436:	e006      	b.n	4446 <quorem+0xd2>
    4438:	3b04      	subs	r3, #4
    443a:	3c01      	subs	r4, #1
    443c:	429a      	cmp	r2, r3
    443e:	d202      	bcs.n	4446 <quorem+0xd2>
    4440:	6819      	ldr	r1, [r3, #0]
    4442:	2900      	cmp	r1, #0
    4444:	d0f8      	beq.n	4438 <quorem+0xc4>
    4446:	4643      	mov	r3, r8
    4448:	611c      	str	r4, [r3, #16]
    444a:	9902      	ldr	r1, [sp, #8]
    444c:	4640      	mov	r0, r8
    444e:	f001 fd87 	bl	5f60 <__mcmp>
    4452:	2800      	cmp	r0, #0
    4454:	db2f      	blt.n	44b6 <quorem+0x142>
    4456:	464f      	mov	r7, r9
    4458:	2000      	movs	r0, #0
    445a:	9b00      	ldr	r3, [sp, #0]
    445c:	9d01      	ldr	r5, [sp, #4]
    445e:	3301      	adds	r3, #1
    4460:	9300      	str	r3, [sp, #0]
    4462:	682b      	ldr	r3, [r5, #0]
    4464:	cf02      	ldmia	r7!, {r1}
    4466:	041a      	lsls	r2, r3, #16
    4468:	0c12      	lsrs	r2, r2, #16
    446a:	1810      	adds	r0, r2, r0
    446c:	040a      	lsls	r2, r1, #16
    446e:	0c12      	lsrs	r2, r2, #16
    4470:	1a82      	subs	r2, r0, r2
    4472:	0c09      	lsrs	r1, r1, #16
    4474:	0c1b      	lsrs	r3, r3, #16
    4476:	1a5b      	subs	r3, r3, r1
    4478:	1411      	asrs	r1, r2, #16
    447a:	185b      	adds	r3, r3, r1
    447c:	0412      	lsls	r2, r2, #16
    447e:	1418      	asrs	r0, r3, #16
    4480:	0c12      	lsrs	r2, r2, #16
    4482:	041b      	lsls	r3, r3, #16
    4484:	4313      	orrs	r3, r2
    4486:	c508      	stmia	r5!, {r3}
    4488:	42be      	cmp	r6, r7
    448a:	d2ea      	bcs.n	4462 <quorem+0xee>
    448c:	9901      	ldr	r1, [sp, #4]
    448e:	00a3      	lsls	r3, r4, #2
    4490:	468c      	mov	ip, r1
    4492:	4463      	add	r3, ip
    4494:	681a      	ldr	r2, [r3, #0]
    4496:	2a00      	cmp	r2, #0
    4498:	d10d      	bne.n	44b6 <quorem+0x142>
    449a:	3b04      	subs	r3, #4
    449c:	000a      	movs	r2, r1
    449e:	4299      	cmp	r1, r3
    44a0:	d304      	bcc.n	44ac <quorem+0x138>
    44a2:	e006      	b.n	44b2 <quorem+0x13e>
    44a4:	3b04      	subs	r3, #4
    44a6:	3c01      	subs	r4, #1
    44a8:	429a      	cmp	r2, r3
    44aa:	d202      	bcs.n	44b2 <quorem+0x13e>
    44ac:	6819      	ldr	r1, [r3, #0]
    44ae:	2900      	cmp	r1, #0
    44b0:	d0f8      	beq.n	44a4 <quorem+0x130>
    44b2:	4643      	mov	r3, r8
    44b4:	611c      	str	r4, [r3, #16]
    44b6:	9800      	ldr	r0, [sp, #0]
    44b8:	b005      	add	sp, #20
    44ba:	bc3c      	pop	{r2, r3, r4, r5}
    44bc:	4690      	mov	r8, r2
    44be:	4699      	mov	r9, r3
    44c0:	46a2      	mov	sl, r4
    44c2:	46ab      	mov	fp, r5
    44c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    44c6:	46c0      	nop			; (mov r8, r8)

000044c8 <_dtoa_r>:
    44c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    44ca:	4657      	mov	r7, sl
    44cc:	464e      	mov	r6, r9
    44ce:	4645      	mov	r5, r8
    44d0:	46de      	mov	lr, fp
    44d2:	b5e0      	push	{r5, r6, r7, lr}
    44d4:	6c01      	ldr	r1, [r0, #64]	; 0x40
    44d6:	b099      	sub	sp, #100	; 0x64
    44d8:	4682      	mov	sl, r0
    44da:	001d      	movs	r5, r3
    44dc:	0016      	movs	r6, r2
    44de:	001f      	movs	r7, r3
    44e0:	2900      	cmp	r1, #0
    44e2:	d009      	beq.n	44f8 <_dtoa_r+0x30>
    44e4:	2301      	movs	r3, #1
    44e6:	6c42      	ldr	r2, [r0, #68]	; 0x44
    44e8:	4093      	lsls	r3, r2
    44ea:	604a      	str	r2, [r1, #4]
    44ec:	608b      	str	r3, [r1, #8]
    44ee:	f001 fb2b 	bl	5b48 <_Bfree>
    44f2:	2300      	movs	r3, #0
    44f4:	4652      	mov	r2, sl
    44f6:	6413      	str	r3, [r2, #64]	; 0x40
    44f8:	46b8      	mov	r8, r7
    44fa:	2f00      	cmp	r7, #0
    44fc:	db37      	blt.n	456e <_dtoa_r+0xa6>
    44fe:	2300      	movs	r3, #0
    4500:	9a25      	ldr	r2, [sp, #148]	; 0x94
    4502:	6013      	str	r3, [r2, #0]
    4504:	4642      	mov	r2, r8
    4506:	4bd6      	ldr	r3, [pc, #856]	; (4860 <_dtoa_r+0x398>)
    4508:	401a      	ands	r2, r3
    450a:	429a      	cmp	r2, r3
    450c:	d018      	beq.n	4540 <_dtoa_r+0x78>
    450e:	2200      	movs	r2, #0
    4510:	2300      	movs	r3, #0
    4512:	0030      	movs	r0, r6
    4514:	0039      	movs	r1, r7
    4516:	f002 fa75 	bl	6a04 <__aeabi_dcmpeq>
    451a:	2800      	cmp	r0, #0
    451c:	d02f      	beq.n	457e <_dtoa_r+0xb6>
    451e:	2301      	movs	r3, #1
    4520:	9a24      	ldr	r2, [sp, #144]	; 0x90
    4522:	6013      	str	r3, [r2, #0]
    4524:	9b26      	ldr	r3, [sp, #152]	; 0x98
    4526:	2b00      	cmp	r3, #0
    4528:	d100      	bne.n	452c <_dtoa_r+0x64>
    452a:	e22a      	b.n	4982 <_dtoa_r+0x4ba>
    452c:	48cd      	ldr	r0, [pc, #820]	; (4864 <_dtoa_r+0x39c>)
    452e:	6018      	str	r0, [r3, #0]
    4530:	3801      	subs	r0, #1
    4532:	b019      	add	sp, #100	; 0x64
    4534:	bc3c      	pop	{r2, r3, r4, r5}
    4536:	4690      	mov	r8, r2
    4538:	4699      	mov	r9, r3
    453a:	46a2      	mov	sl, r4
    453c:	46ab      	mov	fp, r5
    453e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4540:	4bc9      	ldr	r3, [pc, #804]	; (4868 <_dtoa_r+0x3a0>)
    4542:	9a24      	ldr	r2, [sp, #144]	; 0x90
    4544:	6013      	str	r3, [r2, #0]
    4546:	2e00      	cmp	r6, #0
    4548:	d10b      	bne.n	4562 <_dtoa_r+0x9a>
    454a:	4643      	mov	r3, r8
    454c:	0318      	lsls	r0, r3, #12
    454e:	d108      	bne.n	4562 <_dtoa_r+0x9a>
    4550:	9b26      	ldr	r3, [sp, #152]	; 0x98
    4552:	48c6      	ldr	r0, [pc, #792]	; (486c <_dtoa_r+0x3a4>)
    4554:	2b00      	cmp	r3, #0
    4556:	d0ec      	beq.n	4532 <_dtoa_r+0x6a>
    4558:	0003      	movs	r3, r0
    455a:	3308      	adds	r3, #8
    455c:	9a26      	ldr	r2, [sp, #152]	; 0x98
    455e:	6013      	str	r3, [r2, #0]
    4560:	e7e7      	b.n	4532 <_dtoa_r+0x6a>
    4562:	9b26      	ldr	r3, [sp, #152]	; 0x98
    4564:	48c2      	ldr	r0, [pc, #776]	; (4870 <_dtoa_r+0x3a8>)
    4566:	2b00      	cmp	r3, #0
    4568:	d0e3      	beq.n	4532 <_dtoa_r+0x6a>
    456a:	1cc3      	adds	r3, r0, #3
    456c:	e7f6      	b.n	455c <_dtoa_r+0x94>
    456e:	2301      	movs	r3, #1
    4570:	9a25      	ldr	r2, [sp, #148]	; 0x94
    4572:	0068      	lsls	r0, r5, #1
    4574:	6013      	str	r3, [r2, #0]
    4576:	0843      	lsrs	r3, r0, #1
    4578:	4698      	mov	r8, r3
    457a:	001f      	movs	r7, r3
    457c:	e7c2      	b.n	4504 <_dtoa_r+0x3c>
    457e:	ab16      	add	r3, sp, #88	; 0x58
    4580:	9301      	str	r3, [sp, #4]
    4582:	ab17      	add	r3, sp, #92	; 0x5c
    4584:	9300      	str	r3, [sp, #0]
    4586:	0032      	movs	r2, r6
    4588:	003b      	movs	r3, r7
    458a:	4650      	mov	r0, sl
    458c:	f001 fd9e 	bl	60cc <__d2b>
    4590:	4643      	mov	r3, r8
    4592:	4683      	mov	fp, r0
    4594:	0d1a      	lsrs	r2, r3, #20
    4596:	d100      	bne.n	459a <_dtoa_r+0xd2>
    4598:	e1d6      	b.n	4948 <_dtoa_r+0x480>
    459a:	033b      	lsls	r3, r7, #12
    459c:	4cb5      	ldr	r4, [pc, #724]	; (4874 <_dtoa_r+0x3ac>)
    459e:	0b1b      	lsrs	r3, r3, #12
    45a0:	431c      	orrs	r4, r3
    45a2:	4bb5      	ldr	r3, [pc, #724]	; (4878 <_dtoa_r+0x3b0>)
    45a4:	0030      	movs	r0, r6
    45a6:	4698      	mov	r8, r3
    45a8:	9b16      	ldr	r3, [sp, #88]	; 0x58
    45aa:	0021      	movs	r1, r4
    45ac:	4699      	mov	r9, r3
    45ae:	2300      	movs	r3, #0
    45b0:	4490      	add	r8, r2
    45b2:	930f      	str	r3, [sp, #60]	; 0x3c
    45b4:	2200      	movs	r2, #0
    45b6:	4bb1      	ldr	r3, [pc, #708]	; (487c <_dtoa_r+0x3b4>)
    45b8:	f003 f996 	bl	78e8 <__aeabi_dsub>
    45bc:	4ab0      	ldr	r2, [pc, #704]	; (4880 <_dtoa_r+0x3b8>)
    45be:	4bb1      	ldr	r3, [pc, #708]	; (4884 <_dtoa_r+0x3bc>)
    45c0:	f7fd fe9c 	bl	22fc <__aeabi_dmul>
    45c4:	4ab0      	ldr	r2, [pc, #704]	; (4888 <_dtoa_r+0x3c0>)
    45c6:	4bb1      	ldr	r3, [pc, #708]	; (488c <_dtoa_r+0x3c4>)
    45c8:	f002 fa4a 	bl	6a60 <__aeabi_dadd>
    45cc:	0004      	movs	r4, r0
    45ce:	4640      	mov	r0, r8
    45d0:	000d      	movs	r5, r1
    45d2:	f7fe f913 	bl	27fc <__aeabi_i2d>
    45d6:	4aae      	ldr	r2, [pc, #696]	; (4890 <_dtoa_r+0x3c8>)
    45d8:	4bae      	ldr	r3, [pc, #696]	; (4894 <_dtoa_r+0x3cc>)
    45da:	f7fd fe8f 	bl	22fc <__aeabi_dmul>
    45de:	0002      	movs	r2, r0
    45e0:	000b      	movs	r3, r1
    45e2:	0020      	movs	r0, r4
    45e4:	0029      	movs	r1, r5
    45e6:	f002 fa3b 	bl	6a60 <__aeabi_dadd>
    45ea:	0004      	movs	r4, r0
    45ec:	000d      	movs	r5, r1
    45ee:	f003 fcb1 	bl	7f54 <__aeabi_d2iz>
    45f2:	2200      	movs	r2, #0
    45f4:	9003      	str	r0, [sp, #12]
    45f6:	2300      	movs	r3, #0
    45f8:	0020      	movs	r0, r4
    45fa:	0029      	movs	r1, r5
    45fc:	f002 fa08 	bl	6a10 <__aeabi_dcmplt>
    4600:	2800      	cmp	r0, #0
    4602:	d000      	beq.n	4606 <_dtoa_r+0x13e>
    4604:	e2b1      	b.n	4b6a <_dtoa_r+0x6a2>
    4606:	2301      	movs	r3, #1
    4608:	9c03      	ldr	r4, [sp, #12]
    460a:	930c      	str	r3, [sp, #48]	; 0x30
    460c:	2c16      	cmp	r4, #22
    460e:	d810      	bhi.n	4632 <_dtoa_r+0x16a>
    4610:	49a1      	ldr	r1, [pc, #644]	; (4898 <_dtoa_r+0x3d0>)
    4612:	00e3      	lsls	r3, r4, #3
    4614:	18c9      	adds	r1, r1, r3
    4616:	0032      	movs	r2, r6
    4618:	6808      	ldr	r0, [r1, #0]
    461a:	6849      	ldr	r1, [r1, #4]
    461c:	003b      	movs	r3, r7
    461e:	f002 fa0b 	bl	6a38 <__aeabi_dcmpgt>
    4622:	2800      	cmp	r0, #0
    4624:	d100      	bne.n	4628 <_dtoa_r+0x160>
    4626:	e31d      	b.n	4c64 <_dtoa_r+0x79c>
    4628:	0023      	movs	r3, r4
    462a:	3b01      	subs	r3, #1
    462c:	9303      	str	r3, [sp, #12]
    462e:	2300      	movs	r3, #0
    4630:	930c      	str	r3, [sp, #48]	; 0x30
    4632:	464b      	mov	r3, r9
    4634:	4642      	mov	r2, r8
    4636:	1a9a      	subs	r2, r3, r2
    4638:	2300      	movs	r3, #0
    463a:	9306      	str	r3, [sp, #24]
    463c:	0013      	movs	r3, r2
    463e:	3b01      	subs	r3, #1
    4640:	9304      	str	r3, [sp, #16]
    4642:	d500      	bpl.n	4646 <_dtoa_r+0x17e>
    4644:	e2a1      	b.n	4b8a <_dtoa_r+0x6c2>
    4646:	9b03      	ldr	r3, [sp, #12]
    4648:	2b00      	cmp	r3, #0
    464a:	da00      	bge.n	464e <_dtoa_r+0x186>
    464c:	e284      	b.n	4b58 <_dtoa_r+0x690>
    464e:	469c      	mov	ip, r3
    4650:	930d      	str	r3, [sp, #52]	; 0x34
    4652:	2300      	movs	r3, #0
    4654:	9a04      	ldr	r2, [sp, #16]
    4656:	4699      	mov	r9, r3
    4658:	0011      	movs	r1, r2
    465a:	4461      	add	r1, ip
    465c:	9104      	str	r1, [sp, #16]
    465e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4660:	2b09      	cmp	r3, #9
    4662:	d900      	bls.n	4666 <_dtoa_r+0x19e>
    4664:	e18f      	b.n	4986 <_dtoa_r+0x4be>
    4666:	2401      	movs	r4, #1
    4668:	2b05      	cmp	r3, #5
    466a:	dd02      	ble.n	4672 <_dtoa_r+0x1aa>
    466c:	2400      	movs	r4, #0
    466e:	3b04      	subs	r3, #4
    4670:	9322      	str	r3, [sp, #136]	; 0x88
    4672:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4674:	2b03      	cmp	r3, #3
    4676:	d101      	bne.n	467c <_dtoa_r+0x1b4>
    4678:	f000 fcce 	bl	5018 <_dtoa_r+0xb50>
    467c:	dc01      	bgt.n	4682 <_dtoa_r+0x1ba>
    467e:	f000 fc92 	bl	4fa6 <_dtoa_r+0xade>
    4682:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4684:	2b04      	cmp	r3, #4
    4686:	d101      	bne.n	468c <_dtoa_r+0x1c4>
    4688:	f000 fc40 	bl	4f0c <_dtoa_r+0xa44>
    468c:	2301      	movs	r3, #1
    468e:	930b      	str	r3, [sp, #44]	; 0x2c
    4690:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4692:	2b05      	cmp	r3, #5
    4694:	d001      	beq.n	469a <_dtoa_r+0x1d2>
    4696:	f000 fc8b 	bl	4fb0 <_dtoa_r+0xae8>
    469a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    469c:	9b03      	ldr	r3, [sp, #12]
    469e:	4694      	mov	ip, r2
    46a0:	4463      	add	r3, ip
    46a2:	930e      	str	r3, [sp, #56]	; 0x38
    46a4:	3301      	adds	r3, #1
    46a6:	9307      	str	r3, [sp, #28]
    46a8:	1e1d      	subs	r5, r3, #0
    46aa:	dc01      	bgt.n	46b0 <_dtoa_r+0x1e8>
    46ac:	f000 fd49 	bl	5142 <_dtoa_r+0xc7a>
    46b0:	9b07      	ldr	r3, [sp, #28]
    46b2:	4698      	mov	r8, r3
    46b4:	2300      	movs	r3, #0
    46b6:	4652      	mov	r2, sl
    46b8:	2100      	movs	r1, #0
    46ba:	6453      	str	r3, [r2, #68]	; 0x44
    46bc:	2d17      	cmp	r5, #23
    46be:	d90a      	bls.n	46d6 <_dtoa_r+0x20e>
    46c0:	2201      	movs	r2, #1
    46c2:	3304      	adds	r3, #4
    46c4:	005b      	lsls	r3, r3, #1
    46c6:	0018      	movs	r0, r3
    46c8:	3014      	adds	r0, #20
    46ca:	0011      	movs	r1, r2
    46cc:	3201      	adds	r2, #1
    46ce:	4285      	cmp	r5, r0
    46d0:	d2f8      	bcs.n	46c4 <_dtoa_r+0x1fc>
    46d2:	4653      	mov	r3, sl
    46d4:	6459      	str	r1, [r3, #68]	; 0x44
    46d6:	4650      	mov	r0, sl
    46d8:	f001 fa0e 	bl	5af8 <_Balloc>
    46dc:	4653      	mov	r3, sl
    46de:	6418      	str	r0, [r3, #64]	; 0x40
    46e0:	4643      	mov	r3, r8
    46e2:	900a      	str	r0, [sp, #40]	; 0x28
    46e4:	2b0e      	cmp	r3, #14
    46e6:	d900      	bls.n	46ea <_dtoa_r+0x222>
    46e8:	e161      	b.n	49ae <_dtoa_r+0x4e6>
    46ea:	2c00      	cmp	r4, #0
    46ec:	d100      	bne.n	46f0 <_dtoa_r+0x228>
    46ee:	e15e      	b.n	49ae <_dtoa_r+0x4e6>
    46f0:	9610      	str	r6, [sp, #64]	; 0x40
    46f2:	9711      	str	r7, [sp, #68]	; 0x44
    46f4:	9e03      	ldr	r6, [sp, #12]
    46f6:	2e00      	cmp	r6, #0
    46f8:	dc01      	bgt.n	46fe <_dtoa_r+0x236>
    46fa:	f000 fd25 	bl	5148 <_dtoa_r+0xc80>
    46fe:	0032      	movs	r2, r6
    4700:	210f      	movs	r1, #15
    4702:	4b65      	ldr	r3, [pc, #404]	; (4898 <_dtoa_r+0x3d0>)
    4704:	400a      	ands	r2, r1
    4706:	00d2      	lsls	r2, r2, #3
    4708:	189b      	adds	r3, r3, r2
    470a:	1136      	asrs	r6, r6, #4
    470c:	681c      	ldr	r4, [r3, #0]
    470e:	685d      	ldr	r5, [r3, #4]
    4710:	06f3      	lsls	r3, r6, #27
    4712:	d401      	bmi.n	4718 <_dtoa_r+0x250>
    4714:	f000 fcca 	bl	50ac <_dtoa_r+0xbe4>
    4718:	4b60      	ldr	r3, [pc, #384]	; (489c <_dtoa_r+0x3d4>)
    471a:	400e      	ands	r6, r1
    471c:	6a1a      	ldr	r2, [r3, #32]
    471e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    4720:	9810      	ldr	r0, [sp, #64]	; 0x40
    4722:	9911      	ldr	r1, [sp, #68]	; 0x44
    4724:	f002 fcac 	bl	7080 <__aeabi_ddiv>
    4728:	2303      	movs	r3, #3
    472a:	4698      	mov	r8, r3
    472c:	9008      	str	r0, [sp, #32]
    472e:	9109      	str	r1, [sp, #36]	; 0x24
    4730:	2e00      	cmp	r6, #0
    4732:	d011      	beq.n	4758 <_dtoa_r+0x290>
    4734:	4f59      	ldr	r7, [pc, #356]	; (489c <_dtoa_r+0x3d4>)
    4736:	2301      	movs	r3, #1
    4738:	4233      	tst	r3, r6
    473a:	d009      	beq.n	4750 <_dtoa_r+0x288>
    473c:	469c      	mov	ip, r3
    473e:	683a      	ldr	r2, [r7, #0]
    4740:	687b      	ldr	r3, [r7, #4]
    4742:	0020      	movs	r0, r4
    4744:	0029      	movs	r1, r5
    4746:	44e0      	add	r8, ip
    4748:	f7fd fdd8 	bl	22fc <__aeabi_dmul>
    474c:	0004      	movs	r4, r0
    474e:	000d      	movs	r5, r1
    4750:	1076      	asrs	r6, r6, #1
    4752:	3708      	adds	r7, #8
    4754:	2e00      	cmp	r6, #0
    4756:	d1ee      	bne.n	4736 <_dtoa_r+0x26e>
    4758:	0022      	movs	r2, r4
    475a:	9808      	ldr	r0, [sp, #32]
    475c:	9909      	ldr	r1, [sp, #36]	; 0x24
    475e:	002b      	movs	r3, r5
    4760:	f002 fc8e 	bl	7080 <__aeabi_ddiv>
    4764:	0006      	movs	r6, r0
    4766:	000f      	movs	r7, r1
    4768:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    476a:	2b00      	cmp	r3, #0
    476c:	d009      	beq.n	4782 <_dtoa_r+0x2ba>
    476e:	2200      	movs	r2, #0
    4770:	4b40      	ldr	r3, [pc, #256]	; (4874 <_dtoa_r+0x3ac>)
    4772:	0030      	movs	r0, r6
    4774:	0039      	movs	r1, r7
    4776:	f002 f94b 	bl	6a10 <__aeabi_dcmplt>
    477a:	2800      	cmp	r0, #0
    477c:	d001      	beq.n	4782 <_dtoa_r+0x2ba>
    477e:	f000 fdc2 	bl	5306 <_dtoa_r+0xe3e>
    4782:	4640      	mov	r0, r8
    4784:	f7fe f83a 	bl	27fc <__aeabi_i2d>
    4788:	0032      	movs	r2, r6
    478a:	003b      	movs	r3, r7
    478c:	f7fd fdb6 	bl	22fc <__aeabi_dmul>
    4790:	2200      	movs	r2, #0
    4792:	4b43      	ldr	r3, [pc, #268]	; (48a0 <_dtoa_r+0x3d8>)
    4794:	f002 f964 	bl	6a60 <__aeabi_dadd>
    4798:	4a42      	ldr	r2, [pc, #264]	; (48a4 <_dtoa_r+0x3dc>)
    479a:	000b      	movs	r3, r1
    479c:	4694      	mov	ip, r2
    479e:	4463      	add	r3, ip
    47a0:	9008      	str	r0, [sp, #32]
    47a2:	9109      	str	r1, [sp, #36]	; 0x24
    47a4:	9309      	str	r3, [sp, #36]	; 0x24
    47a6:	9b07      	ldr	r3, [sp, #28]
    47a8:	2b00      	cmp	r3, #0
    47aa:	d101      	bne.n	47b0 <_dtoa_r+0x2e8>
    47ac:	f000 fc50 	bl	5050 <_dtoa_r+0xb88>
    47b0:	9b03      	ldr	r3, [sp, #12]
    47b2:	9313      	str	r3, [sp, #76]	; 0x4c
    47b4:	9b07      	ldr	r3, [sp, #28]
    47b6:	9312      	str	r3, [sp, #72]	; 0x48
    47b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    47ba:	2b00      	cmp	r3, #0
    47bc:	d101      	bne.n	47c2 <_dtoa_r+0x2fa>
    47be:	f000 fd1d 	bl	51fc <_dtoa_r+0xd34>
    47c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    47c4:	2000      	movs	r0, #0
    47c6:	1e5a      	subs	r2, r3, #1
    47c8:	4b33      	ldr	r3, [pc, #204]	; (4898 <_dtoa_r+0x3d0>)
    47ca:	00d2      	lsls	r2, r2, #3
    47cc:	189b      	adds	r3, r3, r2
    47ce:	681a      	ldr	r2, [r3, #0]
    47d0:	685b      	ldr	r3, [r3, #4]
    47d2:	4935      	ldr	r1, [pc, #212]	; (48a8 <_dtoa_r+0x3e0>)
    47d4:	f002 fc54 	bl	7080 <__aeabi_ddiv>
    47d8:	9a08      	ldr	r2, [sp, #32]
    47da:	9b09      	ldr	r3, [sp, #36]	; 0x24
    47dc:	f003 f884 	bl	78e8 <__aeabi_dsub>
    47e0:	9008      	str	r0, [sp, #32]
    47e2:	9109      	str	r1, [sp, #36]	; 0x24
    47e4:	0039      	movs	r1, r7
    47e6:	0030      	movs	r0, r6
    47e8:	f003 fbb4 	bl	7f54 <__aeabi_d2iz>
    47ec:	0004      	movs	r4, r0
    47ee:	f7fe f805 	bl	27fc <__aeabi_i2d>
    47f2:	0002      	movs	r2, r0
    47f4:	000b      	movs	r3, r1
    47f6:	0030      	movs	r0, r6
    47f8:	0039      	movs	r1, r7
    47fa:	f003 f875 	bl	78e8 <__aeabi_dsub>
    47fe:	0005      	movs	r5, r0
    4800:	000e      	movs	r6, r1
    4802:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4804:	3430      	adds	r4, #48	; 0x30
    4806:	1c51      	adds	r1, r2, #1
    4808:	b2e7      	uxtb	r7, r4
    480a:	9114      	str	r1, [sp, #80]	; 0x50
    480c:	7017      	strb	r7, [r2, #0]
    480e:	0033      	movs	r3, r6
    4810:	9808      	ldr	r0, [sp, #32]
    4812:	9909      	ldr	r1, [sp, #36]	; 0x24
    4814:	002a      	movs	r2, r5
    4816:	f002 f90f 	bl	6a38 <__aeabi_dcmpgt>
    481a:	2800      	cmp	r0, #0
    481c:	d001      	beq.n	4822 <_dtoa_r+0x35a>
    481e:	f000 fdfe 	bl	541e <_dtoa_r+0xf56>
    4822:	002a      	movs	r2, r5
    4824:	0033      	movs	r3, r6
    4826:	2000      	movs	r0, #0
    4828:	4912      	ldr	r1, [pc, #72]	; (4874 <_dtoa_r+0x3ac>)
    482a:	f003 f85d 	bl	78e8 <__aeabi_dsub>
    482e:	0002      	movs	r2, r0
    4830:	000b      	movs	r3, r1
    4832:	9808      	ldr	r0, [sp, #32]
    4834:	9909      	ldr	r1, [sp, #36]	; 0x24
    4836:	f002 f8ff 	bl	6a38 <__aeabi_dcmpgt>
    483a:	2800      	cmp	r0, #0
    483c:	d001      	beq.n	4842 <_dtoa_r+0x37a>
    483e:	f000 fde7 	bl	5410 <_dtoa_r+0xf48>
    4842:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4844:	2b01      	cmp	r3, #1
    4846:	d101      	bne.n	484c <_dtoa_r+0x384>
    4848:	f000 fc78 	bl	513c <_dtoa_r+0xc74>
    484c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    484e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    4850:	4694      	mov	ip, r2
    4852:	4463      	add	r3, ip
    4854:	4698      	mov	r8, r3
    4856:	464b      	mov	r3, r9
    4858:	9312      	str	r3, [sp, #72]	; 0x48
    485a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    485c:	4699      	mov	r9, r3
    485e:	e038      	b.n	48d2 <_dtoa_r+0x40a>
    4860:	7ff00000 	.word	0x7ff00000
    4864:	000082a5 	.word	0x000082a5
    4868:	0000270f 	.word	0x0000270f
    486c:	000082c8 	.word	0x000082c8
    4870:	000082d4 	.word	0x000082d4
    4874:	3ff00000 	.word	0x3ff00000
    4878:	fffffc01 	.word	0xfffffc01
    487c:	3ff80000 	.word	0x3ff80000
    4880:	636f4361 	.word	0x636f4361
    4884:	3fd287a7 	.word	0x3fd287a7
    4888:	8b60c8b3 	.word	0x8b60c8b3
    488c:	3fc68a28 	.word	0x3fc68a28
    4890:	509f79fb 	.word	0x509f79fb
    4894:	3fd34413 	.word	0x3fd34413
    4898:	00008300 	.word	0x00008300
    489c:	000082d8 	.word	0x000082d8
    48a0:	401c0000 	.word	0x401c0000
    48a4:	fcc00000 	.word	0xfcc00000
    48a8:	3fe00000 	.word	0x3fe00000
    48ac:	002a      	movs	r2, r5
    48ae:	0033      	movs	r3, r6
    48b0:	2000      	movs	r0, #0
    48b2:	49b9      	ldr	r1, [pc, #740]	; (4b98 <_dtoa_r+0x6d0>)
    48b4:	f003 f818 	bl	78e8 <__aeabi_dsub>
    48b8:	9a08      	ldr	r2, [sp, #32]
    48ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
    48bc:	f002 f8a8 	bl	6a10 <__aeabi_dcmplt>
    48c0:	2800      	cmp	r0, #0
    48c2:	d001      	beq.n	48c8 <_dtoa_r+0x400>
    48c4:	f000 fd74 	bl	53b0 <_dtoa_r+0xee8>
    48c8:	46a1      	mov	r9, r4
    48ca:	4544      	cmp	r4, r8
    48cc:	d101      	bne.n	48d2 <_dtoa_r+0x40a>
    48ce:	f000 fc33 	bl	5138 <_dtoa_r+0xc70>
    48d2:	9808      	ldr	r0, [sp, #32]
    48d4:	9909      	ldr	r1, [sp, #36]	; 0x24
    48d6:	2200      	movs	r2, #0
    48d8:	4bb0      	ldr	r3, [pc, #704]	; (4b9c <_dtoa_r+0x6d4>)
    48da:	f7fd fd0f 	bl	22fc <__aeabi_dmul>
    48de:	2200      	movs	r2, #0
    48e0:	4bae      	ldr	r3, [pc, #696]	; (4b9c <_dtoa_r+0x6d4>)
    48e2:	9008      	str	r0, [sp, #32]
    48e4:	9109      	str	r1, [sp, #36]	; 0x24
    48e6:	0028      	movs	r0, r5
    48e8:	0031      	movs	r1, r6
    48ea:	f7fd fd07 	bl	22fc <__aeabi_dmul>
    48ee:	000d      	movs	r5, r1
    48f0:	0004      	movs	r4, r0
    48f2:	f003 fb2f 	bl	7f54 <__aeabi_d2iz>
    48f6:	0007      	movs	r7, r0
    48f8:	f7fd ff80 	bl	27fc <__aeabi_i2d>
    48fc:	0002      	movs	r2, r0
    48fe:	000b      	movs	r3, r1
    4900:	0020      	movs	r0, r4
    4902:	0029      	movs	r1, r5
    4904:	f002 fff0 	bl	78e8 <__aeabi_dsub>
    4908:	464b      	mov	r3, r9
    490a:	3730      	adds	r7, #48	; 0x30
    490c:	b2ff      	uxtb	r7, r7
    490e:	1c5c      	adds	r4, r3, #1
    4910:	701f      	strb	r7, [r3, #0]
    4912:	9a08      	ldr	r2, [sp, #32]
    4914:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4916:	0005      	movs	r5, r0
    4918:	000e      	movs	r6, r1
    491a:	f002 f879 	bl	6a10 <__aeabi_dcmplt>
    491e:	2800      	cmp	r0, #0
    4920:	d0c4      	beq.n	48ac <_dtoa_r+0x3e4>
    4922:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    4924:	9303      	str	r3, [sp, #12]
    4926:	4659      	mov	r1, fp
    4928:	4650      	mov	r0, sl
    492a:	f001 f90d 	bl	5b48 <_Bfree>
    492e:	2300      	movs	r3, #0
    4930:	7023      	strb	r3, [r4, #0]
    4932:	9b03      	ldr	r3, [sp, #12]
    4934:	9a24      	ldr	r2, [sp, #144]	; 0x90
    4936:	3301      	adds	r3, #1
    4938:	6013      	str	r3, [r2, #0]
    493a:	9b26      	ldr	r3, [sp, #152]	; 0x98
    493c:	2b00      	cmp	r3, #0
    493e:	d100      	bne.n	4942 <_dtoa_r+0x47a>
    4940:	e3a8      	b.n	5094 <_dtoa_r+0xbcc>
    4942:	601c      	str	r4, [r3, #0]
    4944:	980a      	ldr	r0, [sp, #40]	; 0x28
    4946:	e5f4      	b.n	4532 <_dtoa_r+0x6a>
    4948:	9b16      	ldr	r3, [sp, #88]	; 0x58
    494a:	4699      	mov	r9, r3
    494c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    494e:	444b      	add	r3, r9
    4950:	001c      	movs	r4, r3
    4952:	4b93      	ldr	r3, [pc, #588]	; (4ba0 <_dtoa_r+0x6d8>)
    4954:	18e3      	adds	r3, r4, r3
    4956:	2b20      	cmp	r3, #32
    4958:	dc00      	bgt.n	495c <_dtoa_r+0x494>
    495a:	e17e      	b.n	4c5a <_dtoa_r+0x792>
    495c:	0031      	movs	r1, r6
    495e:	4a91      	ldr	r2, [pc, #580]	; (4ba4 <_dtoa_r+0x6dc>)
    4960:	4640      	mov	r0, r8
    4962:	18a2      	adds	r2, r4, r2
    4964:	40d1      	lsrs	r1, r2
    4966:	000a      	movs	r2, r1
    4968:	2140      	movs	r1, #64	; 0x40
    496a:	1acb      	subs	r3, r1, r3
    496c:	4098      	lsls	r0, r3
    496e:	4310      	orrs	r0, r2
    4970:	f003 fb24 	bl	7fbc <__aeabi_ui2d>
    4974:	1e63      	subs	r3, r4, #1
    4976:	4698      	mov	r8, r3
    4978:	2301      	movs	r3, #1
    497a:	4d8b      	ldr	r5, [pc, #556]	; (4ba8 <_dtoa_r+0x6e0>)
    497c:	930f      	str	r3, [sp, #60]	; 0x3c
    497e:	1949      	adds	r1, r1, r5
    4980:	e618      	b.n	45b4 <_dtoa_r+0xec>
    4982:	488a      	ldr	r0, [pc, #552]	; (4bac <_dtoa_r+0x6e4>)
    4984:	e5d5      	b.n	4532 <_dtoa_r+0x6a>
    4986:	2300      	movs	r3, #0
    4988:	4652      	mov	r2, sl
    498a:	2100      	movs	r1, #0
    498c:	6453      	str	r3, [r2, #68]	; 0x44
    498e:	4650      	mov	r0, sl
    4990:	f001 f8b2 	bl	5af8 <_Balloc>
    4994:	4653      	mov	r3, sl
    4996:	6418      	str	r0, [r3, #64]	; 0x40
    4998:	2301      	movs	r3, #1
    499a:	425b      	negs	r3, r3
    499c:	9307      	str	r3, [sp, #28]
    499e:	930e      	str	r3, [sp, #56]	; 0x38
    49a0:	3302      	adds	r3, #2
    49a2:	2200      	movs	r2, #0
    49a4:	930b      	str	r3, [sp, #44]	; 0x2c
    49a6:	2300      	movs	r3, #0
    49a8:	900a      	str	r0, [sp, #40]	; 0x28
    49aa:	9223      	str	r2, [sp, #140]	; 0x8c
    49ac:	9322      	str	r3, [sp, #136]	; 0x88
    49ae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    49b0:	2b00      	cmp	r3, #0
    49b2:	da00      	bge.n	49b6 <_dtoa_r+0x4ee>
    49b4:	e0ab      	b.n	4b0e <_dtoa_r+0x646>
    49b6:	9a03      	ldr	r2, [sp, #12]
    49b8:	2a0e      	cmp	r2, #14
    49ba:	dd00      	ble.n	49be <_dtoa_r+0x4f6>
    49bc:	e0a7      	b.n	4b0e <_dtoa_r+0x646>
    49be:	4b7c      	ldr	r3, [pc, #496]	; (4bb0 <_dtoa_r+0x6e8>)
    49c0:	00d2      	lsls	r2, r2, #3
    49c2:	189b      	adds	r3, r3, r2
    49c4:	685c      	ldr	r4, [r3, #4]
    49c6:	681b      	ldr	r3, [r3, #0]
    49c8:	9304      	str	r3, [sp, #16]
    49ca:	9405      	str	r4, [sp, #20]
    49cc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    49ce:	2b00      	cmp	r3, #0
    49d0:	da00      	bge.n	49d4 <_dtoa_r+0x50c>
    49d2:	e2a7      	b.n	4f24 <_dtoa_r+0xa5c>
    49d4:	9c04      	ldr	r4, [sp, #16]
    49d6:	9d05      	ldr	r5, [sp, #20]
    49d8:	0030      	movs	r0, r6
    49da:	0022      	movs	r2, r4
    49dc:	002b      	movs	r3, r5
    49de:	0039      	movs	r1, r7
    49e0:	f002 fb4e 	bl	7080 <__aeabi_ddiv>
    49e4:	f003 fab6 	bl	7f54 <__aeabi_d2iz>
    49e8:	4680      	mov	r8, r0
    49ea:	f7fd ff07 	bl	27fc <__aeabi_i2d>
    49ee:	0022      	movs	r2, r4
    49f0:	002b      	movs	r3, r5
    49f2:	f7fd fc83 	bl	22fc <__aeabi_dmul>
    49f6:	0002      	movs	r2, r0
    49f8:	000b      	movs	r3, r1
    49fa:	0030      	movs	r0, r6
    49fc:	0039      	movs	r1, r7
    49fe:	f002 ff73 	bl	78e8 <__aeabi_dsub>
    4a02:	4643      	mov	r3, r8
    4a04:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4a06:	3330      	adds	r3, #48	; 0x30
    4a08:	7013      	strb	r3, [r2, #0]
    4a0a:	9b07      	ldr	r3, [sp, #28]
    4a0c:	0006      	movs	r6, r0
    4a0e:	000f      	movs	r7, r1
    4a10:	1c54      	adds	r4, r2, #1
    4a12:	2b01      	cmp	r3, #1
    4a14:	d04e      	beq.n	4ab4 <_dtoa_r+0x5ec>
    4a16:	2200      	movs	r2, #0
    4a18:	4b60      	ldr	r3, [pc, #384]	; (4b9c <_dtoa_r+0x6d4>)
    4a1a:	f7fd fc6f 	bl	22fc <__aeabi_dmul>
    4a1e:	2200      	movs	r2, #0
    4a20:	2300      	movs	r3, #0
    4a22:	0006      	movs	r6, r0
    4a24:	000f      	movs	r7, r1
    4a26:	f001 ffed 	bl	6a04 <__aeabi_dcmpeq>
    4a2a:	2800      	cmp	r0, #0
    4a2c:	d000      	beq.n	4a30 <_dtoa_r+0x568>
    4a2e:	e77a      	b.n	4926 <_dtoa_r+0x45e>
    4a30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4a32:	9a07      	ldr	r2, [sp, #28]
    4a34:	1c9d      	adds	r5, r3, #2
    4a36:	469c      	mov	ip, r3
    4a38:	465b      	mov	r3, fp
    4a3a:	9306      	str	r3, [sp, #24]
    4a3c:	4653      	mov	r3, sl
    4a3e:	4462      	add	r2, ip
    4a40:	46aa      	mov	sl, r5
    4a42:	9c04      	ldr	r4, [sp, #16]
    4a44:	9d05      	ldr	r5, [sp, #20]
    4a46:	4691      	mov	r9, r2
    4a48:	9307      	str	r3, [sp, #28]
    4a4a:	e00f      	b.n	4a6c <_dtoa_r+0x5a4>
    4a4c:	2200      	movs	r2, #0
    4a4e:	4b53      	ldr	r3, [pc, #332]	; (4b9c <_dtoa_r+0x6d4>)
    4a50:	f7fd fc54 	bl	22fc <__aeabi_dmul>
    4a54:	2301      	movs	r3, #1
    4a56:	469c      	mov	ip, r3
    4a58:	2200      	movs	r2, #0
    4a5a:	2300      	movs	r3, #0
    4a5c:	0006      	movs	r6, r0
    4a5e:	000f      	movs	r7, r1
    4a60:	44e2      	add	sl, ip
    4a62:	f001 ffcf 	bl	6a04 <__aeabi_dcmpeq>
    4a66:	2800      	cmp	r0, #0
    4a68:	d000      	beq.n	4a6c <_dtoa_r+0x5a4>
    4a6a:	e2d9      	b.n	5020 <_dtoa_r+0xb58>
    4a6c:	0022      	movs	r2, r4
    4a6e:	002b      	movs	r3, r5
    4a70:	0030      	movs	r0, r6
    4a72:	0039      	movs	r1, r7
    4a74:	f002 fb04 	bl	7080 <__aeabi_ddiv>
    4a78:	f003 fa6c 	bl	7f54 <__aeabi_d2iz>
    4a7c:	4680      	mov	r8, r0
    4a7e:	f7fd febd 	bl	27fc <__aeabi_i2d>
    4a82:	0022      	movs	r2, r4
    4a84:	002b      	movs	r3, r5
    4a86:	f7fd fc39 	bl	22fc <__aeabi_dmul>
    4a8a:	0002      	movs	r2, r0
    4a8c:	000b      	movs	r3, r1
    4a8e:	0030      	movs	r0, r6
    4a90:	0039      	movs	r1, r7
    4a92:	f002 ff29 	bl	78e8 <__aeabi_dsub>
    4a96:	4653      	mov	r3, sl
    4a98:	4642      	mov	r2, r8
    4a9a:	3b01      	subs	r3, #1
    4a9c:	3230      	adds	r2, #48	; 0x30
    4a9e:	0006      	movs	r6, r0
    4aa0:	000f      	movs	r7, r1
    4aa2:	46d3      	mov	fp, sl
    4aa4:	701a      	strb	r2, [r3, #0]
    4aa6:	45d1      	cmp	r9, sl
    4aa8:	d1d0      	bne.n	4a4c <_dtoa_r+0x584>
    4aaa:	9b06      	ldr	r3, [sp, #24]
    4aac:	4654      	mov	r4, sl
    4aae:	469b      	mov	fp, r3
    4ab0:	9b07      	ldr	r3, [sp, #28]
    4ab2:	469a      	mov	sl, r3
    4ab4:	0032      	movs	r2, r6
    4ab6:	003b      	movs	r3, r7
    4ab8:	0030      	movs	r0, r6
    4aba:	0039      	movs	r1, r7
    4abc:	f001 ffd0 	bl	6a60 <__aeabi_dadd>
    4ac0:	0006      	movs	r6, r0
    4ac2:	000f      	movs	r7, r1
    4ac4:	0002      	movs	r2, r0
    4ac6:	000b      	movs	r3, r1
    4ac8:	9804      	ldr	r0, [sp, #16]
    4aca:	9905      	ldr	r1, [sp, #20]
    4acc:	f001 ffa0 	bl	6a10 <__aeabi_dcmplt>
    4ad0:	2800      	cmp	r0, #0
    4ad2:	d10c      	bne.n	4aee <_dtoa_r+0x626>
    4ad4:	9804      	ldr	r0, [sp, #16]
    4ad6:	9905      	ldr	r1, [sp, #20]
    4ad8:	0032      	movs	r2, r6
    4ada:	003b      	movs	r3, r7
    4adc:	f001 ff92 	bl	6a04 <__aeabi_dcmpeq>
    4ae0:	2800      	cmp	r0, #0
    4ae2:	d100      	bne.n	4ae6 <_dtoa_r+0x61e>
    4ae4:	e71f      	b.n	4926 <_dtoa_r+0x45e>
    4ae6:	4643      	mov	r3, r8
    4ae8:	07db      	lsls	r3, r3, #31
    4aea:	d400      	bmi.n	4aee <_dtoa_r+0x626>
    4aec:	e71b      	b.n	4926 <_dtoa_r+0x45e>
    4aee:	1e65      	subs	r5, r4, #1
    4af0:	782f      	ldrb	r7, [r5, #0]
    4af2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4af4:	e006      	b.n	4b04 <_dtoa_r+0x63c>
    4af6:	429d      	cmp	r5, r3
    4af8:	d100      	bne.n	4afc <_dtoa_r+0x634>
    4afa:	e351      	b.n	51a0 <_dtoa_r+0xcd8>
    4afc:	3c02      	subs	r4, #2
    4afe:	7827      	ldrb	r7, [r4, #0]
    4b00:	002c      	movs	r4, r5
    4b02:	3d01      	subs	r5, #1
    4b04:	2f39      	cmp	r7, #57	; 0x39
    4b06:	d0f6      	beq.n	4af6 <_dtoa_r+0x62e>
    4b08:	3701      	adds	r7, #1
    4b0a:	702f      	strb	r7, [r5, #0]
    4b0c:	e70b      	b.n	4926 <_dtoa_r+0x45e>
    4b0e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    4b10:	2a00      	cmp	r2, #0
    4b12:	d04f      	beq.n	4bb4 <_dtoa_r+0x6ec>
    4b14:	9a22      	ldr	r2, [sp, #136]	; 0x88
    4b16:	2a01      	cmp	r2, #1
    4b18:	dc00      	bgt.n	4b1c <_dtoa_r+0x654>
    4b1a:	e22c      	b.n	4f76 <_dtoa_r+0xaae>
    4b1c:	9b07      	ldr	r3, [sp, #28]
    4b1e:	1e5c      	subs	r4, r3, #1
    4b20:	464b      	mov	r3, r9
    4b22:	45a1      	cmp	r9, r4
    4b24:	da00      	bge.n	4b28 <_dtoa_r+0x660>
    4b26:	e2b8      	b.n	509a <_dtoa_r+0xbd2>
    4b28:	1b1c      	subs	r4, r3, r4
    4b2a:	9b07      	ldr	r3, [sp, #28]
    4b2c:	2b00      	cmp	r3, #0
    4b2e:	da00      	bge.n	4b32 <_dtoa_r+0x66a>
    4b30:	e3d4      	b.n	52dc <_dtoa_r+0xe14>
    4b32:	9b06      	ldr	r3, [sp, #24]
    4b34:	9308      	str	r3, [sp, #32]
    4b36:	9b07      	ldr	r3, [sp, #28]
    4b38:	9a06      	ldr	r2, [sp, #24]
    4b3a:	2101      	movs	r1, #1
    4b3c:	4694      	mov	ip, r2
    4b3e:	449c      	add	ip, r3
    4b40:	4662      	mov	r2, ip
    4b42:	9206      	str	r2, [sp, #24]
    4b44:	9a04      	ldr	r2, [sp, #16]
    4b46:	4650      	mov	r0, sl
    4b48:	4694      	mov	ip, r2
    4b4a:	449c      	add	ip, r3
    4b4c:	4663      	mov	r3, ip
    4b4e:	9304      	str	r3, [sp, #16]
    4b50:	f001 f892 	bl	5c78 <__i2b>
    4b54:	4680      	mov	r8, r0
    4b56:	e032      	b.n	4bbe <_dtoa_r+0x6f6>
    4b58:	9a06      	ldr	r2, [sp, #24]
    4b5a:	9b03      	ldr	r3, [sp, #12]
    4b5c:	1ad2      	subs	r2, r2, r3
    4b5e:	425b      	negs	r3, r3
    4b60:	4699      	mov	r9, r3
    4b62:	2300      	movs	r3, #0
    4b64:	9206      	str	r2, [sp, #24]
    4b66:	930d      	str	r3, [sp, #52]	; 0x34
    4b68:	e579      	b.n	465e <_dtoa_r+0x196>
    4b6a:	9803      	ldr	r0, [sp, #12]
    4b6c:	f7fd fe46 	bl	27fc <__aeabi_i2d>
    4b70:	000b      	movs	r3, r1
    4b72:	0002      	movs	r2, r0
    4b74:	0029      	movs	r1, r5
    4b76:	0020      	movs	r0, r4
    4b78:	f001 ff44 	bl	6a04 <__aeabi_dcmpeq>
    4b7c:	0002      	movs	r2, r0
    4b7e:	4250      	negs	r0, r2
    4b80:	4150      	adcs	r0, r2
    4b82:	9b03      	ldr	r3, [sp, #12]
    4b84:	1a1b      	subs	r3, r3, r0
    4b86:	9303      	str	r3, [sp, #12]
    4b88:	e53d      	b.n	4606 <_dtoa_r+0x13e>
    4b8a:	2301      	movs	r3, #1
    4b8c:	1a9b      	subs	r3, r3, r2
    4b8e:	9306      	str	r3, [sp, #24]
    4b90:	2300      	movs	r3, #0
    4b92:	9304      	str	r3, [sp, #16]
    4b94:	e557      	b.n	4646 <_dtoa_r+0x17e>
    4b96:	46c0      	nop			; (mov r8, r8)
    4b98:	3ff00000 	.word	0x3ff00000
    4b9c:	40240000 	.word	0x40240000
    4ba0:	00000432 	.word	0x00000432
    4ba4:	00000412 	.word	0x00000412
    4ba8:	fe100000 	.word	0xfe100000
    4bac:	000082a4 	.word	0x000082a4
    4bb0:	00008300 	.word	0x00008300
    4bb4:	9b06      	ldr	r3, [sp, #24]
    4bb6:	464c      	mov	r4, r9
    4bb8:	9308      	str	r3, [sp, #32]
    4bba:	2300      	movs	r3, #0
    4bbc:	4698      	mov	r8, r3
    4bbe:	9908      	ldr	r1, [sp, #32]
    4bc0:	1e0b      	subs	r3, r1, #0
    4bc2:	dd0e      	ble.n	4be2 <_dtoa_r+0x71a>
    4bc4:	9a04      	ldr	r2, [sp, #16]
    4bc6:	2a00      	cmp	r2, #0
    4bc8:	dd0b      	ble.n	4be2 <_dtoa_r+0x71a>
    4bca:	4293      	cmp	r3, r2
    4bcc:	dd00      	ble.n	4bd0 <_dtoa_r+0x708>
    4bce:	e187      	b.n	4ee0 <_dtoa_r+0xa18>
    4bd0:	9a06      	ldr	r2, [sp, #24]
    4bd2:	1ad2      	subs	r2, r2, r3
    4bd4:	9206      	str	r2, [sp, #24]
    4bd6:	9a08      	ldr	r2, [sp, #32]
    4bd8:	1ad2      	subs	r2, r2, r3
    4bda:	9208      	str	r2, [sp, #32]
    4bdc:	9a04      	ldr	r2, [sp, #16]
    4bde:	1ad3      	subs	r3, r2, r3
    4be0:	9304      	str	r3, [sp, #16]
    4be2:	464b      	mov	r3, r9
    4be4:	2b00      	cmp	r3, #0
    4be6:	d01a      	beq.n	4c1e <_dtoa_r+0x756>
    4be8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4bea:	2b00      	cmp	r3, #0
    4bec:	d100      	bne.n	4bf0 <_dtoa_r+0x728>
    4bee:	e1bb      	b.n	4f68 <_dtoa_r+0xaa0>
    4bf0:	2c00      	cmp	r4, #0
    4bf2:	dd10      	ble.n	4c16 <_dtoa_r+0x74e>
    4bf4:	4641      	mov	r1, r8
    4bf6:	0022      	movs	r2, r4
    4bf8:	4650      	mov	r0, sl
    4bfa:	f001 f8f1 	bl	5de0 <__pow5mult>
    4bfe:	465a      	mov	r2, fp
    4c00:	0001      	movs	r1, r0
    4c02:	4680      	mov	r8, r0
    4c04:	4650      	mov	r0, sl
    4c06:	f001 f841 	bl	5c8c <__multiply>
    4c0a:	0005      	movs	r5, r0
    4c0c:	4659      	mov	r1, fp
    4c0e:	4650      	mov	r0, sl
    4c10:	f000 ff9a 	bl	5b48 <_Bfree>
    4c14:	46ab      	mov	fp, r5
    4c16:	464b      	mov	r3, r9
    4c18:	1b1a      	subs	r2, r3, r4
    4c1a:	d000      	beq.n	4c1e <_dtoa_r+0x756>
    4c1c:	e1a5      	b.n	4f6a <_dtoa_r+0xaa2>
    4c1e:	2101      	movs	r1, #1
    4c20:	4650      	mov	r0, sl
    4c22:	f001 f829 	bl	5c78 <__i2b>
    4c26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4c28:	4681      	mov	r9, r0
    4c2a:	2b00      	cmp	r3, #0
    4c2c:	dd1d      	ble.n	4c6a <_dtoa_r+0x7a2>
    4c2e:	001a      	movs	r2, r3
    4c30:	0001      	movs	r1, r0
    4c32:	4650      	mov	r0, sl
    4c34:	f001 f8d4 	bl	5de0 <__pow5mult>
    4c38:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4c3a:	4681      	mov	r9, r0
    4c3c:	2b01      	cmp	r3, #1
    4c3e:	dc00      	bgt.n	4c42 <_dtoa_r+0x77a>
    4c40:	e150      	b.n	4ee4 <_dtoa_r+0xa1c>
    4c42:	2400      	movs	r4, #0
    4c44:	464b      	mov	r3, r9
    4c46:	691b      	ldr	r3, [r3, #16]
    4c48:	3303      	adds	r3, #3
    4c4a:	009b      	lsls	r3, r3, #2
    4c4c:	444b      	add	r3, r9
    4c4e:	6858      	ldr	r0, [r3, #4]
    4c50:	f000 ffca 	bl	5be8 <__hi0bits>
    4c54:	2320      	movs	r3, #32
    4c56:	1a1b      	subs	r3, r3, r0
    4c58:	e010      	b.n	4c7c <_dtoa_r+0x7b4>
    4c5a:	2220      	movs	r2, #32
    4c5c:	0030      	movs	r0, r6
    4c5e:	1ad3      	subs	r3, r2, r3
    4c60:	4098      	lsls	r0, r3
    4c62:	e685      	b.n	4970 <_dtoa_r+0x4a8>
    4c64:	2300      	movs	r3, #0
    4c66:	930c      	str	r3, [sp, #48]	; 0x30
    4c68:	e4e3      	b.n	4632 <_dtoa_r+0x16a>
    4c6a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4c6c:	2400      	movs	r4, #0
    4c6e:	2b01      	cmp	r3, #1
    4c70:	dc00      	bgt.n	4c74 <_dtoa_r+0x7ac>
    4c72:	e18b      	b.n	4f8c <_dtoa_r+0xac4>
    4c74:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    4c76:	2301      	movs	r3, #1
    4c78:	2a00      	cmp	r2, #0
    4c7a:	d1e3      	bne.n	4c44 <_dtoa_r+0x77c>
    4c7c:	9904      	ldr	r1, [sp, #16]
    4c7e:	201f      	movs	r0, #31
    4c80:	468c      	mov	ip, r1
    4c82:	4463      	add	r3, ip
    4c84:	4018      	ands	r0, r3
    4c86:	d100      	bne.n	4c8a <_dtoa_r+0x7c2>
    4c88:	e0ae      	b.n	4de8 <_dtoa_r+0x920>
    4c8a:	2320      	movs	r3, #32
    4c8c:	1a1b      	subs	r3, r3, r0
    4c8e:	2b04      	cmp	r3, #4
    4c90:	dc00      	bgt.n	4c94 <_dtoa_r+0x7cc>
    4c92:	e3cc      	b.n	542e <_dtoa_r+0xf66>
    4c94:	231c      	movs	r3, #28
    4c96:	1a18      	subs	r0, r3, r0
    4c98:	9b06      	ldr	r3, [sp, #24]
    4c9a:	469c      	mov	ip, r3
    4c9c:	4484      	add	ip, r0
    4c9e:	4663      	mov	r3, ip
    4ca0:	9306      	str	r3, [sp, #24]
    4ca2:	9b08      	ldr	r3, [sp, #32]
    4ca4:	469c      	mov	ip, r3
    4ca6:	4484      	add	ip, r0
    4ca8:	4663      	mov	r3, ip
    4caa:	468c      	mov	ip, r1
    4cac:	4484      	add	ip, r0
    4cae:	9308      	str	r3, [sp, #32]
    4cb0:	4663      	mov	r3, ip
    4cb2:	9304      	str	r3, [sp, #16]
    4cb4:	9b06      	ldr	r3, [sp, #24]
    4cb6:	2b00      	cmp	r3, #0
    4cb8:	dd05      	ble.n	4cc6 <_dtoa_r+0x7fe>
    4cba:	4659      	mov	r1, fp
    4cbc:	001a      	movs	r2, r3
    4cbe:	4650      	mov	r0, sl
    4cc0:	f001 f8ee 	bl	5ea0 <__lshift>
    4cc4:	4683      	mov	fp, r0
    4cc6:	9b04      	ldr	r3, [sp, #16]
    4cc8:	2b00      	cmp	r3, #0
    4cca:	dd05      	ble.n	4cd8 <_dtoa_r+0x810>
    4ccc:	4649      	mov	r1, r9
    4cce:	001a      	movs	r2, r3
    4cd0:	4650      	mov	r0, sl
    4cd2:	f001 f8e5 	bl	5ea0 <__lshift>
    4cd6:	4681      	mov	r9, r0
    4cd8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4cda:	2b00      	cmp	r3, #0
    4cdc:	d000      	beq.n	4ce0 <_dtoa_r+0x818>
    4cde:	e094      	b.n	4e0a <_dtoa_r+0x942>
    4ce0:	9b07      	ldr	r3, [sp, #28]
    4ce2:	2b00      	cmp	r3, #0
    4ce4:	dc00      	bgt.n	4ce8 <_dtoa_r+0x820>
    4ce6:	e175      	b.n	4fd4 <_dtoa_r+0xb0c>
    4ce8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4cea:	2b00      	cmp	r3, #0
    4cec:	d100      	bne.n	4cf0 <_dtoa_r+0x828>
    4cee:	e0a6      	b.n	4e3e <_dtoa_r+0x976>
    4cf0:	9b08      	ldr	r3, [sp, #32]
    4cf2:	2b00      	cmp	r3, #0
    4cf4:	dd05      	ble.n	4d02 <_dtoa_r+0x83a>
    4cf6:	4641      	mov	r1, r8
    4cf8:	001a      	movs	r2, r3
    4cfa:	4650      	mov	r0, sl
    4cfc:	f001 f8d0 	bl	5ea0 <__lshift>
    4d00:	4680      	mov	r8, r0
    4d02:	4643      	mov	r3, r8
    4d04:	930c      	str	r3, [sp, #48]	; 0x30
    4d06:	2c00      	cmp	r4, #0
    4d08:	d000      	beq.n	4d0c <_dtoa_r+0x844>
    4d0a:	e250      	b.n	51ae <_dtoa_r+0xce6>
    4d0c:	9c07      	ldr	r4, [sp, #28]
    4d0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4d10:	3c01      	subs	r4, #1
    4d12:	0023      	movs	r3, r4
    4d14:	4694      	mov	ip, r2
    4d16:	4463      	add	r3, ip
    4d18:	9308      	str	r3, [sp, #32]
    4d1a:	2301      	movs	r3, #1
    4d1c:	4033      	ands	r3, r6
    4d1e:	9307      	str	r3, [sp, #28]
    4d20:	464b      	mov	r3, r9
    4d22:	9306      	str	r3, [sp, #24]
    4d24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4d26:	4657      	mov	r7, sl
    4d28:	4645      	mov	r5, r8
    4d2a:	465e      	mov	r6, fp
    4d2c:	4692      	mov	sl, r2
    4d2e:	4698      	mov	r8, r3
    4d30:	9b06      	ldr	r3, [sp, #24]
    4d32:	0030      	movs	r0, r6
    4d34:	0019      	movs	r1, r3
    4d36:	4699      	mov	r9, r3
    4d38:	f7ff fb1c 	bl	4374 <quorem>
    4d3c:	0003      	movs	r3, r0
    4d3e:	900b      	str	r0, [sp, #44]	; 0x2c
    4d40:	3330      	adds	r3, #48	; 0x30
    4d42:	0029      	movs	r1, r5
    4d44:	0030      	movs	r0, r6
    4d46:	9304      	str	r3, [sp, #16]
    4d48:	f001 f90a 	bl	5f60 <__mcmp>
    4d4c:	4649      	mov	r1, r9
    4d4e:	0004      	movs	r4, r0
    4d50:	4642      	mov	r2, r8
    4d52:	0038      	movs	r0, r7
    4d54:	f001 f91e 	bl	5f94 <__mdiff>
    4d58:	68c3      	ldr	r3, [r0, #12]
    4d5a:	4681      	mov	r9, r0
    4d5c:	2b00      	cmp	r3, #0
    4d5e:	d000      	beq.n	4d62 <_dtoa_r+0x89a>
    4d60:	e11e      	b.n	4fa0 <_dtoa_r+0xad8>
    4d62:	0001      	movs	r1, r0
    4d64:	0030      	movs	r0, r6
    4d66:	f001 f8fb 	bl	5f60 <__mcmp>
    4d6a:	4683      	mov	fp, r0
    4d6c:	4649      	mov	r1, r9
    4d6e:	0038      	movs	r0, r7
    4d70:	f000 feea 	bl	5b48 <_Bfree>
    4d74:	465b      	mov	r3, fp
    4d76:	9a22      	ldr	r2, [sp, #136]	; 0x88
    4d78:	4313      	orrs	r3, r2
    4d7a:	d103      	bne.n	4d84 <_dtoa_r+0x8bc>
    4d7c:	9b07      	ldr	r3, [sp, #28]
    4d7e:	2b00      	cmp	r3, #0
    4d80:	d100      	bne.n	4d84 <_dtoa_r+0x8bc>
    4d82:	e306      	b.n	5392 <_dtoa_r+0xeca>
    4d84:	2c00      	cmp	r4, #0
    4d86:	da00      	bge.n	4d8a <_dtoa_r+0x8c2>
    4d88:	e1a8      	b.n	50dc <_dtoa_r+0xc14>
    4d8a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4d8c:	431c      	orrs	r4, r3
    4d8e:	d103      	bne.n	4d98 <_dtoa_r+0x8d0>
    4d90:	9b07      	ldr	r3, [sp, #28]
    4d92:	2b00      	cmp	r3, #0
    4d94:	d100      	bne.n	4d98 <_dtoa_r+0x8d0>
    4d96:	e1a1      	b.n	50dc <_dtoa_r+0xc14>
    4d98:	465b      	mov	r3, fp
    4d9a:	2b00      	cmp	r3, #0
    4d9c:	dd00      	ble.n	4da0 <_dtoa_r+0x8d8>
    4d9e:	e282      	b.n	52a6 <_dtoa_r+0xdde>
    4da0:	4669      	mov	r1, sp
    4da2:	4652      	mov	r2, sl
    4da4:	4653      	mov	r3, sl
    4da6:	7c09      	ldrb	r1, [r1, #16]
    4da8:	1c5c      	adds	r4, r3, #1
    4daa:	7011      	strb	r1, [r2, #0]
    4dac:	9a08      	ldr	r2, [sp, #32]
    4dae:	4552      	cmp	r2, sl
    4db0:	d100      	bne.n	4db4 <_dtoa_r+0x8ec>
    4db2:	e28a      	b.n	52ca <_dtoa_r+0xe02>
    4db4:	0031      	movs	r1, r6
    4db6:	2300      	movs	r3, #0
    4db8:	220a      	movs	r2, #10
    4dba:	0038      	movs	r0, r7
    4dbc:	f000 fece 	bl	5b5c <__multadd>
    4dc0:	2300      	movs	r3, #0
    4dc2:	0006      	movs	r6, r0
    4dc4:	220a      	movs	r2, #10
    4dc6:	0029      	movs	r1, r5
    4dc8:	0038      	movs	r0, r7
    4dca:	4545      	cmp	r5, r8
    4dcc:	d100      	bne.n	4dd0 <_dtoa_r+0x908>
    4dce:	e0e1      	b.n	4f94 <_dtoa_r+0xacc>
    4dd0:	f000 fec4 	bl	5b5c <__multadd>
    4dd4:	4641      	mov	r1, r8
    4dd6:	0005      	movs	r5, r0
    4dd8:	2300      	movs	r3, #0
    4dda:	220a      	movs	r2, #10
    4ddc:	0038      	movs	r0, r7
    4dde:	f000 febd 	bl	5b5c <__multadd>
    4de2:	46a2      	mov	sl, r4
    4de4:	4680      	mov	r8, r0
    4de6:	e7a3      	b.n	4d30 <_dtoa_r+0x868>
    4de8:	201c      	movs	r0, #28
    4dea:	9b06      	ldr	r3, [sp, #24]
    4dec:	469c      	mov	ip, r3
    4dee:	4484      	add	ip, r0
    4df0:	4663      	mov	r3, ip
    4df2:	9306      	str	r3, [sp, #24]
    4df4:	9b08      	ldr	r3, [sp, #32]
    4df6:	469c      	mov	ip, r3
    4df8:	4484      	add	ip, r0
    4dfa:	4663      	mov	r3, ip
    4dfc:	9308      	str	r3, [sp, #32]
    4dfe:	9b04      	ldr	r3, [sp, #16]
    4e00:	469c      	mov	ip, r3
    4e02:	4484      	add	ip, r0
    4e04:	4663      	mov	r3, ip
    4e06:	9304      	str	r3, [sp, #16]
    4e08:	e754      	b.n	4cb4 <_dtoa_r+0x7ec>
    4e0a:	4649      	mov	r1, r9
    4e0c:	4658      	mov	r0, fp
    4e0e:	f001 f8a7 	bl	5f60 <__mcmp>
    4e12:	2800      	cmp	r0, #0
    4e14:	db00      	blt.n	4e18 <_dtoa_r+0x950>
    4e16:	e763      	b.n	4ce0 <_dtoa_r+0x818>
    4e18:	9b03      	ldr	r3, [sp, #12]
    4e1a:	4659      	mov	r1, fp
    4e1c:	3b01      	subs	r3, #1
    4e1e:	9303      	str	r3, [sp, #12]
    4e20:	220a      	movs	r2, #10
    4e22:	2300      	movs	r3, #0
    4e24:	4650      	mov	r0, sl
    4e26:	f000 fe99 	bl	5b5c <__multadd>
    4e2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4e2c:	4683      	mov	fp, r0
    4e2e:	2b00      	cmp	r3, #0
    4e30:	d000      	beq.n	4e34 <_dtoa_r+0x96c>
    4e32:	e2ca      	b.n	53ca <_dtoa_r+0xf02>
    4e34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    4e36:	2b00      	cmp	r3, #0
    4e38:	dc00      	bgt.n	4e3c <_dtoa_r+0x974>
    4e3a:	e2d8      	b.n	53ee <_dtoa_r+0xf26>
    4e3c:	9307      	str	r3, [sp, #28]
    4e3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4e40:	465d      	mov	r5, fp
    4e42:	2400      	movs	r4, #0
    4e44:	9f07      	ldr	r7, [sp, #28]
    4e46:	469b      	mov	fp, r3
    4e48:	e006      	b.n	4e58 <_dtoa_r+0x990>
    4e4a:	0029      	movs	r1, r5
    4e4c:	2300      	movs	r3, #0
    4e4e:	220a      	movs	r2, #10
    4e50:	4650      	mov	r0, sl
    4e52:	f000 fe83 	bl	5b5c <__multadd>
    4e56:	0005      	movs	r5, r0
    4e58:	4649      	mov	r1, r9
    4e5a:	0028      	movs	r0, r5
    4e5c:	f7ff fa8a 	bl	4374 <quorem>
    4e60:	465b      	mov	r3, fp
    4e62:	3030      	adds	r0, #48	; 0x30
    4e64:	5518      	strb	r0, [r3, r4]
    4e66:	3401      	adds	r4, #1
    4e68:	42bc      	cmp	r4, r7
    4e6a:	dbee      	blt.n	4e4a <_dtoa_r+0x982>
    4e6c:	46ab      	mov	fp, r5
    4e6e:	0006      	movs	r6, r0
    4e70:	9c07      	ldr	r4, [sp, #28]
    4e72:	2c00      	cmp	r4, #0
    4e74:	dc00      	bgt.n	4e78 <_dtoa_r+0x9b0>
    4e76:	e237      	b.n	52e8 <_dtoa_r+0xe20>
    4e78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4e7a:	2700      	movs	r7, #0
    4e7c:	469c      	mov	ip, r3
    4e7e:	4464      	add	r4, ip
    4e80:	4659      	mov	r1, fp
    4e82:	2201      	movs	r2, #1
    4e84:	4650      	mov	r0, sl
    4e86:	f001 f80b 	bl	5ea0 <__lshift>
    4e8a:	4649      	mov	r1, r9
    4e8c:	4683      	mov	fp, r0
    4e8e:	f001 f867 	bl	5f60 <__mcmp>
    4e92:	2800      	cmp	r0, #0
    4e94:	dc00      	bgt.n	4e98 <_dtoa_r+0x9d0>
    4e96:	e144      	b.n	5122 <_dtoa_r+0xc5a>
    4e98:	1e65      	subs	r5, r4, #1
    4e9a:	782b      	ldrb	r3, [r5, #0]
    4e9c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4e9e:	e006      	b.n	4eae <_dtoa_r+0x9e6>
    4ea0:	4295      	cmp	r5, r2
    4ea2:	d100      	bne.n	4ea6 <_dtoa_r+0x9de>
    4ea4:	e0b1      	b.n	500a <_dtoa_r+0xb42>
    4ea6:	3c02      	subs	r4, #2
    4ea8:	7823      	ldrb	r3, [r4, #0]
    4eaa:	002c      	movs	r4, r5
    4eac:	3d01      	subs	r5, #1
    4eae:	2b39      	cmp	r3, #57	; 0x39
    4eb0:	d0f6      	beq.n	4ea0 <_dtoa_r+0x9d8>
    4eb2:	3301      	adds	r3, #1
    4eb4:	702b      	strb	r3, [r5, #0]
    4eb6:	4649      	mov	r1, r9
    4eb8:	4650      	mov	r0, sl
    4eba:	f000 fe45 	bl	5b48 <_Bfree>
    4ebe:	4643      	mov	r3, r8
    4ec0:	2b00      	cmp	r3, #0
    4ec2:	d100      	bne.n	4ec6 <_dtoa_r+0x9fe>
    4ec4:	e52f      	b.n	4926 <_dtoa_r+0x45e>
    4ec6:	2f00      	cmp	r7, #0
    4ec8:	d005      	beq.n	4ed6 <_dtoa_r+0xa0e>
    4eca:	4547      	cmp	r7, r8
    4ecc:	d003      	beq.n	4ed6 <_dtoa_r+0xa0e>
    4ece:	0039      	movs	r1, r7
    4ed0:	4650      	mov	r0, sl
    4ed2:	f000 fe39 	bl	5b48 <_Bfree>
    4ed6:	4641      	mov	r1, r8
    4ed8:	4650      	mov	r0, sl
    4eda:	f000 fe35 	bl	5b48 <_Bfree>
    4ede:	e522      	b.n	4926 <_dtoa_r+0x45e>
    4ee0:	0013      	movs	r3, r2
    4ee2:	e675      	b.n	4bd0 <_dtoa_r+0x708>
    4ee4:	2e00      	cmp	r6, #0
    4ee6:	d000      	beq.n	4eea <_dtoa_r+0xa22>
    4ee8:	e6ab      	b.n	4c42 <_dtoa_r+0x77a>
    4eea:	033b      	lsls	r3, r7, #12
    4eec:	2400      	movs	r4, #0
    4eee:	2b00      	cmp	r3, #0
    4ef0:	d000      	beq.n	4ef4 <_dtoa_r+0xa2c>
    4ef2:	e6bf      	b.n	4c74 <_dtoa_r+0x7ac>
    4ef4:	4bba      	ldr	r3, [pc, #744]	; (51e0 <_dtoa_r+0xd18>)
    4ef6:	423b      	tst	r3, r7
    4ef8:	d100      	bne.n	4efc <_dtoa_r+0xa34>
    4efa:	e6bb      	b.n	4c74 <_dtoa_r+0x7ac>
    4efc:	9b06      	ldr	r3, [sp, #24]
    4efe:	3401      	adds	r4, #1
    4f00:	3301      	adds	r3, #1
    4f02:	9306      	str	r3, [sp, #24]
    4f04:	9b04      	ldr	r3, [sp, #16]
    4f06:	3301      	adds	r3, #1
    4f08:	9304      	str	r3, [sp, #16]
    4f0a:	e6b3      	b.n	4c74 <_dtoa_r+0x7ac>
    4f0c:	2301      	movs	r3, #1
    4f0e:	930b      	str	r3, [sp, #44]	; 0x2c
    4f10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    4f12:	2b00      	cmp	r3, #0
    4f14:	dc00      	bgt.n	4f18 <_dtoa_r+0xa50>
    4f16:	e0d1      	b.n	50bc <_dtoa_r+0xbf4>
    4f18:	001d      	movs	r5, r3
    4f1a:	4698      	mov	r8, r3
    4f1c:	930e      	str	r3, [sp, #56]	; 0x38
    4f1e:	9307      	str	r3, [sp, #28]
    4f20:	f7ff fbc8 	bl	46b4 <_dtoa_r+0x1ec>
    4f24:	9b07      	ldr	r3, [sp, #28]
    4f26:	2b00      	cmp	r3, #0
    4f28:	dd00      	ble.n	4f2c <_dtoa_r+0xa64>
    4f2a:	e553      	b.n	49d4 <_dtoa_r+0x50c>
    4f2c:	d000      	beq.n	4f30 <_dtoa_r+0xa68>
    4f2e:	e0ad      	b.n	508c <_dtoa_r+0xbc4>
    4f30:	9804      	ldr	r0, [sp, #16]
    4f32:	9905      	ldr	r1, [sp, #20]
    4f34:	2200      	movs	r2, #0
    4f36:	4bab      	ldr	r3, [pc, #684]	; (51e4 <_dtoa_r+0xd1c>)
    4f38:	f7fd f9e0 	bl	22fc <__aeabi_dmul>
    4f3c:	003b      	movs	r3, r7
    4f3e:	0032      	movs	r2, r6
    4f40:	f001 fd84 	bl	6a4c <__aeabi_dcmpge>
    4f44:	2300      	movs	r3, #0
    4f46:	4699      	mov	r9, r3
    4f48:	4698      	mov	r8, r3
    4f4a:	2800      	cmp	r0, #0
    4f4c:	d055      	beq.n	4ffa <_dtoa_r+0xb32>
    4f4e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    4f50:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    4f52:	43db      	mvns	r3, r3
    4f54:	9303      	str	r3, [sp, #12]
    4f56:	4649      	mov	r1, r9
    4f58:	4650      	mov	r0, sl
    4f5a:	f000 fdf5 	bl	5b48 <_Bfree>
    4f5e:	4643      	mov	r3, r8
    4f60:	2b00      	cmp	r3, #0
    4f62:	d100      	bne.n	4f66 <_dtoa_r+0xa9e>
    4f64:	e4df      	b.n	4926 <_dtoa_r+0x45e>
    4f66:	e7b6      	b.n	4ed6 <_dtoa_r+0xa0e>
    4f68:	464a      	mov	r2, r9
    4f6a:	4659      	mov	r1, fp
    4f6c:	4650      	mov	r0, sl
    4f6e:	f000 ff37 	bl	5de0 <__pow5mult>
    4f72:	4683      	mov	fp, r0
    4f74:	e653      	b.n	4c1e <_dtoa_r+0x756>
    4f76:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    4f78:	2a00      	cmp	r2, #0
    4f7a:	d100      	bne.n	4f7e <_dtoa_r+0xab6>
    4f7c:	e1b6      	b.n	52ec <_dtoa_r+0xe24>
    4f7e:	4a9a      	ldr	r2, [pc, #616]	; (51e8 <_dtoa_r+0xd20>)
    4f80:	464c      	mov	r4, r9
    4f82:	4694      	mov	ip, r2
    4f84:	9a06      	ldr	r2, [sp, #24]
    4f86:	4463      	add	r3, ip
    4f88:	9208      	str	r2, [sp, #32]
    4f8a:	e5d5      	b.n	4b38 <_dtoa_r+0x670>
    4f8c:	2e00      	cmp	r6, #0
    4f8e:	d000      	beq.n	4f92 <_dtoa_r+0xaca>
    4f90:	e670      	b.n	4c74 <_dtoa_r+0x7ac>
    4f92:	e7aa      	b.n	4eea <_dtoa_r+0xa22>
    4f94:	f000 fde2 	bl	5b5c <__multadd>
    4f98:	46a2      	mov	sl, r4
    4f9a:	0005      	movs	r5, r0
    4f9c:	4680      	mov	r8, r0
    4f9e:	e6c7      	b.n	4d30 <_dtoa_r+0x868>
    4fa0:	2301      	movs	r3, #1
    4fa2:	469b      	mov	fp, r3
    4fa4:	e6e2      	b.n	4d6c <_dtoa_r+0x8a4>
    4fa6:	2300      	movs	r3, #0
    4fa8:	930b      	str	r3, [sp, #44]	; 0x2c
    4faa:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4fac:	2b02      	cmp	r3, #2
    4fae:	d0af      	beq.n	4f10 <_dtoa_r+0xa48>
    4fb0:	2400      	movs	r4, #0
    4fb2:	4653      	mov	r3, sl
    4fb4:	0021      	movs	r1, r4
    4fb6:	645c      	str	r4, [r3, #68]	; 0x44
    4fb8:	4650      	mov	r0, sl
    4fba:	f000 fd9d 	bl	5af8 <_Balloc>
    4fbe:	4653      	mov	r3, sl
    4fc0:	6418      	str	r0, [r3, #64]	; 0x40
    4fc2:	2301      	movs	r3, #1
    4fc4:	425b      	negs	r3, r3
    4fc6:	9307      	str	r3, [sp, #28]
    4fc8:	930e      	str	r3, [sp, #56]	; 0x38
    4fca:	3302      	adds	r3, #2
    4fcc:	900a      	str	r0, [sp, #40]	; 0x28
    4fce:	9423      	str	r4, [sp, #140]	; 0x8c
    4fd0:	930b      	str	r3, [sp, #44]	; 0x2c
    4fd2:	e4ec      	b.n	49ae <_dtoa_r+0x4e6>
    4fd4:	9b22      	ldr	r3, [sp, #136]	; 0x88
    4fd6:	2b02      	cmp	r3, #2
    4fd8:	dc00      	bgt.n	4fdc <_dtoa_r+0xb14>
    4fda:	e685      	b.n	4ce8 <_dtoa_r+0x820>
    4fdc:	9b07      	ldr	r3, [sp, #28]
    4fde:	2b00      	cmp	r3, #0
    4fe0:	d1b5      	bne.n	4f4e <_dtoa_r+0xa86>
    4fe2:	4649      	mov	r1, r9
    4fe4:	2205      	movs	r2, #5
    4fe6:	4650      	mov	r0, sl
    4fe8:	f000 fdb8 	bl	5b5c <__multadd>
    4fec:	4681      	mov	r9, r0
    4fee:	0001      	movs	r1, r0
    4ff0:	4658      	mov	r0, fp
    4ff2:	f000 ffb5 	bl	5f60 <__mcmp>
    4ff6:	2800      	cmp	r0, #0
    4ff8:	dda9      	ble.n	4f4e <_dtoa_r+0xa86>
    4ffa:	2331      	movs	r3, #49	; 0x31
    4ffc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4ffe:	7013      	strb	r3, [r2, #0]
    5000:	9b03      	ldr	r3, [sp, #12]
    5002:	1c54      	adds	r4, r2, #1
    5004:	3301      	adds	r3, #1
    5006:	9303      	str	r3, [sp, #12]
    5008:	e7a5      	b.n	4f56 <_dtoa_r+0xa8e>
    500a:	9b03      	ldr	r3, [sp, #12]
    500c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    500e:	3301      	adds	r3, #1
    5010:	9303      	str	r3, [sp, #12]
    5012:	2331      	movs	r3, #49	; 0x31
    5014:	7013      	strb	r3, [r2, #0]
    5016:	e74e      	b.n	4eb6 <_dtoa_r+0x9ee>
    5018:	2300      	movs	r3, #0
    501a:	930b      	str	r3, [sp, #44]	; 0x2c
    501c:	f7ff fb3d 	bl	469a <_dtoa_r+0x1d2>
    5020:	9b06      	ldr	r3, [sp, #24]
    5022:	465c      	mov	r4, fp
    5024:	469b      	mov	fp, r3
    5026:	9b07      	ldr	r3, [sp, #28]
    5028:	469a      	mov	sl, r3
    502a:	e47c      	b.n	4926 <_dtoa_r+0x45e>
    502c:	4640      	mov	r0, r8
    502e:	f7fd fbe5 	bl	27fc <__aeabi_i2d>
    5032:	0032      	movs	r2, r6
    5034:	003b      	movs	r3, r7
    5036:	f7fd f961 	bl	22fc <__aeabi_dmul>
    503a:	2200      	movs	r2, #0
    503c:	4b6b      	ldr	r3, [pc, #428]	; (51ec <_dtoa_r+0xd24>)
    503e:	f001 fd0f 	bl	6a60 <__aeabi_dadd>
    5042:	4a6b      	ldr	r2, [pc, #428]	; (51f0 <_dtoa_r+0xd28>)
    5044:	000b      	movs	r3, r1
    5046:	4694      	mov	ip, r2
    5048:	4463      	add	r3, ip
    504a:	9008      	str	r0, [sp, #32]
    504c:	9109      	str	r1, [sp, #36]	; 0x24
    504e:	9309      	str	r3, [sp, #36]	; 0x24
    5050:	2200      	movs	r2, #0
    5052:	4b64      	ldr	r3, [pc, #400]	; (51e4 <_dtoa_r+0xd1c>)
    5054:	0030      	movs	r0, r6
    5056:	0039      	movs	r1, r7
    5058:	f002 fc46 	bl	78e8 <__aeabi_dsub>
    505c:	9e08      	ldr	r6, [sp, #32]
    505e:	9f09      	ldr	r7, [sp, #36]	; 0x24
    5060:	0032      	movs	r2, r6
    5062:	003b      	movs	r3, r7
    5064:	0004      	movs	r4, r0
    5066:	000d      	movs	r5, r1
    5068:	f001 fce6 	bl	6a38 <__aeabi_dcmpgt>
    506c:	2800      	cmp	r0, #0
    506e:	d000      	beq.n	5072 <_dtoa_r+0xbaa>
    5070:	e0b2      	b.n	51d8 <_dtoa_r+0xd10>
    5072:	2080      	movs	r0, #128	; 0x80
    5074:	0600      	lsls	r0, r0, #24
    5076:	4684      	mov	ip, r0
    5078:	0039      	movs	r1, r7
    507a:	4461      	add	r1, ip
    507c:	000b      	movs	r3, r1
    507e:	0032      	movs	r2, r6
    5080:	0020      	movs	r0, r4
    5082:	0029      	movs	r1, r5
    5084:	f001 fcc4 	bl	6a10 <__aeabi_dcmplt>
    5088:	2800      	cmp	r0, #0
    508a:	d057      	beq.n	513c <_dtoa_r+0xc74>
    508c:	2300      	movs	r3, #0
    508e:	4699      	mov	r9, r3
    5090:	4698      	mov	r8, r3
    5092:	e75c      	b.n	4f4e <_dtoa_r+0xa86>
    5094:	980a      	ldr	r0, [sp, #40]	; 0x28
    5096:	f7ff fa4c 	bl	4532 <_dtoa_r+0x6a>
    509a:	1ae2      	subs	r2, r4, r3
    509c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    509e:	46a1      	mov	r9, r4
    50a0:	469c      	mov	ip, r3
    50a2:	4494      	add	ip, r2
    50a4:	4663      	mov	r3, ip
    50a6:	2400      	movs	r4, #0
    50a8:	930d      	str	r3, [sp, #52]	; 0x34
    50aa:	e53e      	b.n	4b2a <_dtoa_r+0x662>
    50ac:	9a10      	ldr	r2, [sp, #64]	; 0x40
    50ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
    50b0:	9208      	str	r2, [sp, #32]
    50b2:	9309      	str	r3, [sp, #36]	; 0x24
    50b4:	2302      	movs	r3, #2
    50b6:	4698      	mov	r8, r3
    50b8:	f7ff fb3a 	bl	4730 <_dtoa_r+0x268>
    50bc:	2300      	movs	r3, #0
    50be:	4652      	mov	r2, sl
    50c0:	2100      	movs	r1, #0
    50c2:	6453      	str	r3, [r2, #68]	; 0x44
    50c4:	4650      	mov	r0, sl
    50c6:	f000 fd17 	bl	5af8 <_Balloc>
    50ca:	4653      	mov	r3, sl
    50cc:	6418      	str	r0, [r3, #64]	; 0x40
    50ce:	2301      	movs	r3, #1
    50d0:	900a      	str	r0, [sp, #40]	; 0x28
    50d2:	9307      	str	r3, [sp, #28]
    50d4:	9323      	str	r3, [sp, #140]	; 0x8c
    50d6:	930e      	str	r3, [sp, #56]	; 0x38
    50d8:	f7ff fb07 	bl	46ea <_dtoa_r+0x222>
    50dc:	4643      	mov	r3, r8
    50de:	930c      	str	r3, [sp, #48]	; 0x30
    50e0:	465b      	mov	r3, fp
    50e2:	9a06      	ldr	r2, [sp, #24]
    50e4:	46a8      	mov	r8, r5
    50e6:	46b3      	mov	fp, r6
    50e8:	4655      	mov	r5, sl
    50ea:	9e04      	ldr	r6, [sp, #16]
    50ec:	4691      	mov	r9, r2
    50ee:	46ba      	mov	sl, r7
    50f0:	2b00      	cmp	r3, #0
    50f2:	dd10      	ble.n	5116 <_dtoa_r+0xc4e>
    50f4:	4659      	mov	r1, fp
    50f6:	2201      	movs	r2, #1
    50f8:	0038      	movs	r0, r7
    50fa:	f000 fed1 	bl	5ea0 <__lshift>
    50fe:	4649      	mov	r1, r9
    5100:	4683      	mov	fp, r0
    5102:	f000 ff2d 	bl	5f60 <__mcmp>
    5106:	2800      	cmp	r0, #0
    5108:	dc00      	bgt.n	510c <_dtoa_r+0xc44>
    510a:	e157      	b.n	53bc <_dtoa_r+0xef4>
    510c:	2e39      	cmp	r6, #57	; 0x39
    510e:	d100      	bne.n	5112 <_dtoa_r+0xc4a>
    5110:	e122      	b.n	5358 <_dtoa_r+0xe90>
    5112:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    5114:	3631      	adds	r6, #49	; 0x31
    5116:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5118:	4647      	mov	r7, r8
    511a:	1c6c      	adds	r4, r5, #1
    511c:	702e      	strb	r6, [r5, #0]
    511e:	4698      	mov	r8, r3
    5120:	e6c9      	b.n	4eb6 <_dtoa_r+0x9ee>
    5122:	2800      	cmp	r0, #0
    5124:	d103      	bne.n	512e <_dtoa_r+0xc66>
    5126:	07f3      	lsls	r3, r6, #31
    5128:	d501      	bpl.n	512e <_dtoa_r+0xc66>
    512a:	e6b5      	b.n	4e98 <_dtoa_r+0x9d0>
    512c:	001c      	movs	r4, r3
    512e:	1e63      	subs	r3, r4, #1
    5130:	781a      	ldrb	r2, [r3, #0]
    5132:	2a30      	cmp	r2, #48	; 0x30
    5134:	d0fa      	beq.n	512c <_dtoa_r+0xc64>
    5136:	e6be      	b.n	4eb6 <_dtoa_r+0x9ee>
    5138:	9b12      	ldr	r3, [sp, #72]	; 0x48
    513a:	4699      	mov	r9, r3
    513c:	9e10      	ldr	r6, [sp, #64]	; 0x40
    513e:	9f11      	ldr	r7, [sp, #68]	; 0x44
    5140:	e435      	b.n	49ae <_dtoa_r+0x4e6>
    5142:	2501      	movs	r5, #1
    5144:	f7ff fab4 	bl	46b0 <_dtoa_r+0x1e8>
    5148:	9b03      	ldr	r3, [sp, #12]
    514a:	2b00      	cmp	r3, #0
    514c:	d100      	bne.n	5150 <_dtoa_r+0xc88>
    514e:	e0d4      	b.n	52fa <_dtoa_r+0xe32>
    5150:	9810      	ldr	r0, [sp, #64]	; 0x40
    5152:	9911      	ldr	r1, [sp, #68]	; 0x44
    5154:	425c      	negs	r4, r3
    5156:	230f      	movs	r3, #15
    5158:	4a26      	ldr	r2, [pc, #152]	; (51f4 <_dtoa_r+0xd2c>)
    515a:	4023      	ands	r3, r4
    515c:	00db      	lsls	r3, r3, #3
    515e:	18d3      	adds	r3, r2, r3
    5160:	681a      	ldr	r2, [r3, #0]
    5162:	685b      	ldr	r3, [r3, #4]
    5164:	f7fd f8ca 	bl	22fc <__aeabi_dmul>
    5168:	1124      	asrs	r4, r4, #4
    516a:	0006      	movs	r6, r0
    516c:	000f      	movs	r7, r1
    516e:	2c00      	cmp	r4, #0
    5170:	d100      	bne.n	5174 <_dtoa_r+0xcac>
    5172:	e149      	b.n	5408 <_dtoa_r+0xf40>
    5174:	2302      	movs	r3, #2
    5176:	4698      	mov	r8, r3
    5178:	4d1f      	ldr	r5, [pc, #124]	; (51f8 <_dtoa_r+0xd30>)
    517a:	2301      	movs	r3, #1
    517c:	4223      	tst	r3, r4
    517e:	d009      	beq.n	5194 <_dtoa_r+0xccc>
    5180:	469c      	mov	ip, r3
    5182:	682a      	ldr	r2, [r5, #0]
    5184:	686b      	ldr	r3, [r5, #4]
    5186:	0030      	movs	r0, r6
    5188:	0039      	movs	r1, r7
    518a:	44e0      	add	r8, ip
    518c:	f7fd f8b6 	bl	22fc <__aeabi_dmul>
    5190:	0006      	movs	r6, r0
    5192:	000f      	movs	r7, r1
    5194:	1064      	asrs	r4, r4, #1
    5196:	3508      	adds	r5, #8
    5198:	2c00      	cmp	r4, #0
    519a:	d1ee      	bne.n	517a <_dtoa_r+0xcb2>
    519c:	f7ff fae4 	bl	4768 <_dtoa_r+0x2a0>
    51a0:	9b03      	ldr	r3, [sp, #12]
    51a2:	2730      	movs	r7, #48	; 0x30
    51a4:	3301      	adds	r3, #1
    51a6:	9303      	str	r3, [sp, #12]
    51a8:	2330      	movs	r3, #48	; 0x30
    51aa:	702b      	strb	r3, [r5, #0]
    51ac:	e4ac      	b.n	4b08 <_dtoa_r+0x640>
    51ae:	6859      	ldr	r1, [r3, #4]
    51b0:	4650      	mov	r0, sl
    51b2:	f000 fca1 	bl	5af8 <_Balloc>
    51b6:	4643      	mov	r3, r8
    51b8:	4641      	mov	r1, r8
    51ba:	0004      	movs	r4, r0
    51bc:	691b      	ldr	r3, [r3, #16]
    51be:	310c      	adds	r1, #12
    51c0:	1c9a      	adds	r2, r3, #2
    51c2:	0092      	lsls	r2, r2, #2
    51c4:	300c      	adds	r0, #12
    51c6:	f000 fc45 	bl	5a54 <memcpy>
    51ca:	2201      	movs	r2, #1
    51cc:	0021      	movs	r1, r4
    51ce:	4650      	mov	r0, sl
    51d0:	f000 fe66 	bl	5ea0 <__lshift>
    51d4:	900c      	str	r0, [sp, #48]	; 0x30
    51d6:	e599      	b.n	4d0c <_dtoa_r+0x844>
    51d8:	2300      	movs	r3, #0
    51da:	4699      	mov	r9, r3
    51dc:	4698      	mov	r8, r3
    51de:	e70c      	b.n	4ffa <_dtoa_r+0xb32>
    51e0:	7ff00000 	.word	0x7ff00000
    51e4:	40140000 	.word	0x40140000
    51e8:	00000433 	.word	0x00000433
    51ec:	401c0000 	.word	0x401c0000
    51f0:	fcc00000 	.word	0xfcc00000
    51f4:	00008300 	.word	0x00008300
    51f8:	000082d8 	.word	0x000082d8
    51fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
    51fe:	498f      	ldr	r1, [pc, #572]	; (543c <_dtoa_r+0xf74>)
    5200:	3b01      	subs	r3, #1
    5202:	00db      	lsls	r3, r3, #3
    5204:	18c9      	adds	r1, r1, r3
    5206:	6808      	ldr	r0, [r1, #0]
    5208:	6849      	ldr	r1, [r1, #4]
    520a:	9a08      	ldr	r2, [sp, #32]
    520c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    520e:	f7fd f875 	bl	22fc <__aeabi_dmul>
    5212:	9014      	str	r0, [sp, #80]	; 0x50
    5214:	9115      	str	r1, [sp, #84]	; 0x54
    5216:	0039      	movs	r1, r7
    5218:	0030      	movs	r0, r6
    521a:	f002 fe9b 	bl	7f54 <__aeabi_d2iz>
    521e:	0005      	movs	r5, r0
    5220:	f7fd faec 	bl	27fc <__aeabi_i2d>
    5224:	0002      	movs	r2, r0
    5226:	000b      	movs	r3, r1
    5228:	0030      	movs	r0, r6
    522a:	0039      	movs	r1, r7
    522c:	f002 fb5c 	bl	78e8 <__aeabi_dsub>
    5230:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5232:	9008      	str	r0, [sp, #32]
    5234:	9109      	str	r1, [sp, #36]	; 0x24
    5236:	990a      	ldr	r1, [sp, #40]	; 0x28
    5238:	001a      	movs	r2, r3
    523a:	468c      	mov	ip, r1
    523c:	3530      	adds	r5, #48	; 0x30
    523e:	4462      	add	r2, ip
    5240:	1c4c      	adds	r4, r1, #1
    5242:	700d      	strb	r5, [r1, #0]
    5244:	4690      	mov	r8, r2
    5246:	2b01      	cmp	r3, #1
    5248:	d01b      	beq.n	5282 <_dtoa_r+0xdba>
    524a:	9808      	ldr	r0, [sp, #32]
    524c:	9909      	ldr	r1, [sp, #36]	; 0x24
    524e:	0025      	movs	r5, r4
    5250:	2200      	movs	r2, #0
    5252:	4b7b      	ldr	r3, [pc, #492]	; (5440 <_dtoa_r+0xf78>)
    5254:	f7fd f852 	bl	22fc <__aeabi_dmul>
    5258:	000f      	movs	r7, r1
    525a:	0006      	movs	r6, r0
    525c:	f002 fe7a 	bl	7f54 <__aeabi_d2iz>
    5260:	0004      	movs	r4, r0
    5262:	f7fd facb 	bl	27fc <__aeabi_i2d>
    5266:	3430      	adds	r4, #48	; 0x30
    5268:	0002      	movs	r2, r0
    526a:	000b      	movs	r3, r1
    526c:	0030      	movs	r0, r6
    526e:	0039      	movs	r1, r7
    5270:	f002 fb3a 	bl	78e8 <__aeabi_dsub>
    5274:	702c      	strb	r4, [r5, #0]
    5276:	3501      	adds	r5, #1
    5278:	45a8      	cmp	r8, r5
    527a:	d1e9      	bne.n	5250 <_dtoa_r+0xd88>
    527c:	4644      	mov	r4, r8
    527e:	9008      	str	r0, [sp, #32]
    5280:	9109      	str	r1, [sp, #36]	; 0x24
    5282:	9814      	ldr	r0, [sp, #80]	; 0x50
    5284:	9915      	ldr	r1, [sp, #84]	; 0x54
    5286:	2200      	movs	r2, #0
    5288:	4b6e      	ldr	r3, [pc, #440]	; (5444 <_dtoa_r+0xf7c>)
    528a:	f001 fbe9 	bl	6a60 <__aeabi_dadd>
    528e:	9a08      	ldr	r2, [sp, #32]
    5290:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5292:	f001 fbbd 	bl	6a10 <__aeabi_dcmplt>
    5296:	2800      	cmp	r0, #0
    5298:	d067      	beq.n	536a <_dtoa_r+0xea2>
    529a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    529c:	1e65      	subs	r5, r4, #1
    529e:	9303      	str	r3, [sp, #12]
    52a0:	782f      	ldrb	r7, [r5, #0]
    52a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    52a4:	e42e      	b.n	4b04 <_dtoa_r+0x63c>
    52a6:	4643      	mov	r3, r8
    52a8:	46b3      	mov	fp, r6
    52aa:	930c      	str	r3, [sp, #48]	; 0x30
    52ac:	9e04      	ldr	r6, [sp, #16]
    52ae:	9b06      	ldr	r3, [sp, #24]
    52b0:	46a8      	mov	r8, r5
    52b2:	4699      	mov	r9, r3
    52b4:	4655      	mov	r5, sl
    52b6:	46ba      	mov	sl, r7
    52b8:	2e39      	cmp	r6, #57	; 0x39
    52ba:	d04d      	beq.n	5358 <_dtoa_r+0xe90>
    52bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    52be:	3601      	adds	r6, #1
    52c0:	4647      	mov	r7, r8
    52c2:	1c6c      	adds	r4, r5, #1
    52c4:	702e      	strb	r6, [r5, #0]
    52c6:	4698      	mov	r8, r3
    52c8:	e5f5      	b.n	4eb6 <_dtoa_r+0x9ee>
    52ca:	4642      	mov	r2, r8
    52cc:	9b06      	ldr	r3, [sp, #24]
    52ce:	46b3      	mov	fp, r6
    52d0:	46ba      	mov	sl, r7
    52d2:	9e04      	ldr	r6, [sp, #16]
    52d4:	4699      	mov	r9, r3
    52d6:	002f      	movs	r7, r5
    52d8:	4690      	mov	r8, r2
    52da:	e5d1      	b.n	4e80 <_dtoa_r+0x9b8>
    52dc:	9b06      	ldr	r3, [sp, #24]
    52de:	9a07      	ldr	r2, [sp, #28]
    52e0:	1a9b      	subs	r3, r3, r2
    52e2:	9308      	str	r3, [sp, #32]
    52e4:	2300      	movs	r3, #0
    52e6:	e427      	b.n	4b38 <_dtoa_r+0x670>
    52e8:	2401      	movs	r4, #1
    52ea:	e5c5      	b.n	4e78 <_dtoa_r+0x9b0>
    52ec:	2336      	movs	r3, #54	; 0x36
    52ee:	9a16      	ldr	r2, [sp, #88]	; 0x58
    52f0:	464c      	mov	r4, r9
    52f2:	1a9b      	subs	r3, r3, r2
    52f4:	9a06      	ldr	r2, [sp, #24]
    52f6:	9208      	str	r2, [sp, #32]
    52f8:	e41e      	b.n	4b38 <_dtoa_r+0x670>
    52fa:	2302      	movs	r3, #2
    52fc:	9e10      	ldr	r6, [sp, #64]	; 0x40
    52fe:	9f11      	ldr	r7, [sp, #68]	; 0x44
    5300:	4698      	mov	r8, r3
    5302:	f7ff fa31 	bl	4768 <_dtoa_r+0x2a0>
    5306:	9b07      	ldr	r3, [sp, #28]
    5308:	2b00      	cmp	r3, #0
    530a:	d100      	bne.n	530e <_dtoa_r+0xe46>
    530c:	e68e      	b.n	502c <_dtoa_r+0xb64>
    530e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    5310:	2c00      	cmp	r4, #0
    5312:	dc00      	bgt.n	5316 <_dtoa_r+0xe4e>
    5314:	e712      	b.n	513c <_dtoa_r+0xc74>
    5316:	9b03      	ldr	r3, [sp, #12]
    5318:	2200      	movs	r2, #0
    531a:	3b01      	subs	r3, #1
    531c:	9313      	str	r3, [sp, #76]	; 0x4c
    531e:	0030      	movs	r0, r6
    5320:	4b47      	ldr	r3, [pc, #284]	; (5440 <_dtoa_r+0xf78>)
    5322:	0039      	movs	r1, r7
    5324:	f7fc ffea 	bl	22fc <__aeabi_dmul>
    5328:	0006      	movs	r6, r0
    532a:	4640      	mov	r0, r8
    532c:	000f      	movs	r7, r1
    532e:	3001      	adds	r0, #1
    5330:	f7fd fa64 	bl	27fc <__aeabi_i2d>
    5334:	0032      	movs	r2, r6
    5336:	003b      	movs	r3, r7
    5338:	f7fc ffe0 	bl	22fc <__aeabi_dmul>
    533c:	2200      	movs	r2, #0
    533e:	4b42      	ldr	r3, [pc, #264]	; (5448 <_dtoa_r+0xf80>)
    5340:	f001 fb8e 	bl	6a60 <__aeabi_dadd>
    5344:	4a41      	ldr	r2, [pc, #260]	; (544c <_dtoa_r+0xf84>)
    5346:	000b      	movs	r3, r1
    5348:	4694      	mov	ip, r2
    534a:	4463      	add	r3, ip
    534c:	9008      	str	r0, [sp, #32]
    534e:	9109      	str	r1, [sp, #36]	; 0x24
    5350:	9412      	str	r4, [sp, #72]	; 0x48
    5352:	9309      	str	r3, [sp, #36]	; 0x24
    5354:	f7ff fa30 	bl	47b8 <_dtoa_r+0x2f0>
    5358:	2339      	movs	r3, #57	; 0x39
    535a:	702b      	strb	r3, [r5, #0]
    535c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    535e:	4647      	mov	r7, r8
    5360:	1c6c      	adds	r4, r5, #1
    5362:	4698      	mov	r8, r3
    5364:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5366:	2339      	movs	r3, #57	; 0x39
    5368:	e5a1      	b.n	4eae <_dtoa_r+0x9e6>
    536a:	9a14      	ldr	r2, [sp, #80]	; 0x50
    536c:	9b15      	ldr	r3, [sp, #84]	; 0x54
    536e:	2000      	movs	r0, #0
    5370:	4934      	ldr	r1, [pc, #208]	; (5444 <_dtoa_r+0xf7c>)
    5372:	f002 fab9 	bl	78e8 <__aeabi_dsub>
    5376:	9a08      	ldr	r2, [sp, #32]
    5378:	9b09      	ldr	r3, [sp, #36]	; 0x24
    537a:	f001 fb5d 	bl	6a38 <__aeabi_dcmpgt>
    537e:	2800      	cmp	r0, #0
    5380:	d101      	bne.n	5386 <_dtoa_r+0xebe>
    5382:	e6db      	b.n	513c <_dtoa_r+0xc74>
    5384:	001c      	movs	r4, r3
    5386:	1e63      	subs	r3, r4, #1
    5388:	781a      	ldrb	r2, [r3, #0]
    538a:	2a30      	cmp	r2, #48	; 0x30
    538c:	d0fa      	beq.n	5384 <_dtoa_r+0xebc>
    538e:	f7ff fac8 	bl	4922 <_dtoa_r+0x45a>
    5392:	4643      	mov	r3, r8
    5394:	46b3      	mov	fp, r6
    5396:	930c      	str	r3, [sp, #48]	; 0x30
    5398:	9e04      	ldr	r6, [sp, #16]
    539a:	9b06      	ldr	r3, [sp, #24]
    539c:	46a8      	mov	r8, r5
    539e:	4699      	mov	r9, r3
    53a0:	4655      	mov	r5, sl
    53a2:	46ba      	mov	sl, r7
    53a4:	2e39      	cmp	r6, #57	; 0x39
    53a6:	d0d7      	beq.n	5358 <_dtoa_r+0xe90>
    53a8:	2c00      	cmp	r4, #0
    53aa:	dd00      	ble.n	53ae <_dtoa_r+0xee6>
    53ac:	e6b1      	b.n	5112 <_dtoa_r+0xc4a>
    53ae:	e6b2      	b.n	5116 <_dtoa_r+0xc4e>
    53b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    53b2:	464d      	mov	r5, r9
    53b4:	9203      	str	r2, [sp, #12]
    53b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    53b8:	f7ff fba4 	bl	4b04 <_dtoa_r+0x63c>
    53bc:	2800      	cmp	r0, #0
    53be:	d000      	beq.n	53c2 <_dtoa_r+0xefa>
    53c0:	e6a9      	b.n	5116 <_dtoa_r+0xc4e>
    53c2:	07f3      	lsls	r3, r6, #31
    53c4:	d400      	bmi.n	53c8 <_dtoa_r+0xf00>
    53c6:	e6a6      	b.n	5116 <_dtoa_r+0xc4e>
    53c8:	e6a0      	b.n	510c <_dtoa_r+0xc44>
    53ca:	2300      	movs	r3, #0
    53cc:	4641      	mov	r1, r8
    53ce:	220a      	movs	r2, #10
    53d0:	4650      	mov	r0, sl
    53d2:	f000 fbc3 	bl	5b5c <__multadd>
    53d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    53d8:	4680      	mov	r8, r0
    53da:	2b00      	cmp	r3, #0
    53dc:	dd01      	ble.n	53e2 <_dtoa_r+0xf1a>
    53de:	9307      	str	r3, [sp, #28]
    53e0:	e486      	b.n	4cf0 <_dtoa_r+0x828>
    53e2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    53e4:	2b02      	cmp	r3, #2
    53e6:	dc1f      	bgt.n	5428 <_dtoa_r+0xf60>
    53e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    53ea:	9307      	str	r3, [sp, #28]
    53ec:	e480      	b.n	4cf0 <_dtoa_r+0x828>
    53ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
    53f0:	2b02      	cmp	r3, #2
    53f2:	dc19      	bgt.n	5428 <_dtoa_r+0xf60>
    53f4:	4649      	mov	r1, r9
    53f6:	f7fe ffbd 	bl	4374 <quorem>
    53fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    53fc:	3030      	adds	r0, #48	; 0x30
    53fe:	7018      	strb	r0, [r3, #0]
    5400:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5402:	0006      	movs	r6, r0
    5404:	9307      	str	r3, [sp, #28]
    5406:	e533      	b.n	4e70 <_dtoa_r+0x9a8>
    5408:	2302      	movs	r3, #2
    540a:	4698      	mov	r8, r3
    540c:	f7ff f9ac 	bl	4768 <_dtoa_r+0x2a0>
    5410:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5412:	9c14      	ldr	r4, [sp, #80]	; 0x50
    5414:	9303      	str	r3, [sp, #12]
    5416:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5418:	001d      	movs	r5, r3
    541a:	f7ff fb73 	bl	4b04 <_dtoa_r+0x63c>
    541e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5420:	9c14      	ldr	r4, [sp, #80]	; 0x50
    5422:	9303      	str	r3, [sp, #12]
    5424:	f7ff fa7f 	bl	4926 <_dtoa_r+0x45e>
    5428:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    542a:	9307      	str	r3, [sp, #28]
    542c:	e5d6      	b.n	4fdc <_dtoa_r+0xb14>
    542e:	2b04      	cmp	r3, #4
    5430:	d100      	bne.n	5434 <_dtoa_r+0xf6c>
    5432:	e43f      	b.n	4cb4 <_dtoa_r+0x7ec>
    5434:	233c      	movs	r3, #60	; 0x3c
    5436:	1a18      	subs	r0, r3, r0
    5438:	e4d7      	b.n	4dea <_dtoa_r+0x922>
    543a:	46c0      	nop			; (mov r8, r8)
    543c:	00008300 	.word	0x00008300
    5440:	40240000 	.word	0x40240000
    5444:	3fe00000 	.word	0x3fe00000
    5448:	401c0000 	.word	0x401c0000
    544c:	fcc00000 	.word	0xfcc00000

00005450 <_localeconv_r>:
    5450:	4b04      	ldr	r3, [pc, #16]	; (5464 <_localeconv_r+0x14>)
    5452:	681b      	ldr	r3, [r3, #0]
    5454:	6b58      	ldr	r0, [r3, #52]	; 0x34
    5456:	2800      	cmp	r0, #0
    5458:	d001      	beq.n	545e <_localeconv_r+0xe>
    545a:	30f0      	adds	r0, #240	; 0xf0
    545c:	4770      	bx	lr
    545e:	4802      	ldr	r0, [pc, #8]	; (5468 <_localeconv_r+0x18>)
    5460:	e7fb      	b.n	545a <_localeconv_r+0xa>
    5462:	46c0      	nop			; (mov r8, r8)
    5464:	20000010 	.word	0x20000010
    5468:	20000854 	.word	0x20000854

0000546c <_malloc_r>:
    546c:	b5f0      	push	{r4, r5, r6, r7, lr}
    546e:	4657      	mov	r7, sl
    5470:	4645      	mov	r5, r8
    5472:	46de      	mov	lr, fp
    5474:	464e      	mov	r6, r9
    5476:	b5e0      	push	{r5, r6, r7, lr}
    5478:	000d      	movs	r5, r1
    547a:	350b      	adds	r5, #11
    547c:	b083      	sub	sp, #12
    547e:	0007      	movs	r7, r0
    5480:	2d16      	cmp	r5, #22
    5482:	d800      	bhi.n	5486 <_malloc_r+0x1a>
    5484:	e09f      	b.n	55c6 <_malloc_r+0x15a>
    5486:	2307      	movs	r3, #7
    5488:	439d      	bics	r5, r3
    548a:	d500      	bpl.n	548e <_malloc_r+0x22>
    548c:	e0c4      	b.n	5618 <_malloc_r+0x1ac>
    548e:	42a9      	cmp	r1, r5
    5490:	d900      	bls.n	5494 <_malloc_r+0x28>
    5492:	e0c1      	b.n	5618 <_malloc_r+0x1ac>
    5494:	f000 fb20 	bl	5ad8 <__malloc_lock>
    5498:	23f8      	movs	r3, #248	; 0xf8
    549a:	33ff      	adds	r3, #255	; 0xff
    549c:	429d      	cmp	r5, r3
    549e:	d800      	bhi.n	54a2 <_malloc_r+0x36>
    54a0:	e28f      	b.n	59c2 <_malloc_r+0x556>
    54a2:	0a68      	lsrs	r0, r5, #9
    54a4:	d100      	bne.n	54a8 <_malloc_r+0x3c>
    54a6:	e0bb      	b.n	5620 <_malloc_r+0x1b4>
    54a8:	2804      	cmp	r0, #4
    54aa:	d900      	bls.n	54ae <_malloc_r+0x42>
    54ac:	e162      	b.n	5774 <_malloc_r+0x308>
    54ae:	2338      	movs	r3, #56	; 0x38
    54b0:	4698      	mov	r8, r3
    54b2:	09a8      	lsrs	r0, r5, #6
    54b4:	4480      	add	r8, r0
    54b6:	3039      	adds	r0, #57	; 0x39
    54b8:	00c1      	lsls	r1, r0, #3
    54ba:	4ed2      	ldr	r6, [pc, #840]	; (5804 <_malloc_r+0x398>)
    54bc:	1871      	adds	r1, r6, r1
    54be:	3908      	subs	r1, #8
    54c0:	68cc      	ldr	r4, [r1, #12]
    54c2:	42a1      	cmp	r1, r4
    54c4:	d019      	beq.n	54fa <_malloc_r+0x8e>
    54c6:	2303      	movs	r3, #3
    54c8:	6862      	ldr	r2, [r4, #4]
    54ca:	439a      	bics	r2, r3
    54cc:	0013      	movs	r3, r2
    54ce:	1b52      	subs	r2, r2, r5
    54d0:	2a0f      	cmp	r2, #15
    54d2:	dd00      	ble.n	54d6 <_malloc_r+0x6a>
    54d4:	e0aa      	b.n	562c <_malloc_r+0x1c0>
    54d6:	2a00      	cmp	r2, #0
    54d8:	db00      	blt.n	54dc <_malloc_r+0x70>
    54da:	e088      	b.n	55ee <_malloc_r+0x182>
    54dc:	2303      	movs	r3, #3
    54de:	469c      	mov	ip, r3
    54e0:	e008      	b.n	54f4 <_malloc_r+0x88>
    54e2:	4662      	mov	r2, ip
    54e4:	6863      	ldr	r3, [r4, #4]
    54e6:	4393      	bics	r3, r2
    54e8:	1b5a      	subs	r2, r3, r5
    54ea:	2a0f      	cmp	r2, #15
    54ec:	dd00      	ble.n	54f0 <_malloc_r+0x84>
    54ee:	e09d      	b.n	562c <_malloc_r+0x1c0>
    54f0:	2a00      	cmp	r2, #0
    54f2:	da7c      	bge.n	55ee <_malloc_r+0x182>
    54f4:	68e4      	ldr	r4, [r4, #12]
    54f6:	42a1      	cmp	r1, r4
    54f8:	d1f3      	bne.n	54e2 <_malloc_r+0x76>
    54fa:	0032      	movs	r2, r6
    54fc:	6934      	ldr	r4, [r6, #16]
    54fe:	3208      	adds	r2, #8
    5500:	4294      	cmp	r4, r2
    5502:	d100      	bne.n	5506 <_malloc_r+0x9a>
    5504:	e190      	b.n	5828 <_malloc_r+0x3bc>
    5506:	2303      	movs	r3, #3
    5508:	6861      	ldr	r1, [r4, #4]
    550a:	4399      	bics	r1, r3
    550c:	4689      	mov	r9, r1
    550e:	1b49      	subs	r1, r1, r5
    5510:	290f      	cmp	r1, #15
    5512:	dd00      	ble.n	5516 <_malloc_r+0xaa>
    5514:	e162      	b.n	57dc <_malloc_r+0x370>
    5516:	6172      	str	r2, [r6, #20]
    5518:	6132      	str	r2, [r6, #16]
    551a:	2900      	cmp	r1, #0
    551c:	db00      	blt.n	5520 <_malloc_r+0xb4>
    551e:	e087      	b.n	5630 <_malloc_r+0x1c4>
    5520:	4ab9      	ldr	r2, [pc, #740]	; (5808 <_malloc_r+0x39c>)
    5522:	464b      	mov	r3, r9
    5524:	4591      	cmp	r9, r2
    5526:	d900      	bls.n	552a <_malloc_r+0xbe>
    5528:	e130      	b.n	578c <_malloc_r+0x320>
    552a:	08db      	lsrs	r3, r3, #3
    552c:	3aff      	subs	r2, #255	; 0xff
    552e:	1099      	asrs	r1, r3, #2
    5530:	3aff      	subs	r2, #255	; 0xff
    5532:	408a      	lsls	r2, r1
    5534:	00db      	lsls	r3, r3, #3
    5536:	6871      	ldr	r1, [r6, #4]
    5538:	199b      	adds	r3, r3, r6
    553a:	430a      	orrs	r2, r1
    553c:	6899      	ldr	r1, [r3, #8]
    553e:	6072      	str	r2, [r6, #4]
    5540:	60e3      	str	r3, [r4, #12]
    5542:	60a1      	str	r1, [r4, #8]
    5544:	609c      	str	r4, [r3, #8]
    5546:	0013      	movs	r3, r2
    5548:	60cc      	str	r4, [r1, #12]
    554a:	2101      	movs	r1, #1
    554c:	1082      	asrs	r2, r0, #2
    554e:	4091      	lsls	r1, r2
    5550:	4299      	cmp	r1, r3
    5552:	d86f      	bhi.n	5634 <_malloc_r+0x1c8>
    5554:	420b      	tst	r3, r1
    5556:	d105      	bne.n	5564 <_malloc_r+0xf8>
    5558:	2203      	movs	r2, #3
    555a:	4390      	bics	r0, r2
    555c:	0049      	lsls	r1, r1, #1
    555e:	3004      	adds	r0, #4
    5560:	420b      	tst	r3, r1
    5562:	d0fb      	beq.n	555c <_malloc_r+0xf0>
    5564:	2303      	movs	r3, #3
    5566:	4698      	mov	r8, r3
    5568:	00c3      	lsls	r3, r0, #3
    556a:	4699      	mov	r9, r3
    556c:	44b1      	add	r9, r6
    556e:	46cc      	mov	ip, r9
    5570:	4682      	mov	sl, r0
    5572:	4663      	mov	r3, ip
    5574:	68dc      	ldr	r4, [r3, #12]
    5576:	45a4      	cmp	ip, r4
    5578:	d107      	bne.n	558a <_malloc_r+0x11e>
    557a:	e157      	b.n	582c <_malloc_r+0x3c0>
    557c:	2a00      	cmp	r2, #0
    557e:	db00      	blt.n	5582 <_malloc_r+0x116>
    5580:	e166      	b.n	5850 <_malloc_r+0x3e4>
    5582:	68e4      	ldr	r4, [r4, #12]
    5584:	45a4      	cmp	ip, r4
    5586:	d100      	bne.n	558a <_malloc_r+0x11e>
    5588:	e150      	b.n	582c <_malloc_r+0x3c0>
    558a:	4642      	mov	r2, r8
    558c:	6863      	ldr	r3, [r4, #4]
    558e:	4393      	bics	r3, r2
    5590:	1b5a      	subs	r2, r3, r5
    5592:	2a0f      	cmp	r2, #15
    5594:	ddf2      	ble.n	557c <_malloc_r+0x110>
    5596:	2001      	movs	r0, #1
    5598:	4680      	mov	r8, r0
    559a:	1961      	adds	r1, r4, r5
    559c:	4305      	orrs	r5, r0
    559e:	6065      	str	r5, [r4, #4]
    55a0:	68a0      	ldr	r0, [r4, #8]
    55a2:	68e5      	ldr	r5, [r4, #12]
    55a4:	3608      	adds	r6, #8
    55a6:	60c5      	str	r5, [r0, #12]
    55a8:	60a8      	str	r0, [r5, #8]
    55aa:	4640      	mov	r0, r8
    55ac:	60f1      	str	r1, [r6, #12]
    55ae:	60b1      	str	r1, [r6, #8]
    55b0:	4310      	orrs	r0, r2
    55b2:	6048      	str	r0, [r1, #4]
    55b4:	60ce      	str	r6, [r1, #12]
    55b6:	608e      	str	r6, [r1, #8]
    55b8:	0038      	movs	r0, r7
    55ba:	50e2      	str	r2, [r4, r3]
    55bc:	f000 fa94 	bl	5ae8 <__malloc_unlock>
    55c0:	0020      	movs	r0, r4
    55c2:	3008      	adds	r0, #8
    55c4:	e021      	b.n	560a <_malloc_r+0x19e>
    55c6:	2910      	cmp	r1, #16
    55c8:	d826      	bhi.n	5618 <_malloc_r+0x1ac>
    55ca:	0038      	movs	r0, r7
    55cc:	f000 fa84 	bl	5ad8 <__malloc_lock>
    55d0:	2510      	movs	r5, #16
    55d2:	2318      	movs	r3, #24
    55d4:	2002      	movs	r0, #2
    55d6:	4e8b      	ldr	r6, [pc, #556]	; (5804 <_malloc_r+0x398>)
    55d8:	18f3      	adds	r3, r6, r3
    55da:	001a      	movs	r2, r3
    55dc:	685c      	ldr	r4, [r3, #4]
    55de:	3a08      	subs	r2, #8
    55e0:	4294      	cmp	r4, r2
    55e2:	d100      	bne.n	55e6 <_malloc_r+0x17a>
    55e4:	e12e      	b.n	5844 <_malloc_r+0x3d8>
    55e6:	2303      	movs	r3, #3
    55e8:	6862      	ldr	r2, [r4, #4]
    55ea:	439a      	bics	r2, r3
    55ec:	0013      	movs	r3, r2
    55ee:	68e2      	ldr	r2, [r4, #12]
    55f0:	68a1      	ldr	r1, [r4, #8]
    55f2:	60ca      	str	r2, [r1, #12]
    55f4:	6091      	str	r1, [r2, #8]
    55f6:	2201      	movs	r2, #1
    55f8:	18e3      	adds	r3, r4, r3
    55fa:	6859      	ldr	r1, [r3, #4]
    55fc:	0038      	movs	r0, r7
    55fe:	430a      	orrs	r2, r1
    5600:	605a      	str	r2, [r3, #4]
    5602:	f000 fa71 	bl	5ae8 <__malloc_unlock>
    5606:	0020      	movs	r0, r4
    5608:	3008      	adds	r0, #8
    560a:	b003      	add	sp, #12
    560c:	bc3c      	pop	{r2, r3, r4, r5}
    560e:	4690      	mov	r8, r2
    5610:	4699      	mov	r9, r3
    5612:	46a2      	mov	sl, r4
    5614:	46ab      	mov	fp, r5
    5616:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5618:	230c      	movs	r3, #12
    561a:	2000      	movs	r0, #0
    561c:	603b      	str	r3, [r7, #0]
    561e:	e7f4      	b.n	560a <_malloc_r+0x19e>
    5620:	2180      	movs	r1, #128	; 0x80
    5622:	233f      	movs	r3, #63	; 0x3f
    5624:	2040      	movs	r0, #64	; 0x40
    5626:	0089      	lsls	r1, r1, #2
    5628:	4698      	mov	r8, r3
    562a:	e746      	b.n	54ba <_malloc_r+0x4e>
    562c:	4640      	mov	r0, r8
    562e:	e764      	b.n	54fa <_malloc_r+0x8e>
    5630:	464b      	mov	r3, r9
    5632:	e7e0      	b.n	55f6 <_malloc_r+0x18a>
    5634:	2303      	movs	r3, #3
    5636:	68b4      	ldr	r4, [r6, #8]
    5638:	6862      	ldr	r2, [r4, #4]
    563a:	439a      	bics	r2, r3
    563c:	4690      	mov	r8, r2
    563e:	42aa      	cmp	r2, r5
    5640:	d303      	bcc.n	564a <_malloc_r+0x1de>
    5642:	1b53      	subs	r3, r2, r5
    5644:	2b0f      	cmp	r3, #15
    5646:	dd00      	ble.n	564a <_malloc_r+0x1de>
    5648:	e086      	b.n	5758 <_malloc_r+0x2ec>
    564a:	0023      	movs	r3, r4
    564c:	4443      	add	r3, r8
    564e:	4a6f      	ldr	r2, [pc, #444]	; (580c <_malloc_r+0x3a0>)
    5650:	9301      	str	r3, [sp, #4]
    5652:	4b6f      	ldr	r3, [pc, #444]	; (5810 <_malloc_r+0x3a4>)
    5654:	4693      	mov	fp, r2
    5656:	681b      	ldr	r3, [r3, #0]
    5658:	6812      	ldr	r2, [r2, #0]
    565a:	18eb      	adds	r3, r5, r3
    565c:	3201      	adds	r2, #1
    565e:	d100      	bne.n	5662 <_malloc_r+0x1f6>
    5660:	e168      	b.n	5934 <_malloc_r+0x4c8>
    5662:	4a6c      	ldr	r2, [pc, #432]	; (5814 <_malloc_r+0x3a8>)
    5664:	4694      	mov	ip, r2
    5666:	4463      	add	r3, ip
    5668:	0b1b      	lsrs	r3, r3, #12
    566a:	031b      	lsls	r3, r3, #12
    566c:	9300      	str	r3, [sp, #0]
    566e:	9900      	ldr	r1, [sp, #0]
    5670:	0038      	movs	r0, r7
    5672:	f000 fd89 	bl	6188 <_sbrk_r>
    5676:	0003      	movs	r3, r0
    5678:	4681      	mov	r9, r0
    567a:	3301      	adds	r3, #1
    567c:	d061      	beq.n	5742 <_malloc_r+0x2d6>
    567e:	9b01      	ldr	r3, [sp, #4]
    5680:	4283      	cmp	r3, r0
    5682:	d900      	bls.n	5686 <_malloc_r+0x21a>
    5684:	e0ff      	b.n	5886 <_malloc_r+0x41a>
    5686:	4b64      	ldr	r3, [pc, #400]	; (5818 <_malloc_r+0x3ac>)
    5688:	9a00      	ldr	r2, [sp, #0]
    568a:	469a      	mov	sl, r3
    568c:	681b      	ldr	r3, [r3, #0]
    568e:	469c      	mov	ip, r3
    5690:	4653      	mov	r3, sl
    5692:	4462      	add	r2, ip
    5694:	601a      	str	r2, [r3, #0]
    5696:	9b01      	ldr	r3, [sp, #4]
    5698:	0011      	movs	r1, r2
    569a:	4283      	cmp	r3, r0
    569c:	d100      	bne.n	56a0 <_malloc_r+0x234>
    569e:	e155      	b.n	594c <_malloc_r+0x4e0>
    56a0:	465b      	mov	r3, fp
    56a2:	681b      	ldr	r3, [r3, #0]
    56a4:	3301      	adds	r3, #1
    56a6:	d100      	bne.n	56aa <_malloc_r+0x23e>
    56a8:	e16c      	b.n	5984 <_malloc_r+0x518>
    56aa:	464b      	mov	r3, r9
    56ac:	9a01      	ldr	r2, [sp, #4]
    56ae:	1a9b      	subs	r3, r3, r2
    56b0:	1859      	adds	r1, r3, r1
    56b2:	4653      	mov	r3, sl
    56b4:	6019      	str	r1, [r3, #0]
    56b6:	2307      	movs	r3, #7
    56b8:	464a      	mov	r2, r9
    56ba:	4013      	ands	r3, r2
    56bc:	d100      	bne.n	56c0 <_malloc_r+0x254>
    56be:	e124      	b.n	590a <_malloc_r+0x49e>
    56c0:	2108      	movs	r1, #8
    56c2:	4689      	mov	r9, r1
    56c4:	4955      	ldr	r1, [pc, #340]	; (581c <_malloc_r+0x3b0>)
    56c6:	1ad2      	subs	r2, r2, r3
    56c8:	4491      	add	r9, r2
    56ca:	1acb      	subs	r3, r1, r3
    56cc:	9a00      	ldr	r2, [sp, #0]
    56ce:	0038      	movs	r0, r7
    56d0:	444a      	add	r2, r9
    56d2:	0511      	lsls	r1, r2, #20
    56d4:	0d09      	lsrs	r1, r1, #20
    56d6:	1a5b      	subs	r3, r3, r1
    56d8:	0019      	movs	r1, r3
    56da:	469b      	mov	fp, r3
    56dc:	f000 fd54 	bl	6188 <_sbrk_r>
    56e0:	1c43      	adds	r3, r0, #1
    56e2:	d100      	bne.n	56e6 <_malloc_r+0x27a>
    56e4:	e142      	b.n	596c <_malloc_r+0x500>
    56e6:	464b      	mov	r3, r9
    56e8:	1ac0      	subs	r0, r0, r3
    56ea:	2301      	movs	r3, #1
    56ec:	4458      	add	r0, fp
    56ee:	4318      	orrs	r0, r3
    56f0:	4653      	mov	r3, sl
    56f2:	681b      	ldr	r3, [r3, #0]
    56f4:	445b      	add	r3, fp
    56f6:	0019      	movs	r1, r3
    56f8:	4653      	mov	r3, sl
    56fa:	6019      	str	r1, [r3, #0]
    56fc:	464b      	mov	r3, r9
    56fe:	60b3      	str	r3, [r6, #8]
    5700:	6058      	str	r0, [r3, #4]
    5702:	42b4      	cmp	r4, r6
    5704:	d013      	beq.n	572e <_malloc_r+0x2c2>
    5706:	4643      	mov	r3, r8
    5708:	2b0f      	cmp	r3, #15
    570a:	d800      	bhi.n	570e <_malloc_r+0x2a2>
    570c:	e0e8      	b.n	58e0 <_malloc_r+0x474>
    570e:	4643      	mov	r3, r8
    5710:	2207      	movs	r2, #7
    5712:	6860      	ldr	r0, [r4, #4]
    5714:	3b0c      	subs	r3, #12
    5716:	4393      	bics	r3, r2
    5718:	3a06      	subs	r2, #6
    571a:	4002      	ands	r2, r0
    571c:	2005      	movs	r0, #5
    571e:	431a      	orrs	r2, r3
    5720:	6062      	str	r2, [r4, #4]
    5722:	18e2      	adds	r2, r4, r3
    5724:	6050      	str	r0, [r2, #4]
    5726:	6090      	str	r0, [r2, #8]
    5728:	2b0f      	cmp	r3, #15
    572a:	d900      	bls.n	572e <_malloc_r+0x2c2>
    572c:	e122      	b.n	5974 <_malloc_r+0x508>
    572e:	4b3c      	ldr	r3, [pc, #240]	; (5820 <_malloc_r+0x3b4>)
    5730:	681a      	ldr	r2, [r3, #0]
    5732:	4291      	cmp	r1, r2
    5734:	d900      	bls.n	5738 <_malloc_r+0x2cc>
    5736:	6019      	str	r1, [r3, #0]
    5738:	4b3a      	ldr	r3, [pc, #232]	; (5824 <_malloc_r+0x3b8>)
    573a:	681a      	ldr	r2, [r3, #0]
    573c:	4291      	cmp	r1, r2
    573e:	d900      	bls.n	5742 <_malloc_r+0x2d6>
    5740:	6019      	str	r1, [r3, #0]
    5742:	2303      	movs	r3, #3
    5744:	68b4      	ldr	r4, [r6, #8]
    5746:	6862      	ldr	r2, [r4, #4]
    5748:	439a      	bics	r2, r3
    574a:	1b53      	subs	r3, r2, r5
    574c:	4295      	cmp	r5, r2
    574e:	d900      	bls.n	5752 <_malloc_r+0x2e6>
    5750:	e0c9      	b.n	58e6 <_malloc_r+0x47a>
    5752:	2b0f      	cmp	r3, #15
    5754:	dc00      	bgt.n	5758 <_malloc_r+0x2ec>
    5756:	e0c6      	b.n	58e6 <_malloc_r+0x47a>
    5758:	2201      	movs	r2, #1
    575a:	0029      	movs	r1, r5
    575c:	4313      	orrs	r3, r2
    575e:	4311      	orrs	r1, r2
    5760:	1965      	adds	r5, r4, r5
    5762:	6061      	str	r1, [r4, #4]
    5764:	0038      	movs	r0, r7
    5766:	60b5      	str	r5, [r6, #8]
    5768:	606b      	str	r3, [r5, #4]
    576a:	f000 f9bd 	bl	5ae8 <__malloc_unlock>
    576e:	0020      	movs	r0, r4
    5770:	3008      	adds	r0, #8
    5772:	e74a      	b.n	560a <_malloc_r+0x19e>
    5774:	2814      	cmp	r0, #20
    5776:	d97a      	bls.n	586e <_malloc_r+0x402>
    5778:	2854      	cmp	r0, #84	; 0x54
    577a:	d900      	bls.n	577e <_malloc_r+0x312>
    577c:	e0ba      	b.n	58f4 <_malloc_r+0x488>
    577e:	236e      	movs	r3, #110	; 0x6e
    5780:	4698      	mov	r8, r3
    5782:	0b28      	lsrs	r0, r5, #12
    5784:	4480      	add	r8, r0
    5786:	306f      	adds	r0, #111	; 0x6f
    5788:	00c1      	lsls	r1, r0, #3
    578a:	e696      	b.n	54ba <_malloc_r+0x4e>
    578c:	0a5a      	lsrs	r2, r3, #9
    578e:	2a04      	cmp	r2, #4
    5790:	d973      	bls.n	587a <_malloc_r+0x40e>
    5792:	2a14      	cmp	r2, #20
    5794:	d900      	bls.n	5798 <_malloc_r+0x32c>
    5796:	e0d0      	b.n	593a <_malloc_r+0x4ce>
    5798:	0011      	movs	r1, r2
    579a:	325c      	adds	r2, #92	; 0x5c
    579c:	315b      	adds	r1, #91	; 0x5b
    579e:	00d2      	lsls	r2, r2, #3
    57a0:	2308      	movs	r3, #8
    57a2:	425b      	negs	r3, r3
    57a4:	469c      	mov	ip, r3
    57a6:	18b2      	adds	r2, r6, r2
    57a8:	4494      	add	ip, r2
    57aa:	4663      	mov	r3, ip
    57ac:	689a      	ldr	r2, [r3, #8]
    57ae:	2303      	movs	r3, #3
    57b0:	4698      	mov	r8, r3
    57b2:	4594      	cmp	ip, r2
    57b4:	d100      	bne.n	57b8 <_malloc_r+0x34c>
    57b6:	e0ab      	b.n	5910 <_malloc_r+0x4a4>
    57b8:	4643      	mov	r3, r8
    57ba:	6851      	ldr	r1, [r2, #4]
    57bc:	4399      	bics	r1, r3
    57be:	4589      	cmp	r9, r1
    57c0:	d300      	bcc.n	57c4 <_malloc_r+0x358>
    57c2:	e095      	b.n	58f0 <_malloc_r+0x484>
    57c4:	6892      	ldr	r2, [r2, #8]
    57c6:	4594      	cmp	ip, r2
    57c8:	d1f6      	bne.n	57b8 <_malloc_r+0x34c>
    57ca:	4663      	mov	r3, ip
    57cc:	68da      	ldr	r2, [r3, #12]
    57ce:	6873      	ldr	r3, [r6, #4]
    57d0:	4661      	mov	r1, ip
    57d2:	60e2      	str	r2, [r4, #12]
    57d4:	60a1      	str	r1, [r4, #8]
    57d6:	6094      	str	r4, [r2, #8]
    57d8:	60cc      	str	r4, [r1, #12]
    57da:	e6b6      	b.n	554a <_malloc_r+0xde>
    57dc:	2301      	movs	r3, #1
    57de:	1960      	adds	r0, r4, r5
    57e0:	431d      	orrs	r5, r3
    57e2:	6065      	str	r5, [r4, #4]
    57e4:	6170      	str	r0, [r6, #20]
    57e6:	6130      	str	r0, [r6, #16]
    57e8:	60c2      	str	r2, [r0, #12]
    57ea:	6082      	str	r2, [r0, #8]
    57ec:	001a      	movs	r2, r3
    57ee:	464b      	mov	r3, r9
    57f0:	430a      	orrs	r2, r1
    57f2:	6042      	str	r2, [r0, #4]
    57f4:	0038      	movs	r0, r7
    57f6:	50e1      	str	r1, [r4, r3]
    57f8:	f000 f976 	bl	5ae8 <__malloc_unlock>
    57fc:	0020      	movs	r0, r4
    57fe:	3008      	adds	r0, #8
    5800:	e703      	b.n	560a <_malloc_r+0x19e>
    5802:	46c0      	nop			; (mov r8, r8)
    5804:	20000444 	.word	0x20000444
    5808:	000001ff 	.word	0x000001ff
    580c:	2000084c 	.word	0x2000084c
    5810:	20000a4c 	.word	0x20000a4c
    5814:	0000100f 	.word	0x0000100f
    5818:	20000a1c 	.word	0x20000a1c
    581c:	00001008 	.word	0x00001008
    5820:	20000a44 	.word	0x20000a44
    5824:	20000a48 	.word	0x20000a48
    5828:	6873      	ldr	r3, [r6, #4]
    582a:	e68e      	b.n	554a <_malloc_r+0xde>
    582c:	2308      	movs	r3, #8
    582e:	469b      	mov	fp, r3
    5830:	3b07      	subs	r3, #7
    5832:	44dc      	add	ip, fp
    5834:	469b      	mov	fp, r3
    5836:	44da      	add	sl, fp
    5838:	4643      	mov	r3, r8
    583a:	4652      	mov	r2, sl
    583c:	4213      	tst	r3, r2
    583e:	d000      	beq.n	5842 <_malloc_r+0x3d6>
    5840:	e697      	b.n	5572 <_malloc_r+0x106>
    5842:	e037      	b.n	58b4 <_malloc_r+0x448>
    5844:	68dc      	ldr	r4, [r3, #12]
    5846:	3002      	adds	r0, #2
    5848:	42a3      	cmp	r3, r4
    584a:	d100      	bne.n	584e <_malloc_r+0x3e2>
    584c:	e655      	b.n	54fa <_malloc_r+0x8e>
    584e:	e6ca      	b.n	55e6 <_malloc_r+0x17a>
    5850:	2201      	movs	r2, #1
    5852:	18e3      	adds	r3, r4, r3
    5854:	6859      	ldr	r1, [r3, #4]
    5856:	0038      	movs	r0, r7
    5858:	430a      	orrs	r2, r1
    585a:	605a      	str	r2, [r3, #4]
    585c:	68e3      	ldr	r3, [r4, #12]
    585e:	68a2      	ldr	r2, [r4, #8]
    5860:	60d3      	str	r3, [r2, #12]
    5862:	609a      	str	r2, [r3, #8]
    5864:	f000 f940 	bl	5ae8 <__malloc_unlock>
    5868:	0020      	movs	r0, r4
    586a:	3008      	adds	r0, #8
    586c:	e6cd      	b.n	560a <_malloc_r+0x19e>
    586e:	235b      	movs	r3, #91	; 0x5b
    5870:	4698      	mov	r8, r3
    5872:	4480      	add	r8, r0
    5874:	305c      	adds	r0, #92	; 0x5c
    5876:	00c1      	lsls	r1, r0, #3
    5878:	e61f      	b.n	54ba <_malloc_r+0x4e>
    587a:	099a      	lsrs	r2, r3, #6
    587c:	0011      	movs	r1, r2
    587e:	3239      	adds	r2, #57	; 0x39
    5880:	3138      	adds	r1, #56	; 0x38
    5882:	00d2      	lsls	r2, r2, #3
    5884:	e78c      	b.n	57a0 <_malloc_r+0x334>
    5886:	42b4      	cmp	r4, r6
    5888:	d000      	beq.n	588c <_malloc_r+0x420>
    588a:	e75a      	b.n	5742 <_malloc_r+0x2d6>
    588c:	4b4f      	ldr	r3, [pc, #316]	; (59cc <_malloc_r+0x560>)
    588e:	9a00      	ldr	r2, [sp, #0]
    5890:	469a      	mov	sl, r3
    5892:	681b      	ldr	r3, [r3, #0]
    5894:	469c      	mov	ip, r3
    5896:	4653      	mov	r3, sl
    5898:	4462      	add	r2, ip
    589a:	0011      	movs	r1, r2
    589c:	601a      	str	r2, [r3, #0]
    589e:	e6ff      	b.n	56a0 <_malloc_r+0x234>
    58a0:	2308      	movs	r3, #8
    58a2:	425b      	negs	r3, r3
    58a4:	469c      	mov	ip, r3
    58a6:	44e1      	add	r9, ip
    58a8:	464b      	mov	r3, r9
    58aa:	689b      	ldr	r3, [r3, #8]
    58ac:	3801      	subs	r0, #1
    58ae:	4599      	cmp	r9, r3
    58b0:	d000      	beq.n	58b4 <_malloc_r+0x448>
    58b2:	e084      	b.n	59be <_malloc_r+0x552>
    58b4:	4643      	mov	r3, r8
    58b6:	4203      	tst	r3, r0
    58b8:	d1f2      	bne.n	58a0 <_malloc_r+0x434>
    58ba:	6873      	ldr	r3, [r6, #4]
    58bc:	438b      	bics	r3, r1
    58be:	6073      	str	r3, [r6, #4]
    58c0:	0049      	lsls	r1, r1, #1
    58c2:	4299      	cmp	r1, r3
    58c4:	d900      	bls.n	58c8 <_malloc_r+0x45c>
    58c6:	e6b5      	b.n	5634 <_malloc_r+0x1c8>
    58c8:	2900      	cmp	r1, #0
    58ca:	d100      	bne.n	58ce <_malloc_r+0x462>
    58cc:	e6b2      	b.n	5634 <_malloc_r+0x1c8>
    58ce:	4650      	mov	r0, sl
    58d0:	420b      	tst	r3, r1
    58d2:	d000      	beq.n	58d6 <_malloc_r+0x46a>
    58d4:	e648      	b.n	5568 <_malloc_r+0xfc>
    58d6:	0049      	lsls	r1, r1, #1
    58d8:	3004      	adds	r0, #4
    58da:	420b      	tst	r3, r1
    58dc:	d0fb      	beq.n	58d6 <_malloc_r+0x46a>
    58de:	e643      	b.n	5568 <_malloc_r+0xfc>
    58e0:	2301      	movs	r3, #1
    58e2:	464a      	mov	r2, r9
    58e4:	6053      	str	r3, [r2, #4]
    58e6:	0038      	movs	r0, r7
    58e8:	f000 f8fe 	bl	5ae8 <__malloc_unlock>
    58ec:	2000      	movs	r0, #0
    58ee:	e68c      	b.n	560a <_malloc_r+0x19e>
    58f0:	4694      	mov	ip, r2
    58f2:	e76a      	b.n	57ca <_malloc_r+0x35e>
    58f4:	23aa      	movs	r3, #170	; 0xaa
    58f6:	005b      	lsls	r3, r3, #1
    58f8:	4298      	cmp	r0, r3
    58fa:	d811      	bhi.n	5920 <_malloc_r+0x4b4>
    58fc:	3bdd      	subs	r3, #221	; 0xdd
    58fe:	4698      	mov	r8, r3
    5900:	0be8      	lsrs	r0, r5, #15
    5902:	4480      	add	r8, r0
    5904:	3078      	adds	r0, #120	; 0x78
    5906:	00c1      	lsls	r1, r0, #3
    5908:	e5d7      	b.n	54ba <_malloc_r+0x4e>
    590a:	2380      	movs	r3, #128	; 0x80
    590c:	015b      	lsls	r3, r3, #5
    590e:	e6dd      	b.n	56cc <_malloc_r+0x260>
    5910:	1089      	asrs	r1, r1, #2
    5912:	3b02      	subs	r3, #2
    5914:	408b      	lsls	r3, r1
    5916:	6872      	ldr	r2, [r6, #4]
    5918:	4313      	orrs	r3, r2
    591a:	6073      	str	r3, [r6, #4]
    591c:	4662      	mov	r2, ip
    591e:	e757      	b.n	57d0 <_malloc_r+0x364>
    5920:	4b2b      	ldr	r3, [pc, #172]	; (59d0 <_malloc_r+0x564>)
    5922:	4298      	cmp	r0, r3
    5924:	d81c      	bhi.n	5960 <_malloc_r+0x4f4>
    5926:	237c      	movs	r3, #124	; 0x7c
    5928:	4698      	mov	r8, r3
    592a:	0ca8      	lsrs	r0, r5, #18
    592c:	4480      	add	r8, r0
    592e:	307d      	adds	r0, #125	; 0x7d
    5930:	00c1      	lsls	r1, r0, #3
    5932:	e5c2      	b.n	54ba <_malloc_r+0x4e>
    5934:	3310      	adds	r3, #16
    5936:	9300      	str	r3, [sp, #0]
    5938:	e699      	b.n	566e <_malloc_r+0x202>
    593a:	2a54      	cmp	r2, #84	; 0x54
    593c:	d826      	bhi.n	598c <_malloc_r+0x520>
    593e:	464b      	mov	r3, r9
    5940:	0b1a      	lsrs	r2, r3, #12
    5942:	0011      	movs	r1, r2
    5944:	326f      	adds	r2, #111	; 0x6f
    5946:	316e      	adds	r1, #110	; 0x6e
    5948:	00d2      	lsls	r2, r2, #3
    594a:	e729      	b.n	57a0 <_malloc_r+0x334>
    594c:	051b      	lsls	r3, r3, #20
    594e:	d000      	beq.n	5952 <_malloc_r+0x4e6>
    5950:	e6a6      	b.n	56a0 <_malloc_r+0x234>
    5952:	2001      	movs	r0, #1
    5954:	9b00      	ldr	r3, [sp, #0]
    5956:	68b2      	ldr	r2, [r6, #8]
    5958:	4443      	add	r3, r8
    595a:	4303      	orrs	r3, r0
    595c:	6053      	str	r3, [r2, #4]
    595e:	e6e6      	b.n	572e <_malloc_r+0x2c2>
    5960:	21fe      	movs	r1, #254	; 0xfe
    5962:	237e      	movs	r3, #126	; 0x7e
    5964:	207f      	movs	r0, #127	; 0x7f
    5966:	0089      	lsls	r1, r1, #2
    5968:	4698      	mov	r8, r3
    596a:	e5a6      	b.n	54ba <_malloc_r+0x4e>
    596c:	2300      	movs	r3, #0
    596e:	2001      	movs	r0, #1
    5970:	469b      	mov	fp, r3
    5972:	e6bd      	b.n	56f0 <_malloc_r+0x284>
    5974:	0021      	movs	r1, r4
    5976:	0038      	movs	r0, r7
    5978:	3108      	adds	r1, #8
    597a:	f000 fd23 	bl	63c4 <_free_r>
    597e:	4653      	mov	r3, sl
    5980:	6819      	ldr	r1, [r3, #0]
    5982:	e6d4      	b.n	572e <_malloc_r+0x2c2>
    5984:	465b      	mov	r3, fp
    5986:	464a      	mov	r2, r9
    5988:	601a      	str	r2, [r3, #0]
    598a:	e694      	b.n	56b6 <_malloc_r+0x24a>
    598c:	21aa      	movs	r1, #170	; 0xaa
    598e:	0049      	lsls	r1, r1, #1
    5990:	428a      	cmp	r2, r1
    5992:	d806      	bhi.n	59a2 <_malloc_r+0x536>
    5994:	464b      	mov	r3, r9
    5996:	0bda      	lsrs	r2, r3, #15
    5998:	0011      	movs	r1, r2
    599a:	3278      	adds	r2, #120	; 0x78
    599c:	3177      	adds	r1, #119	; 0x77
    599e:	00d2      	lsls	r2, r2, #3
    59a0:	e6fe      	b.n	57a0 <_malloc_r+0x334>
    59a2:	490b      	ldr	r1, [pc, #44]	; (59d0 <_malloc_r+0x564>)
    59a4:	428a      	cmp	r2, r1
    59a6:	d806      	bhi.n	59b6 <_malloc_r+0x54a>
    59a8:	464b      	mov	r3, r9
    59aa:	0c9a      	lsrs	r2, r3, #18
    59ac:	0011      	movs	r1, r2
    59ae:	327d      	adds	r2, #125	; 0x7d
    59b0:	317c      	adds	r1, #124	; 0x7c
    59b2:	00d2      	lsls	r2, r2, #3
    59b4:	e6f4      	b.n	57a0 <_malloc_r+0x334>
    59b6:	22fe      	movs	r2, #254	; 0xfe
    59b8:	217e      	movs	r1, #126	; 0x7e
    59ba:	0092      	lsls	r2, r2, #2
    59bc:	e6f0      	b.n	57a0 <_malloc_r+0x334>
    59be:	6873      	ldr	r3, [r6, #4]
    59c0:	e77e      	b.n	58c0 <_malloc_r+0x454>
    59c2:	002b      	movs	r3, r5
    59c4:	08e8      	lsrs	r0, r5, #3
    59c6:	3308      	adds	r3, #8
    59c8:	e605      	b.n	55d6 <_malloc_r+0x16a>
    59ca:	46c0      	nop			; (mov r8, r8)
    59cc:	20000a1c 	.word	0x20000a1c
    59d0:	00000554 	.word	0x00000554

000059d4 <memchr>:
    59d4:	b570      	push	{r4, r5, r6, lr}
    59d6:	b2cd      	uxtb	r5, r1
    59d8:	0783      	lsls	r3, r0, #30
    59da:	d034      	beq.n	5a46 <memchr+0x72>
    59dc:	1e54      	subs	r4, r2, #1
    59de:	2a00      	cmp	r2, #0
    59e0:	d01b      	beq.n	5a1a <memchr+0x46>
    59e2:	7803      	ldrb	r3, [r0, #0]
    59e4:	42ab      	cmp	r3, r5
    59e6:	d019      	beq.n	5a1c <memchr+0x48>
    59e8:	2203      	movs	r2, #3
    59ea:	e004      	b.n	59f6 <memchr+0x22>
    59ec:	3c01      	subs	r4, #1
    59ee:	d314      	bcc.n	5a1a <memchr+0x46>
    59f0:	7803      	ldrb	r3, [r0, #0]
    59f2:	42ab      	cmp	r3, r5
    59f4:	d012      	beq.n	5a1c <memchr+0x48>
    59f6:	3001      	adds	r0, #1
    59f8:	4210      	tst	r0, r2
    59fa:	d1f7      	bne.n	59ec <memchr+0x18>
    59fc:	2c03      	cmp	r4, #3
    59fe:	d80e      	bhi.n	5a1e <memchr+0x4a>
    5a00:	2c00      	cmp	r4, #0
    5a02:	d00a      	beq.n	5a1a <memchr+0x46>
    5a04:	7803      	ldrb	r3, [r0, #0]
    5a06:	42ab      	cmp	r3, r5
    5a08:	d008      	beq.n	5a1c <memchr+0x48>
    5a0a:	1904      	adds	r4, r0, r4
    5a0c:	e002      	b.n	5a14 <memchr+0x40>
    5a0e:	7803      	ldrb	r3, [r0, #0]
    5a10:	42ab      	cmp	r3, r5
    5a12:	d003      	beq.n	5a1c <memchr+0x48>
    5a14:	3001      	adds	r0, #1
    5a16:	4284      	cmp	r4, r0
    5a18:	d1f9      	bne.n	5a0e <memchr+0x3a>
    5a1a:	2000      	movs	r0, #0
    5a1c:	bd70      	pop	{r4, r5, r6, pc}
    5a1e:	22ff      	movs	r2, #255	; 0xff
    5a20:	060b      	lsls	r3, r1, #24
    5a22:	0c1b      	lsrs	r3, r3, #16
    5a24:	4011      	ands	r1, r2
    5a26:	4319      	orrs	r1, r3
    5a28:	040b      	lsls	r3, r1, #16
    5a2a:	4e08      	ldr	r6, [pc, #32]	; (5a4c <memchr+0x78>)
    5a2c:	4319      	orrs	r1, r3
    5a2e:	6803      	ldr	r3, [r0, #0]
    5a30:	4a07      	ldr	r2, [pc, #28]	; (5a50 <memchr+0x7c>)
    5a32:	404b      	eors	r3, r1
    5a34:	189a      	adds	r2, r3, r2
    5a36:	439a      	bics	r2, r3
    5a38:	4232      	tst	r2, r6
    5a3a:	d1e3      	bne.n	5a04 <memchr+0x30>
    5a3c:	3c04      	subs	r4, #4
    5a3e:	3004      	adds	r0, #4
    5a40:	2c03      	cmp	r4, #3
    5a42:	d8f4      	bhi.n	5a2e <memchr+0x5a>
    5a44:	e7dc      	b.n	5a00 <memchr+0x2c>
    5a46:	0014      	movs	r4, r2
    5a48:	e7d8      	b.n	59fc <memchr+0x28>
    5a4a:	46c0      	nop			; (mov r8, r8)
    5a4c:	80808080 	.word	0x80808080
    5a50:	fefefeff 	.word	0xfefefeff

00005a54 <memcpy>:
    5a54:	b5f0      	push	{r4, r5, r6, r7, lr}
    5a56:	0005      	movs	r5, r0
    5a58:	2a0f      	cmp	r2, #15
    5a5a:	d92f      	bls.n	5abc <memcpy+0x68>
    5a5c:	000b      	movs	r3, r1
    5a5e:	4303      	orrs	r3, r0
    5a60:	079b      	lsls	r3, r3, #30
    5a62:	d134      	bne.n	5ace <memcpy+0x7a>
    5a64:	0016      	movs	r6, r2
    5a66:	000c      	movs	r4, r1
    5a68:	0003      	movs	r3, r0
    5a6a:	3e10      	subs	r6, #16
    5a6c:	0935      	lsrs	r5, r6, #4
    5a6e:	3501      	adds	r5, #1
    5a70:	012d      	lsls	r5, r5, #4
    5a72:	1945      	adds	r5, r0, r5
    5a74:	6827      	ldr	r7, [r4, #0]
    5a76:	601f      	str	r7, [r3, #0]
    5a78:	6867      	ldr	r7, [r4, #4]
    5a7a:	605f      	str	r7, [r3, #4]
    5a7c:	68a7      	ldr	r7, [r4, #8]
    5a7e:	609f      	str	r7, [r3, #8]
    5a80:	68e7      	ldr	r7, [r4, #12]
    5a82:	3410      	adds	r4, #16
    5a84:	60df      	str	r7, [r3, #12]
    5a86:	3310      	adds	r3, #16
    5a88:	429d      	cmp	r5, r3
    5a8a:	d1f3      	bne.n	5a74 <memcpy+0x20>
    5a8c:	230f      	movs	r3, #15
    5a8e:	439e      	bics	r6, r3
    5a90:	3610      	adds	r6, #16
    5a92:	1985      	adds	r5, r0, r6
    5a94:	1989      	adds	r1, r1, r6
    5a96:	4013      	ands	r3, r2
    5a98:	2b03      	cmp	r3, #3
    5a9a:	d91a      	bls.n	5ad2 <memcpy+0x7e>
    5a9c:	1f1e      	subs	r6, r3, #4
    5a9e:	2300      	movs	r3, #0
    5aa0:	08b4      	lsrs	r4, r6, #2
    5aa2:	3401      	adds	r4, #1
    5aa4:	00a4      	lsls	r4, r4, #2
    5aa6:	58cf      	ldr	r7, [r1, r3]
    5aa8:	50ef      	str	r7, [r5, r3]
    5aaa:	3304      	adds	r3, #4
    5aac:	42a3      	cmp	r3, r4
    5aae:	d1fa      	bne.n	5aa6 <memcpy+0x52>
    5ab0:	2403      	movs	r4, #3
    5ab2:	43a6      	bics	r6, r4
    5ab4:	1d33      	adds	r3, r6, #4
    5ab6:	4022      	ands	r2, r4
    5ab8:	18c9      	adds	r1, r1, r3
    5aba:	18ed      	adds	r5, r5, r3
    5abc:	2a00      	cmp	r2, #0
    5abe:	d005      	beq.n	5acc <memcpy+0x78>
    5ac0:	2300      	movs	r3, #0
    5ac2:	5ccc      	ldrb	r4, [r1, r3]
    5ac4:	54ec      	strb	r4, [r5, r3]
    5ac6:	3301      	adds	r3, #1
    5ac8:	4293      	cmp	r3, r2
    5aca:	d1fa      	bne.n	5ac2 <memcpy+0x6e>
    5acc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5ace:	0005      	movs	r5, r0
    5ad0:	e7f6      	b.n	5ac0 <memcpy+0x6c>
    5ad2:	001a      	movs	r2, r3
    5ad4:	e7f2      	b.n	5abc <memcpy+0x68>
    5ad6:	46c0      	nop			; (mov r8, r8)

00005ad8 <__malloc_lock>:
    5ad8:	b510      	push	{r4, lr}
    5ada:	4802      	ldr	r0, [pc, #8]	; (5ae4 <__malloc_lock+0xc>)
    5adc:	f7fd f8c8 	bl	2c70 <__retarget_lock_acquire_recursive>
    5ae0:	bd10      	pop	{r4, pc}
    5ae2:	46c0      	nop			; (mov r8, r8)
    5ae4:	20000c00 	.word	0x20000c00

00005ae8 <__malloc_unlock>:
    5ae8:	b510      	push	{r4, lr}
    5aea:	4802      	ldr	r0, [pc, #8]	; (5af4 <__malloc_unlock+0xc>)
    5aec:	f7fd f8c2 	bl	2c74 <__retarget_lock_release_recursive>
    5af0:	bd10      	pop	{r4, pc}
    5af2:	46c0      	nop			; (mov r8, r8)
    5af4:	20000c00 	.word	0x20000c00

00005af8 <_Balloc>:
    5af8:	b570      	push	{r4, r5, r6, lr}
    5afa:	0004      	movs	r4, r0
    5afc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    5afe:	000d      	movs	r5, r1
    5b00:	2800      	cmp	r0, #0
    5b02:	d00a      	beq.n	5b1a <_Balloc+0x22>
    5b04:	00ab      	lsls	r3, r5, #2
    5b06:	18c3      	adds	r3, r0, r3
    5b08:	6818      	ldr	r0, [r3, #0]
    5b0a:	2800      	cmp	r0, #0
    5b0c:	d00f      	beq.n	5b2e <_Balloc+0x36>
    5b0e:	6802      	ldr	r2, [r0, #0]
    5b10:	601a      	str	r2, [r3, #0]
    5b12:	2300      	movs	r3, #0
    5b14:	6103      	str	r3, [r0, #16]
    5b16:	60c3      	str	r3, [r0, #12]
    5b18:	bd70      	pop	{r4, r5, r6, pc}
    5b1a:	2221      	movs	r2, #33	; 0x21
    5b1c:	2104      	movs	r1, #4
    5b1e:	0020      	movs	r0, r4
    5b20:	f000 fbd4 	bl	62cc <_calloc_r>
    5b24:	64e0      	str	r0, [r4, #76]	; 0x4c
    5b26:	2800      	cmp	r0, #0
    5b28:	d1ec      	bne.n	5b04 <_Balloc+0xc>
    5b2a:	2000      	movs	r0, #0
    5b2c:	e7f4      	b.n	5b18 <_Balloc+0x20>
    5b2e:	2601      	movs	r6, #1
    5b30:	40ae      	lsls	r6, r5
    5b32:	1d72      	adds	r2, r6, #5
    5b34:	0092      	lsls	r2, r2, #2
    5b36:	2101      	movs	r1, #1
    5b38:	0020      	movs	r0, r4
    5b3a:	f000 fbc7 	bl	62cc <_calloc_r>
    5b3e:	2800      	cmp	r0, #0
    5b40:	d0f3      	beq.n	5b2a <_Balloc+0x32>
    5b42:	6045      	str	r5, [r0, #4]
    5b44:	6086      	str	r6, [r0, #8]
    5b46:	e7e4      	b.n	5b12 <_Balloc+0x1a>

00005b48 <_Bfree>:
    5b48:	2900      	cmp	r1, #0
    5b4a:	d006      	beq.n	5b5a <_Bfree+0x12>
    5b4c:	684b      	ldr	r3, [r1, #4]
    5b4e:	009a      	lsls	r2, r3, #2
    5b50:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    5b52:	189b      	adds	r3, r3, r2
    5b54:	681a      	ldr	r2, [r3, #0]
    5b56:	600a      	str	r2, [r1, #0]
    5b58:	6019      	str	r1, [r3, #0]
    5b5a:	4770      	bx	lr

00005b5c <__multadd>:
    5b5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5b5e:	46ce      	mov	lr, r9
    5b60:	4647      	mov	r7, r8
    5b62:	4681      	mov	r9, r0
    5b64:	0008      	movs	r0, r1
    5b66:	b580      	push	{r7, lr}
    5b68:	000d      	movs	r5, r1
    5b6a:	690c      	ldr	r4, [r1, #16]
    5b6c:	001f      	movs	r7, r3
    5b6e:	2100      	movs	r1, #0
    5b70:	3014      	adds	r0, #20
    5b72:	6803      	ldr	r3, [r0, #0]
    5b74:	3101      	adds	r1, #1
    5b76:	041e      	lsls	r6, r3, #16
    5b78:	0c36      	lsrs	r6, r6, #16
    5b7a:	4356      	muls	r6, r2
    5b7c:	0c1b      	lsrs	r3, r3, #16
    5b7e:	4353      	muls	r3, r2
    5b80:	19f6      	adds	r6, r6, r7
    5b82:	0c37      	lsrs	r7, r6, #16
    5b84:	19db      	adds	r3, r3, r7
    5b86:	0436      	lsls	r6, r6, #16
    5b88:	0c1f      	lsrs	r7, r3, #16
    5b8a:	0c36      	lsrs	r6, r6, #16
    5b8c:	041b      	lsls	r3, r3, #16
    5b8e:	199b      	adds	r3, r3, r6
    5b90:	c008      	stmia	r0!, {r3}
    5b92:	428c      	cmp	r4, r1
    5b94:	dced      	bgt.n	5b72 <__multadd+0x16>
    5b96:	2f00      	cmp	r7, #0
    5b98:	d008      	beq.n	5bac <__multadd+0x50>
    5b9a:	68ab      	ldr	r3, [r5, #8]
    5b9c:	429c      	cmp	r4, r3
    5b9e:	da0a      	bge.n	5bb6 <__multadd+0x5a>
    5ba0:	1d23      	adds	r3, r4, #4
    5ba2:	009b      	lsls	r3, r3, #2
    5ba4:	18eb      	adds	r3, r5, r3
    5ba6:	3401      	adds	r4, #1
    5ba8:	605f      	str	r7, [r3, #4]
    5baa:	612c      	str	r4, [r5, #16]
    5bac:	0028      	movs	r0, r5
    5bae:	bc0c      	pop	{r2, r3}
    5bb0:	4690      	mov	r8, r2
    5bb2:	4699      	mov	r9, r3
    5bb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5bb6:	686b      	ldr	r3, [r5, #4]
    5bb8:	4648      	mov	r0, r9
    5bba:	1c59      	adds	r1, r3, #1
    5bbc:	f7ff ff9c 	bl	5af8 <_Balloc>
    5bc0:	0029      	movs	r1, r5
    5bc2:	692b      	ldr	r3, [r5, #16]
    5bc4:	4680      	mov	r8, r0
    5bc6:	1c9a      	adds	r2, r3, #2
    5bc8:	0092      	lsls	r2, r2, #2
    5bca:	310c      	adds	r1, #12
    5bcc:	300c      	adds	r0, #12
    5bce:	f7ff ff41 	bl	5a54 <memcpy>
    5bd2:	686b      	ldr	r3, [r5, #4]
    5bd4:	009a      	lsls	r2, r3, #2
    5bd6:	464b      	mov	r3, r9
    5bd8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    5bda:	189b      	adds	r3, r3, r2
    5bdc:	681a      	ldr	r2, [r3, #0]
    5bde:	602a      	str	r2, [r5, #0]
    5be0:	601d      	str	r5, [r3, #0]
    5be2:	4645      	mov	r5, r8
    5be4:	e7dc      	b.n	5ba0 <__multadd+0x44>
    5be6:	46c0      	nop			; (mov r8, r8)

00005be8 <__hi0bits>:
    5be8:	0003      	movs	r3, r0
    5bea:	0c02      	lsrs	r2, r0, #16
    5bec:	2000      	movs	r0, #0
    5bee:	2a00      	cmp	r2, #0
    5bf0:	d101      	bne.n	5bf6 <__hi0bits+0xe>
    5bf2:	041b      	lsls	r3, r3, #16
    5bf4:	3010      	adds	r0, #16
    5bf6:	0e1a      	lsrs	r2, r3, #24
    5bf8:	d101      	bne.n	5bfe <__hi0bits+0x16>
    5bfa:	3008      	adds	r0, #8
    5bfc:	021b      	lsls	r3, r3, #8
    5bfe:	0f1a      	lsrs	r2, r3, #28
    5c00:	d101      	bne.n	5c06 <__hi0bits+0x1e>
    5c02:	3004      	adds	r0, #4
    5c04:	011b      	lsls	r3, r3, #4
    5c06:	0f9a      	lsrs	r2, r3, #30
    5c08:	d101      	bne.n	5c0e <__hi0bits+0x26>
    5c0a:	3002      	adds	r0, #2
    5c0c:	009b      	lsls	r3, r3, #2
    5c0e:	2b00      	cmp	r3, #0
    5c10:	db03      	blt.n	5c1a <__hi0bits+0x32>
    5c12:	3001      	adds	r0, #1
    5c14:	005b      	lsls	r3, r3, #1
    5c16:	d400      	bmi.n	5c1a <__hi0bits+0x32>
    5c18:	2020      	movs	r0, #32
    5c1a:	4770      	bx	lr

00005c1c <__lo0bits>:
    5c1c:	6803      	ldr	r3, [r0, #0]
    5c1e:	075a      	lsls	r2, r3, #29
    5c20:	d009      	beq.n	5c36 <__lo0bits+0x1a>
    5c22:	2200      	movs	r2, #0
    5c24:	07d9      	lsls	r1, r3, #31
    5c26:	d404      	bmi.n	5c32 <__lo0bits+0x16>
    5c28:	079a      	lsls	r2, r3, #30
    5c2a:	d420      	bmi.n	5c6e <__lo0bits+0x52>
    5c2c:	2202      	movs	r2, #2
    5c2e:	089b      	lsrs	r3, r3, #2
    5c30:	6003      	str	r3, [r0, #0]
    5c32:	0010      	movs	r0, r2
    5c34:	4770      	bx	lr
    5c36:	0419      	lsls	r1, r3, #16
    5c38:	2200      	movs	r2, #0
    5c3a:	2900      	cmp	r1, #0
    5c3c:	d101      	bne.n	5c42 <__lo0bits+0x26>
    5c3e:	0c1b      	lsrs	r3, r3, #16
    5c40:	3210      	adds	r2, #16
    5c42:	21ff      	movs	r1, #255	; 0xff
    5c44:	4219      	tst	r1, r3
    5c46:	d101      	bne.n	5c4c <__lo0bits+0x30>
    5c48:	3208      	adds	r2, #8
    5c4a:	0a1b      	lsrs	r3, r3, #8
    5c4c:	0719      	lsls	r1, r3, #28
    5c4e:	d101      	bne.n	5c54 <__lo0bits+0x38>
    5c50:	3204      	adds	r2, #4
    5c52:	091b      	lsrs	r3, r3, #4
    5c54:	0799      	lsls	r1, r3, #30
    5c56:	d101      	bne.n	5c5c <__lo0bits+0x40>
    5c58:	3202      	adds	r2, #2
    5c5a:	089b      	lsrs	r3, r3, #2
    5c5c:	07d9      	lsls	r1, r3, #31
    5c5e:	d404      	bmi.n	5c6a <__lo0bits+0x4e>
    5c60:	085b      	lsrs	r3, r3, #1
    5c62:	d101      	bne.n	5c68 <__lo0bits+0x4c>
    5c64:	2220      	movs	r2, #32
    5c66:	e7e4      	b.n	5c32 <__lo0bits+0x16>
    5c68:	3201      	adds	r2, #1
    5c6a:	6003      	str	r3, [r0, #0]
    5c6c:	e7e1      	b.n	5c32 <__lo0bits+0x16>
    5c6e:	085b      	lsrs	r3, r3, #1
    5c70:	6003      	str	r3, [r0, #0]
    5c72:	2201      	movs	r2, #1
    5c74:	e7dd      	b.n	5c32 <__lo0bits+0x16>
    5c76:	46c0      	nop			; (mov r8, r8)

00005c78 <__i2b>:
    5c78:	b510      	push	{r4, lr}
    5c7a:	000c      	movs	r4, r1
    5c7c:	2101      	movs	r1, #1
    5c7e:	f7ff ff3b 	bl	5af8 <_Balloc>
    5c82:	2301      	movs	r3, #1
    5c84:	6144      	str	r4, [r0, #20]
    5c86:	6103      	str	r3, [r0, #16]
    5c88:	bd10      	pop	{r4, pc}
    5c8a:	46c0      	nop			; (mov r8, r8)

00005c8c <__multiply>:
    5c8c:	b5f0      	push	{r4, r5, r6, r7, lr}
    5c8e:	4657      	mov	r7, sl
    5c90:	464e      	mov	r6, r9
    5c92:	4645      	mov	r5, r8
    5c94:	46de      	mov	lr, fp
    5c96:	b5e0      	push	{r5, r6, r7, lr}
    5c98:	6914      	ldr	r4, [r2, #16]
    5c9a:	690e      	ldr	r6, [r1, #16]
    5c9c:	b085      	sub	sp, #20
    5c9e:	000f      	movs	r7, r1
    5ca0:	0015      	movs	r5, r2
    5ca2:	42a6      	cmp	r6, r4
    5ca4:	da04      	bge.n	5cb0 <__multiply+0x24>
    5ca6:	0033      	movs	r3, r6
    5ca8:	0017      	movs	r7, r2
    5caa:	0026      	movs	r6, r4
    5cac:	000d      	movs	r5, r1
    5cae:	001c      	movs	r4, r3
    5cb0:	1933      	adds	r3, r6, r4
    5cb2:	4698      	mov	r8, r3
    5cb4:	68bb      	ldr	r3, [r7, #8]
    5cb6:	6879      	ldr	r1, [r7, #4]
    5cb8:	4598      	cmp	r8, r3
    5cba:	dd00      	ble.n	5cbe <__multiply+0x32>
    5cbc:	3101      	adds	r1, #1
    5cbe:	f7ff ff1b 	bl	5af8 <_Balloc>
    5cc2:	2214      	movs	r2, #20
    5cc4:	0003      	movs	r3, r0
    5cc6:	4694      	mov	ip, r2
    5cc8:	4463      	add	r3, ip
    5cca:	469b      	mov	fp, r3
    5ccc:	4643      	mov	r3, r8
    5cce:	009b      	lsls	r3, r3, #2
    5cd0:	445b      	add	r3, fp
    5cd2:	0019      	movs	r1, r3
    5cd4:	9302      	str	r3, [sp, #8]
    5cd6:	9003      	str	r0, [sp, #12]
    5cd8:	465b      	mov	r3, fp
    5cda:	2200      	movs	r2, #0
    5cdc:	458b      	cmp	fp, r1
    5cde:	d203      	bcs.n	5ce8 <__multiply+0x5c>
    5ce0:	9902      	ldr	r1, [sp, #8]
    5ce2:	c304      	stmia	r3!, {r2}
    5ce4:	4299      	cmp	r1, r3
    5ce6:	d8fc      	bhi.n	5ce2 <__multiply+0x56>
    5ce8:	2314      	movs	r3, #20
    5cea:	00a4      	lsls	r4, r4, #2
    5cec:	469a      	mov	sl, r3
    5cee:	3714      	adds	r7, #20
    5cf0:	0023      	movs	r3, r4
    5cf2:	46bc      	mov	ip, r7
    5cf4:	44aa      	add	sl, r5
    5cf6:	00b6      	lsls	r6, r6, #2
    5cf8:	4453      	add	r3, sl
    5cfa:	9700      	str	r7, [sp, #0]
    5cfc:	44b4      	add	ip, r6
    5cfe:	9301      	str	r3, [sp, #4]
    5d00:	459a      	cmp	sl, r3
    5d02:	d24f      	bcs.n	5da4 <__multiply+0x118>
    5d04:	4653      	mov	r3, sl
    5d06:	681b      	ldr	r3, [r3, #0]
    5d08:	041e      	lsls	r6, r3, #16
    5d0a:	0c36      	lsrs	r6, r6, #16
    5d0c:	d020      	beq.n	5d50 <__multiply+0xc4>
    5d0e:	465c      	mov	r4, fp
    5d10:	2700      	movs	r7, #0
    5d12:	9d00      	ldr	r5, [sp, #0]
    5d14:	0021      	movs	r1, r4
    5d16:	cc08      	ldmia	r4!, {r3}
    5d18:	cd04      	ldmia	r5!, {r2}
    5d1a:	4699      	mov	r9, r3
    5d1c:	4648      	mov	r0, r9
    5d1e:	0413      	lsls	r3, r2, #16
    5d20:	0c1b      	lsrs	r3, r3, #16
    5d22:	4373      	muls	r3, r6
    5d24:	0400      	lsls	r0, r0, #16
    5d26:	0c00      	lsrs	r0, r0, #16
    5d28:	181b      	adds	r3, r3, r0
    5d2a:	19d8      	adds	r0, r3, r7
    5d2c:	0c13      	lsrs	r3, r2, #16
    5d2e:	464a      	mov	r2, r9
    5d30:	4373      	muls	r3, r6
    5d32:	0c12      	lsrs	r2, r2, #16
    5d34:	189b      	adds	r3, r3, r2
    5d36:	0c02      	lsrs	r2, r0, #16
    5d38:	189b      	adds	r3, r3, r2
    5d3a:	0402      	lsls	r2, r0, #16
    5d3c:	0c1f      	lsrs	r7, r3, #16
    5d3e:	0c12      	lsrs	r2, r2, #16
    5d40:	041b      	lsls	r3, r3, #16
    5d42:	4313      	orrs	r3, r2
    5d44:	600b      	str	r3, [r1, #0]
    5d46:	45ac      	cmp	ip, r5
    5d48:	d8e4      	bhi.n	5d14 <__multiply+0x88>
    5d4a:	4653      	mov	r3, sl
    5d4c:	6027      	str	r7, [r4, #0]
    5d4e:	681b      	ldr	r3, [r3, #0]
    5d50:	0c1e      	lsrs	r6, r3, #16
    5d52:	d020      	beq.n	5d96 <__multiply+0x10a>
    5d54:	465b      	mov	r3, fp
    5d56:	2100      	movs	r1, #0
    5d58:	681b      	ldr	r3, [r3, #0]
    5d5a:	465c      	mov	r4, fp
    5d5c:	0018      	movs	r0, r3
    5d5e:	000f      	movs	r7, r1
    5d60:	4662      	mov	r2, ip
    5d62:	9d00      	ldr	r5, [sp, #0]
    5d64:	8829      	ldrh	r1, [r5, #0]
    5d66:	0c00      	lsrs	r0, r0, #16
    5d68:	4371      	muls	r1, r6
    5d6a:	1809      	adds	r1, r1, r0
    5d6c:	19c9      	adds	r1, r1, r7
    5d6e:	041b      	lsls	r3, r3, #16
    5d70:	0408      	lsls	r0, r1, #16
    5d72:	0c1b      	lsrs	r3, r3, #16
    5d74:	4303      	orrs	r3, r0
    5d76:	6023      	str	r3, [r4, #0]
    5d78:	cd08      	ldmia	r5!, {r3}
    5d7a:	6860      	ldr	r0, [r4, #4]
    5d7c:	0c1b      	lsrs	r3, r3, #16
    5d7e:	4373      	muls	r3, r6
    5d80:	0407      	lsls	r7, r0, #16
    5d82:	0c3f      	lsrs	r7, r7, #16
    5d84:	19db      	adds	r3, r3, r7
    5d86:	0c09      	lsrs	r1, r1, #16
    5d88:	185b      	adds	r3, r3, r1
    5d8a:	0c1f      	lsrs	r7, r3, #16
    5d8c:	3404      	adds	r4, #4
    5d8e:	42aa      	cmp	r2, r5
    5d90:	d8e8      	bhi.n	5d64 <__multiply+0xd8>
    5d92:	4694      	mov	ip, r2
    5d94:	6023      	str	r3, [r4, #0]
    5d96:	2304      	movs	r3, #4
    5d98:	4699      	mov	r9, r3
    5d9a:	9b01      	ldr	r3, [sp, #4]
    5d9c:	44ca      	add	sl, r9
    5d9e:	44cb      	add	fp, r9
    5da0:	4553      	cmp	r3, sl
    5da2:	d8af      	bhi.n	5d04 <__multiply+0x78>
    5da4:	4643      	mov	r3, r8
    5da6:	2b00      	cmp	r3, #0
    5da8:	dd0e      	ble.n	5dc8 <__multiply+0x13c>
    5daa:	9b02      	ldr	r3, [sp, #8]
    5dac:	3b04      	subs	r3, #4
    5dae:	681a      	ldr	r2, [r3, #0]
    5db0:	2a00      	cmp	r2, #0
    5db2:	d109      	bne.n	5dc8 <__multiply+0x13c>
    5db4:	4642      	mov	r2, r8
    5db6:	e003      	b.n	5dc0 <__multiply+0x134>
    5db8:	3b04      	subs	r3, #4
    5dba:	6819      	ldr	r1, [r3, #0]
    5dbc:	2900      	cmp	r1, #0
    5dbe:	d102      	bne.n	5dc6 <__multiply+0x13a>
    5dc0:	3a01      	subs	r2, #1
    5dc2:	2a00      	cmp	r2, #0
    5dc4:	d1f8      	bne.n	5db8 <__multiply+0x12c>
    5dc6:	4690      	mov	r8, r2
    5dc8:	9b03      	ldr	r3, [sp, #12]
    5dca:	4642      	mov	r2, r8
    5dcc:	0018      	movs	r0, r3
    5dce:	611a      	str	r2, [r3, #16]
    5dd0:	b005      	add	sp, #20
    5dd2:	bc3c      	pop	{r2, r3, r4, r5}
    5dd4:	4690      	mov	r8, r2
    5dd6:	4699      	mov	r9, r3
    5dd8:	46a2      	mov	sl, r4
    5dda:	46ab      	mov	fp, r5
    5ddc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5dde:	46c0      	nop			; (mov r8, r8)

00005de0 <__pow5mult>:
    5de0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5de2:	4647      	mov	r7, r8
    5de4:	46ce      	mov	lr, r9
    5de6:	2303      	movs	r3, #3
    5de8:	b580      	push	{r7, lr}
    5dea:	4680      	mov	r8, r0
    5dec:	000f      	movs	r7, r1
    5dee:	0014      	movs	r4, r2
    5df0:	4013      	ands	r3, r2
    5df2:	d13a      	bne.n	5e6a <__pow5mult+0x8a>
    5df4:	10a4      	asrs	r4, r4, #2
    5df6:	003e      	movs	r6, r7
    5df8:	2c00      	cmp	r4, #0
    5dfa:	d025      	beq.n	5e48 <__pow5mult+0x68>
    5dfc:	4643      	mov	r3, r8
    5dfe:	6c9d      	ldr	r5, [r3, #72]	; 0x48
    5e00:	2d00      	cmp	r5, #0
    5e02:	d03b      	beq.n	5e7c <__pow5mult+0x9c>
    5e04:	003e      	movs	r6, r7
    5e06:	2300      	movs	r3, #0
    5e08:	2701      	movs	r7, #1
    5e0a:	4699      	mov	r9, r3
    5e0c:	4227      	tst	r7, r4
    5e0e:	d107      	bne.n	5e20 <__pow5mult+0x40>
    5e10:	1064      	asrs	r4, r4, #1
    5e12:	d019      	beq.n	5e48 <__pow5mult+0x68>
    5e14:	6828      	ldr	r0, [r5, #0]
    5e16:	2800      	cmp	r0, #0
    5e18:	d01b      	beq.n	5e52 <__pow5mult+0x72>
    5e1a:	0005      	movs	r5, r0
    5e1c:	4227      	tst	r7, r4
    5e1e:	d0f7      	beq.n	5e10 <__pow5mult+0x30>
    5e20:	002a      	movs	r2, r5
    5e22:	0031      	movs	r1, r6
    5e24:	4640      	mov	r0, r8
    5e26:	f7ff ff31 	bl	5c8c <__multiply>
    5e2a:	2e00      	cmp	r6, #0
    5e2c:	d01b      	beq.n	5e66 <__pow5mult+0x86>
    5e2e:	4642      	mov	r2, r8
    5e30:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    5e32:	6873      	ldr	r3, [r6, #4]
    5e34:	4694      	mov	ip, r2
    5e36:	009b      	lsls	r3, r3, #2
    5e38:	4463      	add	r3, ip
    5e3a:	681a      	ldr	r2, [r3, #0]
    5e3c:	1064      	asrs	r4, r4, #1
    5e3e:	6032      	str	r2, [r6, #0]
    5e40:	601e      	str	r6, [r3, #0]
    5e42:	0006      	movs	r6, r0
    5e44:	2c00      	cmp	r4, #0
    5e46:	d1e5      	bne.n	5e14 <__pow5mult+0x34>
    5e48:	0030      	movs	r0, r6
    5e4a:	bc0c      	pop	{r2, r3}
    5e4c:	4690      	mov	r8, r2
    5e4e:	4699      	mov	r9, r3
    5e50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5e52:	002a      	movs	r2, r5
    5e54:	0029      	movs	r1, r5
    5e56:	4640      	mov	r0, r8
    5e58:	f7ff ff18 	bl	5c8c <__multiply>
    5e5c:	464b      	mov	r3, r9
    5e5e:	6028      	str	r0, [r5, #0]
    5e60:	6003      	str	r3, [r0, #0]
    5e62:	0005      	movs	r5, r0
    5e64:	e7da      	b.n	5e1c <__pow5mult+0x3c>
    5e66:	0006      	movs	r6, r0
    5e68:	e7d2      	b.n	5e10 <__pow5mult+0x30>
    5e6a:	4a0b      	ldr	r2, [pc, #44]	; (5e98 <__pow5mult+0xb8>)
    5e6c:	3b01      	subs	r3, #1
    5e6e:	009b      	lsls	r3, r3, #2
    5e70:	589a      	ldr	r2, [r3, r2]
    5e72:	2300      	movs	r3, #0
    5e74:	f7ff fe72 	bl	5b5c <__multadd>
    5e78:	0007      	movs	r7, r0
    5e7a:	e7bb      	b.n	5df4 <__pow5mult+0x14>
    5e7c:	2101      	movs	r1, #1
    5e7e:	4640      	mov	r0, r8
    5e80:	f7ff fe3a 	bl	5af8 <_Balloc>
    5e84:	4b05      	ldr	r3, [pc, #20]	; (5e9c <__pow5mult+0xbc>)
    5e86:	0005      	movs	r5, r0
    5e88:	6143      	str	r3, [r0, #20]
    5e8a:	2301      	movs	r3, #1
    5e8c:	6103      	str	r3, [r0, #16]
    5e8e:	4643      	mov	r3, r8
    5e90:	6498      	str	r0, [r3, #72]	; 0x48
    5e92:	2300      	movs	r3, #0
    5e94:	6003      	str	r3, [r0, #0]
    5e96:	e7b5      	b.n	5e04 <__pow5mult+0x24>
    5e98:	000083c8 	.word	0x000083c8
    5e9c:	00000271 	.word	0x00000271

00005ea0 <__lshift>:
    5ea0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5ea2:	464e      	mov	r6, r9
    5ea4:	4645      	mov	r5, r8
    5ea6:	46de      	mov	lr, fp
    5ea8:	4657      	mov	r7, sl
    5eaa:	b5e0      	push	{r5, r6, r7, lr}
    5eac:	000e      	movs	r6, r1
    5eae:	6933      	ldr	r3, [r6, #16]
    5eb0:	1154      	asrs	r4, r2, #5
    5eb2:	4698      	mov	r8, r3
    5eb4:	44a0      	add	r8, r4
    5eb6:	4643      	mov	r3, r8
    5eb8:	1c5d      	adds	r5, r3, #1
    5eba:	68b3      	ldr	r3, [r6, #8]
    5ebc:	4683      	mov	fp, r0
    5ebe:	4691      	mov	r9, r2
    5ec0:	6849      	ldr	r1, [r1, #4]
    5ec2:	429d      	cmp	r5, r3
    5ec4:	dd03      	ble.n	5ece <__lshift+0x2e>
    5ec6:	3101      	adds	r1, #1
    5ec8:	005b      	lsls	r3, r3, #1
    5eca:	429d      	cmp	r5, r3
    5ecc:	dcfb      	bgt.n	5ec6 <__lshift+0x26>
    5ece:	4658      	mov	r0, fp
    5ed0:	f7ff fe12 	bl	5af8 <_Balloc>
    5ed4:	0003      	movs	r3, r0
    5ed6:	4684      	mov	ip, r0
    5ed8:	3314      	adds	r3, #20
    5eda:	2c00      	cmp	r4, #0
    5edc:	dd06      	ble.n	5eec <__lshift+0x4c>
    5ede:	2100      	movs	r1, #0
    5ee0:	00a4      	lsls	r4, r4, #2
    5ee2:	001a      	movs	r2, r3
    5ee4:	191b      	adds	r3, r3, r4
    5ee6:	c202      	stmia	r2!, {r1}
    5ee8:	4293      	cmp	r3, r2
    5eea:	d1fc      	bne.n	5ee6 <__lshift+0x46>
    5eec:	6932      	ldr	r2, [r6, #16]
    5eee:	4648      	mov	r0, r9
    5ef0:	0097      	lsls	r7, r2, #2
    5ef2:	0031      	movs	r1, r6
    5ef4:	221f      	movs	r2, #31
    5ef6:	3114      	adds	r1, #20
    5ef8:	4010      	ands	r0, r2
    5efa:	19cf      	adds	r7, r1, r7
    5efc:	4681      	mov	r9, r0
    5efe:	2800      	cmp	r0, #0
    5f00:	d025      	beq.n	5f4e <__lshift+0xae>
    5f02:	2220      	movs	r2, #32
    5f04:	1a12      	subs	r2, r2, r0
    5f06:	4692      	mov	sl, r2
    5f08:	2200      	movs	r2, #0
    5f0a:	4648      	mov	r0, r9
    5f0c:	680c      	ldr	r4, [r1, #0]
    5f0e:	4084      	lsls	r4, r0
    5f10:	4650      	mov	r0, sl
    5f12:	4314      	orrs	r4, r2
    5f14:	601c      	str	r4, [r3, #0]
    5f16:	c904      	ldmia	r1!, {r2}
    5f18:	3304      	adds	r3, #4
    5f1a:	40c2      	lsrs	r2, r0
    5f1c:	428f      	cmp	r7, r1
    5f1e:	d8f4      	bhi.n	5f0a <__lshift+0x6a>
    5f20:	601a      	str	r2, [r3, #0]
    5f22:	2a00      	cmp	r2, #0
    5f24:	d001      	beq.n	5f2a <__lshift+0x8a>
    5f26:	4645      	mov	r5, r8
    5f28:	3502      	adds	r5, #2
    5f2a:	4663      	mov	r3, ip
    5f2c:	3d01      	subs	r5, #1
    5f2e:	611d      	str	r5, [r3, #16]
    5f30:	6873      	ldr	r3, [r6, #4]
    5f32:	4660      	mov	r0, ip
    5f34:	009a      	lsls	r2, r3, #2
    5f36:	465b      	mov	r3, fp
    5f38:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    5f3a:	189b      	adds	r3, r3, r2
    5f3c:	681a      	ldr	r2, [r3, #0]
    5f3e:	6032      	str	r2, [r6, #0]
    5f40:	601e      	str	r6, [r3, #0]
    5f42:	bc3c      	pop	{r2, r3, r4, r5}
    5f44:	4690      	mov	r8, r2
    5f46:	4699      	mov	r9, r3
    5f48:	46a2      	mov	sl, r4
    5f4a:	46ab      	mov	fp, r5
    5f4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5f4e:	c904      	ldmia	r1!, {r2}
    5f50:	c304      	stmia	r3!, {r2}
    5f52:	428f      	cmp	r7, r1
    5f54:	d9e9      	bls.n	5f2a <__lshift+0x8a>
    5f56:	c904      	ldmia	r1!, {r2}
    5f58:	c304      	stmia	r3!, {r2}
    5f5a:	428f      	cmp	r7, r1
    5f5c:	d8f7      	bhi.n	5f4e <__lshift+0xae>
    5f5e:	e7e4      	b.n	5f2a <__lshift+0x8a>

00005f60 <__mcmp>:
    5f60:	690a      	ldr	r2, [r1, #16]
    5f62:	6903      	ldr	r3, [r0, #16]
    5f64:	b530      	push	{r4, r5, lr}
    5f66:	0005      	movs	r5, r0
    5f68:	1a98      	subs	r0, r3, r2
    5f6a:	d111      	bne.n	5f90 <__mcmp+0x30>
    5f6c:	0092      	lsls	r2, r2, #2
    5f6e:	3514      	adds	r5, #20
    5f70:	3114      	adds	r1, #20
    5f72:	18ab      	adds	r3, r5, r2
    5f74:	1889      	adds	r1, r1, r2
    5f76:	e001      	b.n	5f7c <__mcmp+0x1c>
    5f78:	429d      	cmp	r5, r3
    5f7a:	d209      	bcs.n	5f90 <__mcmp+0x30>
    5f7c:	3b04      	subs	r3, #4
    5f7e:	3904      	subs	r1, #4
    5f80:	681c      	ldr	r4, [r3, #0]
    5f82:	680a      	ldr	r2, [r1, #0]
    5f84:	4294      	cmp	r4, r2
    5f86:	d0f7      	beq.n	5f78 <__mcmp+0x18>
    5f88:	4294      	cmp	r4, r2
    5f8a:	4180      	sbcs	r0, r0
    5f8c:	2201      	movs	r2, #1
    5f8e:	4310      	orrs	r0, r2
    5f90:	bd30      	pop	{r4, r5, pc}
    5f92:	46c0      	nop			; (mov r8, r8)

00005f94 <__mdiff>:
    5f94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5f96:	4645      	mov	r5, r8
    5f98:	46de      	mov	lr, fp
    5f9a:	4657      	mov	r7, sl
    5f9c:	464e      	mov	r6, r9
    5f9e:	0014      	movs	r4, r2
    5fa0:	690b      	ldr	r3, [r1, #16]
    5fa2:	6912      	ldr	r2, [r2, #16]
    5fa4:	b5e0      	push	{r5, r6, r7, lr}
    5fa6:	4688      	mov	r8, r1
    5fa8:	1a9d      	subs	r5, r3, r2
    5faa:	d11a      	bne.n	5fe2 <__mdiff+0x4e>
    5fac:	000f      	movs	r7, r1
    5fae:	2114      	movs	r1, #20
    5fb0:	468c      	mov	ip, r1
    5fb2:	0092      	lsls	r2, r2, #2
    5fb4:	3714      	adds	r7, #20
    5fb6:	44a4      	add	ip, r4
    5fb8:	18bb      	adds	r3, r7, r2
    5fba:	4462      	add	r2, ip
    5fbc:	e002      	b.n	5fc4 <__mdiff+0x30>
    5fbe:	429f      	cmp	r7, r3
    5fc0:	d300      	bcc.n	5fc4 <__mdiff+0x30>
    5fc2:	e070      	b.n	60a6 <__mdiff+0x112>
    5fc4:	3b04      	subs	r3, #4
    5fc6:	3a04      	subs	r2, #4
    5fc8:	681e      	ldr	r6, [r3, #0]
    5fca:	6811      	ldr	r1, [r2, #0]
    5fcc:	428e      	cmp	r6, r1
    5fce:	d0f6      	beq.n	5fbe <__mdiff+0x2a>
    5fd0:	d300      	bcc.n	5fd4 <__mdiff+0x40>
    5fd2:	e071      	b.n	60b8 <__mdiff+0x124>
    5fd4:	4643      	mov	r3, r8
    5fd6:	003e      	movs	r6, r7
    5fd8:	46a0      	mov	r8, r4
    5fda:	4667      	mov	r7, ip
    5fdc:	001c      	movs	r4, r3
    5fde:	2501      	movs	r5, #1
    5fe0:	e006      	b.n	5ff0 <__mdiff+0x5c>
    5fe2:	2d00      	cmp	r5, #0
    5fe4:	db6a      	blt.n	60bc <__mdiff+0x128>
    5fe6:	4647      	mov	r7, r8
    5fe8:	0026      	movs	r6, r4
    5fea:	2500      	movs	r5, #0
    5fec:	3714      	adds	r7, #20
    5fee:	3614      	adds	r6, #20
    5ff0:	4643      	mov	r3, r8
    5ff2:	6859      	ldr	r1, [r3, #4]
    5ff4:	f7ff fd80 	bl	5af8 <_Balloc>
    5ff8:	4643      	mov	r3, r8
    5ffa:	4681      	mov	r9, r0
    5ffc:	60c5      	str	r5, [r0, #12]
    5ffe:	6918      	ldr	r0, [r3, #16]
    6000:	464d      	mov	r5, r9
    6002:	0083      	lsls	r3, r0, #2
    6004:	469c      	mov	ip, r3
    6006:	6923      	ldr	r3, [r4, #16]
    6008:	44bc      	add	ip, r7
    600a:	009b      	lsls	r3, r3, #2
    600c:	4698      	mov	r8, r3
    600e:	2300      	movs	r3, #0
    6010:	44b0      	add	r8, r6
    6012:	3514      	adds	r5, #20
    6014:	469a      	mov	sl, r3
    6016:	e000      	b.n	601a <__mdiff+0x86>
    6018:	0027      	movs	r7, r4
    601a:	ce04      	ldmia	r6!, {r2}
    601c:	003c      	movs	r4, r7
    601e:	4693      	mov	fp, r2
    6020:	4659      	mov	r1, fp
    6022:	cc08      	ldmia	r4!, {r3}
    6024:	0409      	lsls	r1, r1, #16
    6026:	041a      	lsls	r2, r3, #16
    6028:	0c12      	lsrs	r2, r2, #16
    602a:	4452      	add	r2, sl
    602c:	0c09      	lsrs	r1, r1, #16
    602e:	1a52      	subs	r2, r2, r1
    6030:	0c19      	lsrs	r1, r3, #16
    6032:	465b      	mov	r3, fp
    6034:	0c1b      	lsrs	r3, r3, #16
    6036:	1acb      	subs	r3, r1, r3
    6038:	1411      	asrs	r1, r2, #16
    603a:	185b      	adds	r3, r3, r1
    603c:	0412      	lsls	r2, r2, #16
    603e:	1419      	asrs	r1, r3, #16
    6040:	0c12      	lsrs	r2, r2, #16
    6042:	041b      	lsls	r3, r3, #16
    6044:	468a      	mov	sl, r1
    6046:	4313      	orrs	r3, r2
    6048:	1d29      	adds	r1, r5, #4
    604a:	602b      	str	r3, [r5, #0]
    604c:	000d      	movs	r5, r1
    604e:	45b0      	cmp	r8, r6
    6050:	d8e2      	bhi.n	6018 <__mdiff+0x84>
    6052:	45a4      	cmp	ip, r4
    6054:	d916      	bls.n	6084 <__mdiff+0xf0>
    6056:	cc08      	ldmia	r4!, {r3}
    6058:	041a      	lsls	r2, r3, #16
    605a:	0c12      	lsrs	r2, r2, #16
    605c:	4452      	add	r2, sl
    605e:	1416      	asrs	r6, r2, #16
    6060:	0c1b      	lsrs	r3, r3, #16
    6062:	199b      	adds	r3, r3, r6
    6064:	0412      	lsls	r2, r2, #16
    6066:	141e      	asrs	r6, r3, #16
    6068:	0c12      	lsrs	r2, r2, #16
    606a:	041b      	lsls	r3, r3, #16
    606c:	4313      	orrs	r3, r2
    606e:	46b2      	mov	sl, r6
    6070:	c508      	stmia	r5!, {r3}
    6072:	45a4      	cmp	ip, r4
    6074:	d8ef      	bhi.n	6056 <__mdiff+0xc2>
    6076:	4662      	mov	r2, ip
    6078:	2403      	movs	r4, #3
    607a:	1bd2      	subs	r2, r2, r7
    607c:	3a05      	subs	r2, #5
    607e:	43a2      	bics	r2, r4
    6080:	3204      	adds	r2, #4
    6082:	1889      	adds	r1, r1, r2
    6084:	3904      	subs	r1, #4
    6086:	2b00      	cmp	r3, #0
    6088:	d104      	bne.n	6094 <__mdiff+0x100>
    608a:	3904      	subs	r1, #4
    608c:	680b      	ldr	r3, [r1, #0]
    608e:	3801      	subs	r0, #1
    6090:	2b00      	cmp	r3, #0
    6092:	d0fa      	beq.n	608a <__mdiff+0xf6>
    6094:	464b      	mov	r3, r9
    6096:	6118      	str	r0, [r3, #16]
    6098:	4648      	mov	r0, r9
    609a:	bc3c      	pop	{r2, r3, r4, r5}
    609c:	4690      	mov	r8, r2
    609e:	4699      	mov	r9, r3
    60a0:	46a2      	mov	sl, r4
    60a2:	46ab      	mov	fp, r5
    60a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    60a6:	2100      	movs	r1, #0
    60a8:	f7ff fd26 	bl	5af8 <_Balloc>
    60ac:	2301      	movs	r3, #1
    60ae:	6103      	str	r3, [r0, #16]
    60b0:	2300      	movs	r3, #0
    60b2:	4681      	mov	r9, r0
    60b4:	6143      	str	r3, [r0, #20]
    60b6:	e7ef      	b.n	6098 <__mdiff+0x104>
    60b8:	4666      	mov	r6, ip
    60ba:	e799      	b.n	5ff0 <__mdiff+0x5c>
    60bc:	0027      	movs	r7, r4
    60be:	000e      	movs	r6, r1
    60c0:	46a0      	mov	r8, r4
    60c2:	3714      	adds	r7, #20
    60c4:	3614      	adds	r6, #20
    60c6:	000c      	movs	r4, r1
    60c8:	2501      	movs	r5, #1
    60ca:	e791      	b.n	5ff0 <__mdiff+0x5c>

000060cc <__d2b>:
    60cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    60ce:	2101      	movs	r1, #1
    60d0:	001c      	movs	r4, r3
    60d2:	b083      	sub	sp, #12
    60d4:	9e08      	ldr	r6, [sp, #32]
    60d6:	0015      	movs	r5, r2
    60d8:	f7ff fd0e 	bl	5af8 <_Balloc>
    60dc:	0323      	lsls	r3, r4, #12
    60de:	0064      	lsls	r4, r4, #1
    60e0:	0007      	movs	r7, r0
    60e2:	0b1b      	lsrs	r3, r3, #12
    60e4:	0d64      	lsrs	r4, r4, #21
    60e6:	d002      	beq.n	60ee <__d2b+0x22>
    60e8:	2280      	movs	r2, #128	; 0x80
    60ea:	0352      	lsls	r2, r2, #13
    60ec:	4313      	orrs	r3, r2
    60ee:	9301      	str	r3, [sp, #4]
    60f0:	2d00      	cmp	r5, #0
    60f2:	d019      	beq.n	6128 <__d2b+0x5c>
    60f4:	4668      	mov	r0, sp
    60f6:	9500      	str	r5, [sp, #0]
    60f8:	f7ff fd90 	bl	5c1c <__lo0bits>
    60fc:	2800      	cmp	r0, #0
    60fe:	d130      	bne.n	6162 <__d2b+0x96>
    6100:	9b00      	ldr	r3, [sp, #0]
    6102:	617b      	str	r3, [r7, #20]
    6104:	9b01      	ldr	r3, [sp, #4]
    6106:	61bb      	str	r3, [r7, #24]
    6108:	1e5a      	subs	r2, r3, #1
    610a:	4193      	sbcs	r3, r2
    610c:	1c5d      	adds	r5, r3, #1
    610e:	613d      	str	r5, [r7, #16]
    6110:	2c00      	cmp	r4, #0
    6112:	d014      	beq.n	613e <__d2b+0x72>
    6114:	4b19      	ldr	r3, [pc, #100]	; (617c <__d2b+0xb0>)
    6116:	469c      	mov	ip, r3
    6118:	2335      	movs	r3, #53	; 0x35
    611a:	4464      	add	r4, ip
    611c:	1824      	adds	r4, r4, r0
    611e:	1a18      	subs	r0, r3, r0
    6120:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6122:	6034      	str	r4, [r6, #0]
    6124:	6018      	str	r0, [r3, #0]
    6126:	e019      	b.n	615c <__d2b+0x90>
    6128:	a801      	add	r0, sp, #4
    612a:	f7ff fd77 	bl	5c1c <__lo0bits>
    612e:	9b01      	ldr	r3, [sp, #4]
    6130:	3020      	adds	r0, #32
    6132:	617b      	str	r3, [r7, #20]
    6134:	2301      	movs	r3, #1
    6136:	2501      	movs	r5, #1
    6138:	613b      	str	r3, [r7, #16]
    613a:	2c00      	cmp	r4, #0
    613c:	d1ea      	bne.n	6114 <__d2b+0x48>
    613e:	4b10      	ldr	r3, [pc, #64]	; (6180 <__d2b+0xb4>)
    6140:	469c      	mov	ip, r3
    6142:	4b10      	ldr	r3, [pc, #64]	; (6184 <__d2b+0xb8>)
    6144:	4460      	add	r0, ip
    6146:	18eb      	adds	r3, r5, r3
    6148:	009b      	lsls	r3, r3, #2
    614a:	18fb      	adds	r3, r7, r3
    614c:	6030      	str	r0, [r6, #0]
    614e:	6958      	ldr	r0, [r3, #20]
    6150:	f7ff fd4a 	bl	5be8 <__hi0bits>
    6154:	016b      	lsls	r3, r5, #5
    6156:	1a18      	subs	r0, r3, r0
    6158:	9b09      	ldr	r3, [sp, #36]	; 0x24
    615a:	6018      	str	r0, [r3, #0]
    615c:	0038      	movs	r0, r7
    615e:	b003      	add	sp, #12
    6160:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6162:	9b01      	ldr	r3, [sp, #4]
    6164:	2220      	movs	r2, #32
    6166:	0019      	movs	r1, r3
    6168:	1a12      	subs	r2, r2, r0
    616a:	4091      	lsls	r1, r2
    616c:	000a      	movs	r2, r1
    616e:	40c3      	lsrs	r3, r0
    6170:	9900      	ldr	r1, [sp, #0]
    6172:	9301      	str	r3, [sp, #4]
    6174:	430a      	orrs	r2, r1
    6176:	617a      	str	r2, [r7, #20]
    6178:	e7c5      	b.n	6106 <__d2b+0x3a>
    617a:	46c0      	nop			; (mov r8, r8)
    617c:	fffffbcd 	.word	0xfffffbcd
    6180:	fffffbce 	.word	0xfffffbce
    6184:	3fffffff 	.word	0x3fffffff

00006188 <_sbrk_r>:
    6188:	2300      	movs	r3, #0
    618a:	b570      	push	{r4, r5, r6, lr}
    618c:	4c06      	ldr	r4, [pc, #24]	; (61a8 <_sbrk_r+0x20>)
    618e:	0005      	movs	r5, r0
    6190:	0008      	movs	r0, r1
    6192:	6023      	str	r3, [r4, #0]
    6194:	f7fb fd5c 	bl	1c50 <_sbrk>
    6198:	1c43      	adds	r3, r0, #1
    619a:	d000      	beq.n	619e <_sbrk_r+0x16>
    619c:	bd70      	pop	{r4, r5, r6, pc}
    619e:	6823      	ldr	r3, [r4, #0]
    61a0:	2b00      	cmp	r3, #0
    61a2:	d0fb      	beq.n	619c <_sbrk_r+0x14>
    61a4:	602b      	str	r3, [r5, #0]
    61a6:	e7f9      	b.n	619c <_sbrk_r+0x14>
    61a8:	20000c14 	.word	0x20000c14

000061ac <__ssprint_r>:
    61ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    61ae:	4657      	mov	r7, sl
    61b0:	464e      	mov	r6, r9
    61b2:	46de      	mov	lr, fp
    61b4:	4645      	mov	r5, r8
    61b6:	b5e0      	push	{r5, r6, r7, lr}
    61b8:	6893      	ldr	r3, [r2, #8]
    61ba:	b083      	sub	sp, #12
    61bc:	9001      	str	r0, [sp, #4]
    61be:	000e      	movs	r6, r1
    61c0:	4692      	mov	sl, r2
    61c2:	2b00      	cmp	r3, #0
    61c4:	d070      	beq.n	62a8 <__ssprint_r+0xfc>
    61c6:	688d      	ldr	r5, [r1, #8]
    61c8:	6813      	ldr	r3, [r2, #0]
    61ca:	002c      	movs	r4, r5
    61cc:	6808      	ldr	r0, [r1, #0]
    61ce:	001d      	movs	r5, r3
    61d0:	e046      	b.n	6260 <__ssprint_r+0xb4>
    61d2:	2290      	movs	r2, #144	; 0x90
    61d4:	89b3      	ldrh	r3, [r6, #12]
    61d6:	00d2      	lsls	r2, r2, #3
    61d8:	4213      	tst	r3, r2
    61da:	d030      	beq.n	623e <__ssprint_r+0x92>
    61dc:	6931      	ldr	r1, [r6, #16]
    61de:	1a42      	subs	r2, r0, r1
    61e0:	4693      	mov	fp, r2
    61e2:	6970      	ldr	r0, [r6, #20]
    61e4:	0042      	lsls	r2, r0, #1
    61e6:	1812      	adds	r2, r2, r0
    61e8:	0fd0      	lsrs	r0, r2, #31
    61ea:	1882      	adds	r2, r0, r2
    61ec:	1052      	asrs	r2, r2, #1
    61ee:	4690      	mov	r8, r2
    61f0:	465a      	mov	r2, fp
    61f2:	1c50      	adds	r0, r2, #1
    61f4:	19c0      	adds	r0, r0, r7
    61f6:	4642      	mov	r2, r8
    61f8:	4540      	cmp	r0, r8
    61fa:	d901      	bls.n	6200 <__ssprint_r+0x54>
    61fc:	4680      	mov	r8, r0
    61fe:	0002      	movs	r2, r0
    6200:	2080      	movs	r0, #128	; 0x80
    6202:	00c0      	lsls	r0, r0, #3
    6204:	4203      	tst	r3, r0
    6206:	d038      	beq.n	627a <__ssprint_r+0xce>
    6208:	0011      	movs	r1, r2
    620a:	9801      	ldr	r0, [sp, #4]
    620c:	f7ff f92e 	bl	546c <_malloc_r>
    6210:	1e04      	subs	r4, r0, #0
    6212:	d054      	beq.n	62be <__ssprint_r+0x112>
    6214:	465a      	mov	r2, fp
    6216:	6931      	ldr	r1, [r6, #16]
    6218:	f7ff fc1c 	bl	5a54 <memcpy>
    621c:	89b3      	ldrh	r3, [r6, #12]
    621e:	4a2a      	ldr	r2, [pc, #168]	; (62c8 <__ssprint_r+0x11c>)
    6220:	4013      	ands	r3, r2
    6222:	2280      	movs	r2, #128	; 0x80
    6224:	4313      	orrs	r3, r2
    6226:	81b3      	strh	r3, [r6, #12]
    6228:	4643      	mov	r3, r8
    622a:	0020      	movs	r0, r4
    622c:	465a      	mov	r2, fp
    622e:	6134      	str	r4, [r6, #16]
    6230:	46b8      	mov	r8, r7
    6232:	003c      	movs	r4, r7
    6234:	4458      	add	r0, fp
    6236:	6173      	str	r3, [r6, #20]
    6238:	1a9b      	subs	r3, r3, r2
    623a:	6030      	str	r0, [r6, #0]
    623c:	60b3      	str	r3, [r6, #8]
    623e:	4642      	mov	r2, r8
    6240:	4649      	mov	r1, r9
    6242:	f000 f9b3 	bl	65ac <memmove>
    6246:	68b3      	ldr	r3, [r6, #8]
    6248:	1b1c      	subs	r4, r3, r4
    624a:	6833      	ldr	r3, [r6, #0]
    624c:	60b4      	str	r4, [r6, #8]
    624e:	4443      	add	r3, r8
    6250:	6033      	str	r3, [r6, #0]
    6252:	0018      	movs	r0, r3
    6254:	4653      	mov	r3, sl
    6256:	689b      	ldr	r3, [r3, #8]
    6258:	1bdf      	subs	r7, r3, r7
    625a:	4653      	mov	r3, sl
    625c:	609f      	str	r7, [r3, #8]
    625e:	d023      	beq.n	62a8 <__ssprint_r+0xfc>
    6260:	686f      	ldr	r7, [r5, #4]
    6262:	002b      	movs	r3, r5
    6264:	3508      	adds	r5, #8
    6266:	2f00      	cmp	r7, #0
    6268:	d0fa      	beq.n	6260 <__ssprint_r+0xb4>
    626a:	681b      	ldr	r3, [r3, #0]
    626c:	46a0      	mov	r8, r4
    626e:	4699      	mov	r9, r3
    6270:	42a7      	cmp	r7, r4
    6272:	d2ae      	bcs.n	61d2 <__ssprint_r+0x26>
    6274:	003c      	movs	r4, r7
    6276:	46b8      	mov	r8, r7
    6278:	e7e1      	b.n	623e <__ssprint_r+0x92>
    627a:	9801      	ldr	r0, [sp, #4]
    627c:	f000 f9e6 	bl	664c <_realloc_r>
    6280:	1e04      	subs	r4, r0, #0
    6282:	d1d1      	bne.n	6228 <__ssprint_r+0x7c>
    6284:	9c01      	ldr	r4, [sp, #4]
    6286:	6931      	ldr	r1, [r6, #16]
    6288:	0020      	movs	r0, r4
    628a:	f000 f89b 	bl	63c4 <_free_r>
    628e:	230c      	movs	r3, #12
    6290:	6023      	str	r3, [r4, #0]
    6292:	2240      	movs	r2, #64	; 0x40
    6294:	89b3      	ldrh	r3, [r6, #12]
    6296:	2001      	movs	r0, #1
    6298:	4313      	orrs	r3, r2
    629a:	81b3      	strh	r3, [r6, #12]
    629c:	4652      	mov	r2, sl
    629e:	2300      	movs	r3, #0
    62a0:	4240      	negs	r0, r0
    62a2:	6093      	str	r3, [r2, #8]
    62a4:	6053      	str	r3, [r2, #4]
    62a6:	e003      	b.n	62b0 <__ssprint_r+0x104>
    62a8:	2300      	movs	r3, #0
    62aa:	4652      	mov	r2, sl
    62ac:	2000      	movs	r0, #0
    62ae:	6053      	str	r3, [r2, #4]
    62b0:	b003      	add	sp, #12
    62b2:	bc3c      	pop	{r2, r3, r4, r5}
    62b4:	4690      	mov	r8, r2
    62b6:	4699      	mov	r9, r3
    62b8:	46a2      	mov	sl, r4
    62ba:	46ab      	mov	fp, r5
    62bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    62be:	230c      	movs	r3, #12
    62c0:	9a01      	ldr	r2, [sp, #4]
    62c2:	6013      	str	r3, [r2, #0]
    62c4:	e7e5      	b.n	6292 <__ssprint_r+0xe6>
    62c6:	46c0      	nop			; (mov r8, r8)
    62c8:	fffffb7f 	.word	0xfffffb7f

000062cc <_calloc_r>:
    62cc:	b510      	push	{r4, lr}
    62ce:	4351      	muls	r1, r2
    62d0:	f7ff f8cc 	bl	546c <_malloc_r>
    62d4:	1e04      	subs	r4, r0, #0
    62d6:	d01c      	beq.n	6312 <_calloc_r+0x46>
    62d8:	0003      	movs	r3, r0
    62da:	3b08      	subs	r3, #8
    62dc:	685a      	ldr	r2, [r3, #4]
    62de:	2303      	movs	r3, #3
    62e0:	439a      	bics	r2, r3
    62e2:	3a04      	subs	r2, #4
    62e4:	2a24      	cmp	r2, #36	; 0x24
    62e6:	d816      	bhi.n	6316 <_calloc_r+0x4a>
    62e8:	0003      	movs	r3, r0
    62ea:	2a13      	cmp	r2, #19
    62ec:	d90d      	bls.n	630a <_calloc_r+0x3e>
    62ee:	2100      	movs	r1, #0
    62f0:	3308      	adds	r3, #8
    62f2:	6001      	str	r1, [r0, #0]
    62f4:	6041      	str	r1, [r0, #4]
    62f6:	2a1b      	cmp	r2, #27
    62f8:	d907      	bls.n	630a <_calloc_r+0x3e>
    62fa:	6081      	str	r1, [r0, #8]
    62fc:	60c1      	str	r1, [r0, #12]
    62fe:	2a24      	cmp	r2, #36	; 0x24
    6300:	d10d      	bne.n	631e <_calloc_r+0x52>
    6302:	0003      	movs	r3, r0
    6304:	6101      	str	r1, [r0, #16]
    6306:	3318      	adds	r3, #24
    6308:	6141      	str	r1, [r0, #20]
    630a:	2200      	movs	r2, #0
    630c:	601a      	str	r2, [r3, #0]
    630e:	605a      	str	r2, [r3, #4]
    6310:	609a      	str	r2, [r3, #8]
    6312:	0020      	movs	r0, r4
    6314:	bd10      	pop	{r4, pc}
    6316:	2100      	movs	r1, #0
    6318:	f7fc fbdc 	bl	2ad4 <memset>
    631c:	e7f9      	b.n	6312 <_calloc_r+0x46>
    631e:	0003      	movs	r3, r0
    6320:	3310      	adds	r3, #16
    6322:	e7f2      	b.n	630a <_calloc_r+0x3e>

00006324 <_malloc_trim_r>:
    6324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6326:	000c      	movs	r4, r1
    6328:	0006      	movs	r6, r0
    632a:	f7ff fbd5 	bl	5ad8 <__malloc_lock>
    632e:	4f20      	ldr	r7, [pc, #128]	; (63b0 <_malloc_trim_r+0x8c>)
    6330:	68bb      	ldr	r3, [r7, #8]
    6332:	685d      	ldr	r5, [r3, #4]
    6334:	2303      	movs	r3, #3
    6336:	439d      	bics	r5, r3
    6338:	4b1e      	ldr	r3, [pc, #120]	; (63b4 <_malloc_trim_r+0x90>)
    633a:	1b2c      	subs	r4, r5, r4
    633c:	469c      	mov	ip, r3
    633e:	4464      	add	r4, ip
    6340:	0b24      	lsrs	r4, r4, #12
    6342:	4b1d      	ldr	r3, [pc, #116]	; (63b8 <_malloc_trim_r+0x94>)
    6344:	3c01      	subs	r4, #1
    6346:	0324      	lsls	r4, r4, #12
    6348:	429c      	cmp	r4, r3
    634a:	dd07      	ble.n	635c <_malloc_trim_r+0x38>
    634c:	2100      	movs	r1, #0
    634e:	0030      	movs	r0, r6
    6350:	f7ff ff1a 	bl	6188 <_sbrk_r>
    6354:	68bb      	ldr	r3, [r7, #8]
    6356:	195b      	adds	r3, r3, r5
    6358:	4298      	cmp	r0, r3
    635a:	d004      	beq.n	6366 <_malloc_trim_r+0x42>
    635c:	0030      	movs	r0, r6
    635e:	f7ff fbc3 	bl	5ae8 <__malloc_unlock>
    6362:	2000      	movs	r0, #0
    6364:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6366:	4261      	negs	r1, r4
    6368:	0030      	movs	r0, r6
    636a:	f7ff ff0d 	bl	6188 <_sbrk_r>
    636e:	1c43      	adds	r3, r0, #1
    6370:	d00d      	beq.n	638e <_malloc_trim_r+0x6a>
    6372:	2201      	movs	r2, #1
    6374:	68bb      	ldr	r3, [r7, #8]
    6376:	1b2d      	subs	r5, r5, r4
    6378:	4315      	orrs	r5, r2
    637a:	605d      	str	r5, [r3, #4]
    637c:	4b0f      	ldr	r3, [pc, #60]	; (63bc <_malloc_trim_r+0x98>)
    637e:	0030      	movs	r0, r6
    6380:	681a      	ldr	r2, [r3, #0]
    6382:	1b14      	subs	r4, r2, r4
    6384:	601c      	str	r4, [r3, #0]
    6386:	f7ff fbaf 	bl	5ae8 <__malloc_unlock>
    638a:	2001      	movs	r0, #1
    638c:	e7ea      	b.n	6364 <_malloc_trim_r+0x40>
    638e:	2100      	movs	r1, #0
    6390:	0030      	movs	r0, r6
    6392:	f7ff fef9 	bl	6188 <_sbrk_r>
    6396:	68ba      	ldr	r2, [r7, #8]
    6398:	1a83      	subs	r3, r0, r2
    639a:	2b0f      	cmp	r3, #15
    639c:	ddde      	ble.n	635c <_malloc_trim_r+0x38>
    639e:	4908      	ldr	r1, [pc, #32]	; (63c0 <_malloc_trim_r+0x9c>)
    63a0:	6809      	ldr	r1, [r1, #0]
    63a2:	1a40      	subs	r0, r0, r1
    63a4:	4905      	ldr	r1, [pc, #20]	; (63bc <_malloc_trim_r+0x98>)
    63a6:	6008      	str	r0, [r1, #0]
    63a8:	2101      	movs	r1, #1
    63aa:	430b      	orrs	r3, r1
    63ac:	6053      	str	r3, [r2, #4]
    63ae:	e7d5      	b.n	635c <_malloc_trim_r+0x38>
    63b0:	20000444 	.word	0x20000444
    63b4:	00000fef 	.word	0x00000fef
    63b8:	00000fff 	.word	0x00000fff
    63bc:	20000a1c 	.word	0x20000a1c
    63c0:	2000084c 	.word	0x2000084c

000063c4 <_free_r>:
    63c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    63c6:	0004      	movs	r4, r0
    63c8:	1e0d      	subs	r5, r1, #0
    63ca:	d03c      	beq.n	6446 <_free_r+0x82>
    63cc:	f7ff fb84 	bl	5ad8 <__malloc_lock>
    63d0:	0029      	movs	r1, r5
    63d2:	3908      	subs	r1, #8
    63d4:	6848      	ldr	r0, [r1, #4]
    63d6:	2301      	movs	r3, #1
    63d8:	0005      	movs	r5, r0
    63da:	2603      	movs	r6, #3
    63dc:	439d      	bics	r5, r3
    63de:	194a      	adds	r2, r1, r5
    63e0:	469c      	mov	ip, r3
    63e2:	4f61      	ldr	r7, [pc, #388]	; (6568 <_free_r+0x1a4>)
    63e4:	6853      	ldr	r3, [r2, #4]
    63e6:	43b3      	bics	r3, r6
    63e8:	68be      	ldr	r6, [r7, #8]
    63ea:	42b2      	cmp	r2, r6
    63ec:	d056      	beq.n	649c <_free_r+0xd8>
    63ee:	4666      	mov	r6, ip
    63f0:	6053      	str	r3, [r2, #4]
    63f2:	4206      	tst	r6, r0
    63f4:	d10a      	bne.n	640c <_free_r+0x48>
    63f6:	003e      	movs	r6, r7
    63f8:	6808      	ldr	r0, [r1, #0]
    63fa:	3608      	adds	r6, #8
    63fc:	1a09      	subs	r1, r1, r0
    63fe:	182d      	adds	r5, r5, r0
    6400:	6888      	ldr	r0, [r1, #8]
    6402:	42b0      	cmp	r0, r6
    6404:	d065      	beq.n	64d2 <_free_r+0x10e>
    6406:	68ce      	ldr	r6, [r1, #12]
    6408:	60c6      	str	r6, [r0, #12]
    640a:	60b0      	str	r0, [r6, #8]
    640c:	2001      	movs	r0, #1
    640e:	18d6      	adds	r6, r2, r3
    6410:	6876      	ldr	r6, [r6, #4]
    6412:	4206      	tst	r6, r0
    6414:	d033      	beq.n	647e <_free_r+0xba>
    6416:	4b55      	ldr	r3, [pc, #340]	; (656c <_free_r+0x1a8>)
    6418:	4328      	orrs	r0, r5
    641a:	6048      	str	r0, [r1, #4]
    641c:	514d      	str	r5, [r1, r5]
    641e:	429d      	cmp	r5, r3
    6420:	d812      	bhi.n	6448 <_free_r+0x84>
    6422:	08ed      	lsrs	r5, r5, #3
    6424:	3bff      	subs	r3, #255	; 0xff
    6426:	10aa      	asrs	r2, r5, #2
    6428:	3bff      	subs	r3, #255	; 0xff
    642a:	4093      	lsls	r3, r2
    642c:	687a      	ldr	r2, [r7, #4]
    642e:	00ed      	lsls	r5, r5, #3
    6430:	4313      	orrs	r3, r2
    6432:	607b      	str	r3, [r7, #4]
    6434:	19ef      	adds	r7, r5, r7
    6436:	68bb      	ldr	r3, [r7, #8]
    6438:	60cf      	str	r7, [r1, #12]
    643a:	608b      	str	r3, [r1, #8]
    643c:	60b9      	str	r1, [r7, #8]
    643e:	60d9      	str	r1, [r3, #12]
    6440:	0020      	movs	r0, r4
    6442:	f7ff fb51 	bl	5ae8 <__malloc_unlock>
    6446:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6448:	0a68      	lsrs	r0, r5, #9
    644a:	2804      	cmp	r0, #4
    644c:	d850      	bhi.n	64f0 <_free_r+0x12c>
    644e:	09a8      	lsrs	r0, r5, #6
    6450:	0002      	movs	r2, r0
    6452:	3039      	adds	r0, #57	; 0x39
    6454:	3238      	adds	r2, #56	; 0x38
    6456:	00c0      	lsls	r0, r0, #3
    6458:	1838      	adds	r0, r7, r0
    645a:	3808      	subs	r0, #8
    645c:	6883      	ldr	r3, [r0, #8]
    645e:	2603      	movs	r6, #3
    6460:	4298      	cmp	r0, r3
    6462:	d04c      	beq.n	64fe <_free_r+0x13a>
    6464:	685a      	ldr	r2, [r3, #4]
    6466:	43b2      	bics	r2, r6
    6468:	4295      	cmp	r5, r2
    646a:	d230      	bcs.n	64ce <_free_r+0x10a>
    646c:	689b      	ldr	r3, [r3, #8]
    646e:	4298      	cmp	r0, r3
    6470:	d1f8      	bne.n	6464 <_free_r+0xa0>
    6472:	68c3      	ldr	r3, [r0, #12]
    6474:	60cb      	str	r3, [r1, #12]
    6476:	6088      	str	r0, [r1, #8]
    6478:	6099      	str	r1, [r3, #8]
    647a:	60c1      	str	r1, [r0, #12]
    647c:	e7e0      	b.n	6440 <_free_r+0x7c>
    647e:	18ed      	adds	r5, r5, r3
    6480:	4e3b      	ldr	r6, [pc, #236]	; (6570 <_free_r+0x1ac>)
    6482:	6893      	ldr	r3, [r2, #8]
    6484:	42b3      	cmp	r3, r6
    6486:	d042      	beq.n	650e <_free_r+0x14a>
    6488:	68d2      	ldr	r2, [r2, #12]
    648a:	4328      	orrs	r0, r5
    648c:	60da      	str	r2, [r3, #12]
    648e:	6093      	str	r3, [r2, #8]
    6490:	4b36      	ldr	r3, [pc, #216]	; (656c <_free_r+0x1a8>)
    6492:	6048      	str	r0, [r1, #4]
    6494:	514d      	str	r5, [r1, r5]
    6496:	429d      	cmp	r5, r3
    6498:	d8d6      	bhi.n	6448 <_free_r+0x84>
    649a:	e7c2      	b.n	6422 <_free_r+0x5e>
    649c:	4662      	mov	r2, ip
    649e:	18eb      	adds	r3, r5, r3
    64a0:	4202      	tst	r2, r0
    64a2:	d106      	bne.n	64b2 <_free_r+0xee>
    64a4:	680a      	ldr	r2, [r1, #0]
    64a6:	1a89      	subs	r1, r1, r2
    64a8:	6888      	ldr	r0, [r1, #8]
    64aa:	189b      	adds	r3, r3, r2
    64ac:	68ca      	ldr	r2, [r1, #12]
    64ae:	60c2      	str	r2, [r0, #12]
    64b0:	6090      	str	r0, [r2, #8]
    64b2:	2201      	movs	r2, #1
    64b4:	431a      	orrs	r2, r3
    64b6:	604a      	str	r2, [r1, #4]
    64b8:	4a2e      	ldr	r2, [pc, #184]	; (6574 <_free_r+0x1b0>)
    64ba:	60b9      	str	r1, [r7, #8]
    64bc:	6812      	ldr	r2, [r2, #0]
    64be:	4293      	cmp	r3, r2
    64c0:	d3be      	bcc.n	6440 <_free_r+0x7c>
    64c2:	4b2d      	ldr	r3, [pc, #180]	; (6578 <_free_r+0x1b4>)
    64c4:	0020      	movs	r0, r4
    64c6:	6819      	ldr	r1, [r3, #0]
    64c8:	f7ff ff2c 	bl	6324 <_malloc_trim_r>
    64cc:	e7b8      	b.n	6440 <_free_r+0x7c>
    64ce:	0018      	movs	r0, r3
    64d0:	e7cf      	b.n	6472 <_free_r+0xae>
    64d2:	4666      	mov	r6, ip
    64d4:	18d0      	adds	r0, r2, r3
    64d6:	6840      	ldr	r0, [r0, #4]
    64d8:	4230      	tst	r0, r6
    64da:	d13f      	bne.n	655c <_free_r+0x198>
    64dc:	6890      	ldr	r0, [r2, #8]
    64de:	195d      	adds	r5, r3, r5
    64e0:	68d3      	ldr	r3, [r2, #12]
    64e2:	60c3      	str	r3, [r0, #12]
    64e4:	6098      	str	r0, [r3, #8]
    64e6:	4663      	mov	r3, ip
    64e8:	432b      	orrs	r3, r5
    64ea:	604b      	str	r3, [r1, #4]
    64ec:	514d      	str	r5, [r1, r5]
    64ee:	e7a7      	b.n	6440 <_free_r+0x7c>
    64f0:	2814      	cmp	r0, #20
    64f2:	d814      	bhi.n	651e <_free_r+0x15a>
    64f4:	0002      	movs	r2, r0
    64f6:	305c      	adds	r0, #92	; 0x5c
    64f8:	325b      	adds	r2, #91	; 0x5b
    64fa:	00c0      	lsls	r0, r0, #3
    64fc:	e7ac      	b.n	6458 <_free_r+0x94>
    64fe:	2301      	movs	r3, #1
    6500:	1092      	asrs	r2, r2, #2
    6502:	4093      	lsls	r3, r2
    6504:	687a      	ldr	r2, [r7, #4]
    6506:	4313      	orrs	r3, r2
    6508:	607b      	str	r3, [r7, #4]
    650a:	0003      	movs	r3, r0
    650c:	e7b2      	b.n	6474 <_free_r+0xb0>
    650e:	4328      	orrs	r0, r5
    6510:	60d9      	str	r1, [r3, #12]
    6512:	6099      	str	r1, [r3, #8]
    6514:	60cb      	str	r3, [r1, #12]
    6516:	608b      	str	r3, [r1, #8]
    6518:	6048      	str	r0, [r1, #4]
    651a:	514d      	str	r5, [r1, r5]
    651c:	e790      	b.n	6440 <_free_r+0x7c>
    651e:	2854      	cmp	r0, #84	; 0x54
    6520:	d805      	bhi.n	652e <_free_r+0x16a>
    6522:	0b28      	lsrs	r0, r5, #12
    6524:	0002      	movs	r2, r0
    6526:	306f      	adds	r0, #111	; 0x6f
    6528:	326e      	adds	r2, #110	; 0x6e
    652a:	00c0      	lsls	r0, r0, #3
    652c:	e794      	b.n	6458 <_free_r+0x94>
    652e:	22aa      	movs	r2, #170	; 0xaa
    6530:	0052      	lsls	r2, r2, #1
    6532:	4290      	cmp	r0, r2
    6534:	d805      	bhi.n	6542 <_free_r+0x17e>
    6536:	0be8      	lsrs	r0, r5, #15
    6538:	0002      	movs	r2, r0
    653a:	3078      	adds	r0, #120	; 0x78
    653c:	3277      	adds	r2, #119	; 0x77
    653e:	00c0      	lsls	r0, r0, #3
    6540:	e78a      	b.n	6458 <_free_r+0x94>
    6542:	4a0e      	ldr	r2, [pc, #56]	; (657c <_free_r+0x1b8>)
    6544:	4290      	cmp	r0, r2
    6546:	d805      	bhi.n	6554 <_free_r+0x190>
    6548:	0ca8      	lsrs	r0, r5, #18
    654a:	0002      	movs	r2, r0
    654c:	307d      	adds	r0, #125	; 0x7d
    654e:	327c      	adds	r2, #124	; 0x7c
    6550:	00c0      	lsls	r0, r0, #3
    6552:	e781      	b.n	6458 <_free_r+0x94>
    6554:	20fe      	movs	r0, #254	; 0xfe
    6556:	227e      	movs	r2, #126	; 0x7e
    6558:	0080      	lsls	r0, r0, #2
    655a:	e77d      	b.n	6458 <_free_r+0x94>
    655c:	4663      	mov	r3, ip
    655e:	432b      	orrs	r3, r5
    6560:	604b      	str	r3, [r1, #4]
    6562:	6015      	str	r5, [r2, #0]
    6564:	e76c      	b.n	6440 <_free_r+0x7c>
    6566:	46c0      	nop			; (mov r8, r8)
    6568:	20000444 	.word	0x20000444
    656c:	000001ff 	.word	0x000001ff
    6570:	2000044c 	.word	0x2000044c
    6574:	20000850 	.word	0x20000850
    6578:	20000a4c 	.word	0x20000a4c
    657c:	00000554 	.word	0x00000554

00006580 <__ascii_mbtowc>:
    6580:	b082      	sub	sp, #8
    6582:	2900      	cmp	r1, #0
    6584:	d00a      	beq.n	659c <__ascii_mbtowc+0x1c>
    6586:	2a00      	cmp	r2, #0
    6588:	d00b      	beq.n	65a2 <__ascii_mbtowc+0x22>
    658a:	2b00      	cmp	r3, #0
    658c:	d00b      	beq.n	65a6 <__ascii_mbtowc+0x26>
    658e:	7813      	ldrb	r3, [r2, #0]
    6590:	600b      	str	r3, [r1, #0]
    6592:	7810      	ldrb	r0, [r2, #0]
    6594:	1e43      	subs	r3, r0, #1
    6596:	4198      	sbcs	r0, r3
    6598:	b002      	add	sp, #8
    659a:	4770      	bx	lr
    659c:	a901      	add	r1, sp, #4
    659e:	2a00      	cmp	r2, #0
    65a0:	d1f3      	bne.n	658a <__ascii_mbtowc+0xa>
    65a2:	2000      	movs	r0, #0
    65a4:	e7f8      	b.n	6598 <__ascii_mbtowc+0x18>
    65a6:	2002      	movs	r0, #2
    65a8:	4240      	negs	r0, r0
    65aa:	e7f5      	b.n	6598 <__ascii_mbtowc+0x18>

000065ac <memmove>:
    65ac:	b5f0      	push	{r4, r5, r6, r7, lr}
    65ae:	4288      	cmp	r0, r1
    65b0:	d90a      	bls.n	65c8 <memmove+0x1c>
    65b2:	188b      	adds	r3, r1, r2
    65b4:	4298      	cmp	r0, r3
    65b6:	d207      	bcs.n	65c8 <memmove+0x1c>
    65b8:	1e53      	subs	r3, r2, #1
    65ba:	2a00      	cmp	r2, #0
    65bc:	d003      	beq.n	65c6 <memmove+0x1a>
    65be:	5cca      	ldrb	r2, [r1, r3]
    65c0:	54c2      	strb	r2, [r0, r3]
    65c2:	3b01      	subs	r3, #1
    65c4:	d2fb      	bcs.n	65be <memmove+0x12>
    65c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    65c8:	0005      	movs	r5, r0
    65ca:	2a0f      	cmp	r2, #15
    65cc:	d808      	bhi.n	65e0 <memmove+0x34>
    65ce:	2a00      	cmp	r2, #0
    65d0:	d0f9      	beq.n	65c6 <memmove+0x1a>
    65d2:	2300      	movs	r3, #0
    65d4:	5ccc      	ldrb	r4, [r1, r3]
    65d6:	54ec      	strb	r4, [r5, r3]
    65d8:	3301      	adds	r3, #1
    65da:	4293      	cmp	r3, r2
    65dc:	d1fa      	bne.n	65d4 <memmove+0x28>
    65de:	e7f2      	b.n	65c6 <memmove+0x1a>
    65e0:	000b      	movs	r3, r1
    65e2:	4303      	orrs	r3, r0
    65e4:	079b      	lsls	r3, r3, #30
    65e6:	d12d      	bne.n	6644 <memmove+0x98>
    65e8:	0015      	movs	r5, r2
    65ea:	000c      	movs	r4, r1
    65ec:	0003      	movs	r3, r0
    65ee:	3d10      	subs	r5, #16
    65f0:	092f      	lsrs	r7, r5, #4
    65f2:	3701      	adds	r7, #1
    65f4:	013f      	lsls	r7, r7, #4
    65f6:	19c7      	adds	r7, r0, r7
    65f8:	6826      	ldr	r6, [r4, #0]
    65fa:	601e      	str	r6, [r3, #0]
    65fc:	6866      	ldr	r6, [r4, #4]
    65fe:	605e      	str	r6, [r3, #4]
    6600:	68a6      	ldr	r6, [r4, #8]
    6602:	609e      	str	r6, [r3, #8]
    6604:	68e6      	ldr	r6, [r4, #12]
    6606:	3410      	adds	r4, #16
    6608:	60de      	str	r6, [r3, #12]
    660a:	3310      	adds	r3, #16
    660c:	429f      	cmp	r7, r3
    660e:	d1f3      	bne.n	65f8 <memmove+0x4c>
    6610:	240f      	movs	r4, #15
    6612:	43a5      	bics	r5, r4
    6614:	3510      	adds	r5, #16
    6616:	1949      	adds	r1, r1, r5
    6618:	4014      	ands	r4, r2
    661a:	1945      	adds	r5, r0, r5
    661c:	2c03      	cmp	r4, #3
    661e:	d913      	bls.n	6648 <memmove+0x9c>
    6620:	2300      	movs	r3, #0
    6622:	1f27      	subs	r7, r4, #4
    6624:	08be      	lsrs	r6, r7, #2
    6626:	3601      	adds	r6, #1
    6628:	00b6      	lsls	r6, r6, #2
    662a:	58cc      	ldr	r4, [r1, r3]
    662c:	50ec      	str	r4, [r5, r3]
    662e:	3304      	adds	r3, #4
    6630:	42b3      	cmp	r3, r6
    6632:	d1fa      	bne.n	662a <memmove+0x7e>
    6634:	2603      	movs	r6, #3
    6636:	43b7      	bics	r7, r6
    6638:	1d3c      	adds	r4, r7, #4
    663a:	1909      	adds	r1, r1, r4
    663c:	192d      	adds	r5, r5, r4
    663e:	4032      	ands	r2, r6
    6640:	d1c7      	bne.n	65d2 <memmove+0x26>
    6642:	e7c0      	b.n	65c6 <memmove+0x1a>
    6644:	0005      	movs	r5, r0
    6646:	e7c4      	b.n	65d2 <memmove+0x26>
    6648:	0022      	movs	r2, r4
    664a:	e7c0      	b.n	65ce <memmove+0x22>

0000664c <_realloc_r>:
    664c:	b5f0      	push	{r4, r5, r6, r7, lr}
    664e:	464e      	mov	r6, r9
    6650:	4645      	mov	r5, r8
    6652:	46de      	mov	lr, fp
    6654:	4657      	mov	r7, sl
    6656:	b5e0      	push	{r5, r6, r7, lr}
    6658:	b085      	sub	sp, #20
    665a:	9001      	str	r0, [sp, #4]
    665c:	000e      	movs	r6, r1
    665e:	0015      	movs	r5, r2
    6660:	2900      	cmp	r1, #0
    6662:	d100      	bne.n	6666 <_realloc_r+0x1a>
    6664:	e09e      	b.n	67a4 <_realloc_r+0x158>
    6666:	0037      	movs	r7, r6
    6668:	9801      	ldr	r0, [sp, #4]
    666a:	3f08      	subs	r7, #8
    666c:	f7ff fa34 	bl	5ad8 <__malloc_lock>
    6670:	687a      	ldr	r2, [r7, #4]
    6672:	2303      	movs	r3, #3
    6674:	0014      	movs	r4, r2
    6676:	439c      	bics	r4, r3
    6678:	002b      	movs	r3, r5
    667a:	330b      	adds	r3, #11
    667c:	46b9      	mov	r9, r7
    667e:	2b16      	cmp	r3, #22
    6680:	d847      	bhi.n	6712 <_realloc_r+0xc6>
    6682:	2110      	movs	r1, #16
    6684:	2310      	movs	r3, #16
    6686:	4688      	mov	r8, r1
    6688:	4545      	cmp	r5, r8
    668a:	d846      	bhi.n	671a <_realloc_r+0xce>
    668c:	429c      	cmp	r4, r3
    668e:	da49      	bge.n	6724 <_realloc_r+0xd8>
    6690:	49cc      	ldr	r1, [pc, #816]	; (69c4 <_realloc_r+0x378>)
    6692:	1938      	adds	r0, r7, r4
    6694:	468b      	mov	fp, r1
    6696:	6889      	ldr	r1, [r1, #8]
    6698:	9002      	str	r0, [sp, #8]
    669a:	4288      	cmp	r0, r1
    669c:	d100      	bne.n	66a0 <_realloc_r+0x54>
    669e:	e0c2      	b.n	6826 <_realloc_r+0x1da>
    66a0:	2101      	movs	r1, #1
    66a2:	468a      	mov	sl, r1
    66a4:	6840      	ldr	r0, [r0, #4]
    66a6:	0001      	movs	r1, r0
    66a8:	9003      	str	r0, [sp, #12]
    66aa:	4650      	mov	r0, sl
    66ac:	4381      	bics	r1, r0
    66ae:	468c      	mov	ip, r1
    66b0:	9902      	ldr	r1, [sp, #8]
    66b2:	468b      	mov	fp, r1
    66b4:	44dc      	add	ip, fp
    66b6:	4661      	mov	r1, ip
    66b8:	6849      	ldr	r1, [r1, #4]
    66ba:	4201      	tst	r1, r0
    66bc:	d04d      	beq.n	675a <_realloc_r+0x10e>
    66be:	4210      	tst	r0, r2
    66c0:	d100      	bne.n	66c4 <_realloc_r+0x78>
    66c2:	e0a2      	b.n	680a <_realloc_r+0x1be>
    66c4:	0029      	movs	r1, r5
    66c6:	9801      	ldr	r0, [sp, #4]
    66c8:	f7fe fed0 	bl	546c <_malloc_r>
    66cc:	1e05      	subs	r5, r0, #0
    66ce:	d039      	beq.n	6744 <_realloc_r+0xf8>
    66d0:	2301      	movs	r3, #1
    66d2:	0002      	movs	r2, r0
    66d4:	6879      	ldr	r1, [r7, #4]
    66d6:	3a08      	subs	r2, #8
    66d8:	4399      	bics	r1, r3
    66da:	187f      	adds	r7, r7, r1
    66dc:	42ba      	cmp	r2, r7
    66de:	d100      	bne.n	66e2 <_realloc_r+0x96>
    66e0:	e12e      	b.n	6940 <_realloc_r+0x2f4>
    66e2:	1f22      	subs	r2, r4, #4
    66e4:	2a24      	cmp	r2, #36	; 0x24
    66e6:	d900      	bls.n	66ea <_realloc_r+0x9e>
    66e8:	e114      	b.n	6914 <_realloc_r+0x2c8>
    66ea:	2a13      	cmp	r2, #19
    66ec:	d900      	bls.n	66f0 <_realloc_r+0xa4>
    66ee:	e0e8      	b.n	68c2 <_realloc_r+0x276>
    66f0:	0003      	movs	r3, r0
    66f2:	0032      	movs	r2, r6
    66f4:	6811      	ldr	r1, [r2, #0]
    66f6:	6019      	str	r1, [r3, #0]
    66f8:	6851      	ldr	r1, [r2, #4]
    66fa:	6059      	str	r1, [r3, #4]
    66fc:	6892      	ldr	r2, [r2, #8]
    66fe:	609a      	str	r2, [r3, #8]
    6700:	9c01      	ldr	r4, [sp, #4]
    6702:	0031      	movs	r1, r6
    6704:	0020      	movs	r0, r4
    6706:	f7ff fe5d 	bl	63c4 <_free_r>
    670a:	0020      	movs	r0, r4
    670c:	f7ff f9ec 	bl	5ae8 <__malloc_unlock>
    6710:	e01b      	b.n	674a <_realloc_r+0xfe>
    6712:	2107      	movs	r1, #7
    6714:	438b      	bics	r3, r1
    6716:	4698      	mov	r8, r3
    6718:	d5b6      	bpl.n	6688 <_realloc_r+0x3c>
    671a:	230c      	movs	r3, #12
    671c:	9a01      	ldr	r2, [sp, #4]
    671e:	2500      	movs	r5, #0
    6720:	6013      	str	r3, [r2, #0]
    6722:	e012      	b.n	674a <_realloc_r+0xfe>
    6724:	0035      	movs	r5, r6
    6726:	4643      	mov	r3, r8
    6728:	1ae3      	subs	r3, r4, r3
    672a:	2b0f      	cmp	r3, #15
    672c:	d825      	bhi.n	677a <_realloc_r+0x12e>
    672e:	464b      	mov	r3, r9
    6730:	2201      	movs	r2, #1
    6732:	4649      	mov	r1, r9
    6734:	685b      	ldr	r3, [r3, #4]
    6736:	4013      	ands	r3, r2
    6738:	4323      	orrs	r3, r4
    673a:	604b      	str	r3, [r1, #4]
    673c:	444c      	add	r4, r9
    673e:	6863      	ldr	r3, [r4, #4]
    6740:	431a      	orrs	r2, r3
    6742:	6062      	str	r2, [r4, #4]
    6744:	9801      	ldr	r0, [sp, #4]
    6746:	f7ff f9cf 	bl	5ae8 <__malloc_unlock>
    674a:	0028      	movs	r0, r5
    674c:	b005      	add	sp, #20
    674e:	bc3c      	pop	{r2, r3, r4, r5}
    6750:	4690      	mov	r8, r2
    6752:	4699      	mov	r9, r3
    6754:	46a2      	mov	sl, r4
    6756:	46ab      	mov	fp, r5
    6758:	bdf0      	pop	{r4, r5, r6, r7, pc}
    675a:	2103      	movs	r1, #3
    675c:	9803      	ldr	r0, [sp, #12]
    675e:	468c      	mov	ip, r1
    6760:	4388      	bics	r0, r1
    6762:	1821      	adds	r1, r4, r0
    6764:	468b      	mov	fp, r1
    6766:	4299      	cmp	r1, r3
    6768:	db21      	blt.n	67ae <_realloc_r+0x162>
    676a:	9a02      	ldr	r2, [sp, #8]
    676c:	0035      	movs	r5, r6
    676e:	68d3      	ldr	r3, [r2, #12]
    6770:	6892      	ldr	r2, [r2, #8]
    6772:	465c      	mov	r4, fp
    6774:	60d3      	str	r3, [r2, #12]
    6776:	609a      	str	r2, [r3, #8]
    6778:	e7d5      	b.n	6726 <_realloc_r+0xda>
    677a:	464a      	mov	r2, r9
    677c:	2001      	movs	r0, #1
    677e:	4646      	mov	r6, r8
    6780:	6852      	ldr	r2, [r2, #4]
    6782:	4649      	mov	r1, r9
    6784:	4002      	ands	r2, r0
    6786:	4332      	orrs	r2, r6
    6788:	464e      	mov	r6, r9
    678a:	4441      	add	r1, r8
    678c:	4303      	orrs	r3, r0
    678e:	6072      	str	r2, [r6, #4]
    6790:	444c      	add	r4, r9
    6792:	604b      	str	r3, [r1, #4]
    6794:	6863      	ldr	r3, [r4, #4]
    6796:	3108      	adds	r1, #8
    6798:	4318      	orrs	r0, r3
    679a:	6060      	str	r0, [r4, #4]
    679c:	9801      	ldr	r0, [sp, #4]
    679e:	f7ff fe11 	bl	63c4 <_free_r>
    67a2:	e7cf      	b.n	6744 <_realloc_r+0xf8>
    67a4:	0011      	movs	r1, r2
    67a6:	f7fe fe61 	bl	546c <_malloc_r>
    67aa:	0005      	movs	r5, r0
    67ac:	e7cd      	b.n	674a <_realloc_r+0xfe>
    67ae:	4651      	mov	r1, sl
    67b0:	4211      	tst	r1, r2
    67b2:	d000      	beq.n	67b6 <_realloc_r+0x16a>
    67b4:	e786      	b.n	66c4 <_realloc_r+0x78>
    67b6:	4661      	mov	r1, ip
    67b8:	683a      	ldr	r2, [r7, #0]
    67ba:	1aba      	subs	r2, r7, r2
    67bc:	4692      	mov	sl, r2
    67be:	6852      	ldr	r2, [r2, #4]
    67c0:	438a      	bics	r2, r1
    67c2:	1880      	adds	r0, r0, r2
    67c4:	4683      	mov	fp, r0
    67c6:	44a3      	add	fp, r4
    67c8:	459b      	cmp	fp, r3
    67ca:	db26      	blt.n	681a <_realloc_r+0x1ce>
    67cc:	9a02      	ldr	r2, [sp, #8]
    67ce:	68d3      	ldr	r3, [r2, #12]
    67d0:	6892      	ldr	r2, [r2, #8]
    67d2:	60d3      	str	r3, [r2, #12]
    67d4:	609a      	str	r2, [r3, #8]
    67d6:	4653      	mov	r3, sl
    67d8:	4652      	mov	r2, sl
    67da:	4655      	mov	r5, sl
    67dc:	6892      	ldr	r2, [r2, #8]
    67de:	68db      	ldr	r3, [r3, #12]
    67e0:	3508      	adds	r5, #8
    67e2:	60d3      	str	r3, [r2, #12]
    67e4:	609a      	str	r2, [r3, #8]
    67e6:	1f22      	subs	r2, r4, #4
    67e8:	2a24      	cmp	r2, #36	; 0x24
    67ea:	d900      	bls.n	67ee <_realloc_r+0x1a2>
    67ec:	e096      	b.n	691c <_realloc_r+0x2d0>
    67ee:	2a13      	cmp	r2, #19
    67f0:	d972      	bls.n	68d8 <_realloc_r+0x28c>
    67f2:	4653      	mov	r3, sl
    67f4:	6831      	ldr	r1, [r6, #0]
    67f6:	6099      	str	r1, [r3, #8]
    67f8:	6871      	ldr	r1, [r6, #4]
    67fa:	60d9      	str	r1, [r3, #12]
    67fc:	2a1b      	cmp	r2, #27
    67fe:	d900      	bls.n	6802 <_realloc_r+0x1b6>
    6800:	e0a4      	b.n	694c <_realloc_r+0x300>
    6802:	0032      	movs	r2, r6
    6804:	3310      	adds	r3, #16
    6806:	3208      	adds	r2, #8
    6808:	e068      	b.n	68dc <_realloc_r+0x290>
    680a:	683a      	ldr	r2, [r7, #0]
    680c:	1aba      	subs	r2, r7, r2
    680e:	4692      	mov	sl, r2
    6810:	4651      	mov	r1, sl
    6812:	2203      	movs	r2, #3
    6814:	6849      	ldr	r1, [r1, #4]
    6816:	4391      	bics	r1, r2
    6818:	000a      	movs	r2, r1
    681a:	4693      	mov	fp, r2
    681c:	44a3      	add	fp, r4
    681e:	459b      	cmp	fp, r3
    6820:	da00      	bge.n	6824 <_realloc_r+0x1d8>
    6822:	e74f      	b.n	66c4 <_realloc_r+0x78>
    6824:	e7d7      	b.n	67d6 <_realloc_r+0x18a>
    6826:	2003      	movs	r0, #3
    6828:	9902      	ldr	r1, [sp, #8]
    682a:	4684      	mov	ip, r0
    682c:	6849      	ldr	r1, [r1, #4]
    682e:	4381      	bics	r1, r0
    6830:	4640      	mov	r0, r8
    6832:	1909      	adds	r1, r1, r4
    6834:	3010      	adds	r0, #16
    6836:	9002      	str	r0, [sp, #8]
    6838:	4281      	cmp	r1, r0
    683a:	da58      	bge.n	68ee <_realloc_r+0x2a2>
    683c:	07d2      	lsls	r2, r2, #31
    683e:	d500      	bpl.n	6842 <_realloc_r+0x1f6>
    6840:	e740      	b.n	66c4 <_realloc_r+0x78>
    6842:	4660      	mov	r0, ip
    6844:	683a      	ldr	r2, [r7, #0]
    6846:	1aba      	subs	r2, r7, r2
    6848:	4692      	mov	sl, r2
    684a:	6852      	ldr	r2, [r2, #4]
    684c:	4382      	bics	r2, r0
    684e:	9802      	ldr	r0, [sp, #8]
    6850:	1851      	adds	r1, r2, r1
    6852:	9103      	str	r1, [sp, #12]
    6854:	4288      	cmp	r0, r1
    6856:	dce0      	bgt.n	681a <_realloc_r+0x1ce>
    6858:	4653      	mov	r3, sl
    685a:	4652      	mov	r2, sl
    685c:	4655      	mov	r5, sl
    685e:	6892      	ldr	r2, [r2, #8]
    6860:	68db      	ldr	r3, [r3, #12]
    6862:	3508      	adds	r5, #8
    6864:	60d3      	str	r3, [r2, #12]
    6866:	609a      	str	r2, [r3, #8]
    6868:	1f22      	subs	r2, r4, #4
    686a:	2a24      	cmp	r2, #36	; 0x24
    686c:	d900      	bls.n	6870 <_realloc_r+0x224>
    686e:	e08e      	b.n	698e <_realloc_r+0x342>
    6870:	2a13      	cmp	r2, #19
    6872:	d800      	bhi.n	6876 <_realloc_r+0x22a>
    6874:	e088      	b.n	6988 <_realloc_r+0x33c>
    6876:	4653      	mov	r3, sl
    6878:	6831      	ldr	r1, [r6, #0]
    687a:	6099      	str	r1, [r3, #8]
    687c:	6871      	ldr	r1, [r6, #4]
    687e:	60d9      	str	r1, [r3, #12]
    6880:	2a1b      	cmp	r2, #27
    6882:	d900      	bls.n	6886 <_realloc_r+0x23a>
    6884:	e088      	b.n	6998 <_realloc_r+0x34c>
    6886:	0032      	movs	r2, r6
    6888:	3310      	adds	r3, #16
    688a:	3208      	adds	r2, #8
    688c:	6811      	ldr	r1, [r2, #0]
    688e:	6019      	str	r1, [r3, #0]
    6890:	6851      	ldr	r1, [r2, #4]
    6892:	6059      	str	r1, [r3, #4]
    6894:	6892      	ldr	r2, [r2, #8]
    6896:	609a      	str	r2, [r3, #8]
    6898:	4651      	mov	r1, sl
    689a:	465b      	mov	r3, fp
    689c:	4642      	mov	r2, r8
    689e:	4441      	add	r1, r8
    68a0:	6099      	str	r1, [r3, #8]
    68a2:	9b03      	ldr	r3, [sp, #12]
    68a4:	9801      	ldr	r0, [sp, #4]
    68a6:	1a9a      	subs	r2, r3, r2
    68a8:	2301      	movs	r3, #1
    68aa:	431a      	orrs	r2, r3
    68ac:	604a      	str	r2, [r1, #4]
    68ae:	4652      	mov	r2, sl
    68b0:	6852      	ldr	r2, [r2, #4]
    68b2:	4013      	ands	r3, r2
    68b4:	4642      	mov	r2, r8
    68b6:	4313      	orrs	r3, r2
    68b8:	4652      	mov	r2, sl
    68ba:	6053      	str	r3, [r2, #4]
    68bc:	f7ff f914 	bl	5ae8 <__malloc_unlock>
    68c0:	e743      	b.n	674a <_realloc_r+0xfe>
    68c2:	6833      	ldr	r3, [r6, #0]
    68c4:	6003      	str	r3, [r0, #0]
    68c6:	6873      	ldr	r3, [r6, #4]
    68c8:	6043      	str	r3, [r0, #4]
    68ca:	2a1b      	cmp	r2, #27
    68cc:	d82d      	bhi.n	692a <_realloc_r+0x2de>
    68ce:	0003      	movs	r3, r0
    68d0:	0032      	movs	r2, r6
    68d2:	3308      	adds	r3, #8
    68d4:	3208      	adds	r2, #8
    68d6:	e70d      	b.n	66f4 <_realloc_r+0xa8>
    68d8:	002b      	movs	r3, r5
    68da:	0032      	movs	r2, r6
    68dc:	6811      	ldr	r1, [r2, #0]
    68de:	465c      	mov	r4, fp
    68e0:	6019      	str	r1, [r3, #0]
    68e2:	6851      	ldr	r1, [r2, #4]
    68e4:	46d1      	mov	r9, sl
    68e6:	6059      	str	r1, [r3, #4]
    68e8:	6892      	ldr	r2, [r2, #8]
    68ea:	609a      	str	r2, [r3, #8]
    68ec:	e71b      	b.n	6726 <_realloc_r+0xda>
    68ee:	4643      	mov	r3, r8
    68f0:	18fa      	adds	r2, r7, r3
    68f2:	465b      	mov	r3, fp
    68f4:	609a      	str	r2, [r3, #8]
    68f6:	4643      	mov	r3, r8
    68f8:	1ac9      	subs	r1, r1, r3
    68fa:	2301      	movs	r3, #1
    68fc:	4319      	orrs	r1, r3
    68fe:	6051      	str	r1, [r2, #4]
    6900:	687a      	ldr	r2, [r7, #4]
    6902:	9801      	ldr	r0, [sp, #4]
    6904:	4013      	ands	r3, r2
    6906:	4642      	mov	r2, r8
    6908:	4313      	orrs	r3, r2
    690a:	607b      	str	r3, [r7, #4]
    690c:	f7ff f8ec 	bl	5ae8 <__malloc_unlock>
    6910:	0035      	movs	r5, r6
    6912:	e71a      	b.n	674a <_realloc_r+0xfe>
    6914:	0031      	movs	r1, r6
    6916:	f7ff fe49 	bl	65ac <memmove>
    691a:	e6f1      	b.n	6700 <_realloc_r+0xb4>
    691c:	0031      	movs	r1, r6
    691e:	0028      	movs	r0, r5
    6920:	f7ff fe44 	bl	65ac <memmove>
    6924:	465c      	mov	r4, fp
    6926:	46d1      	mov	r9, sl
    6928:	e6fd      	b.n	6726 <_realloc_r+0xda>
    692a:	68b3      	ldr	r3, [r6, #8]
    692c:	6083      	str	r3, [r0, #8]
    692e:	68f3      	ldr	r3, [r6, #12]
    6930:	60c3      	str	r3, [r0, #12]
    6932:	2a24      	cmp	r2, #36	; 0x24
    6934:	d015      	beq.n	6962 <_realloc_r+0x316>
    6936:	0003      	movs	r3, r0
    6938:	0032      	movs	r2, r6
    693a:	3310      	adds	r3, #16
    693c:	3210      	adds	r2, #16
    693e:	e6d9      	b.n	66f4 <_realloc_r+0xa8>
    6940:	6853      	ldr	r3, [r2, #4]
    6942:	2203      	movs	r2, #3
    6944:	4393      	bics	r3, r2
    6946:	18e4      	adds	r4, r4, r3
    6948:	0035      	movs	r5, r6
    694a:	e6ec      	b.n	6726 <_realloc_r+0xda>
    694c:	4653      	mov	r3, sl
    694e:	68b1      	ldr	r1, [r6, #8]
    6950:	6119      	str	r1, [r3, #16]
    6952:	68f1      	ldr	r1, [r6, #12]
    6954:	6159      	str	r1, [r3, #20]
    6956:	2a24      	cmp	r2, #36	; 0x24
    6958:	d00c      	beq.n	6974 <_realloc_r+0x328>
    695a:	0032      	movs	r2, r6
    695c:	3318      	adds	r3, #24
    695e:	3210      	adds	r2, #16
    6960:	e7bc      	b.n	68dc <_realloc_r+0x290>
    6962:	6933      	ldr	r3, [r6, #16]
    6964:	0032      	movs	r2, r6
    6966:	6103      	str	r3, [r0, #16]
    6968:	0003      	movs	r3, r0
    696a:	6971      	ldr	r1, [r6, #20]
    696c:	3318      	adds	r3, #24
    696e:	3218      	adds	r2, #24
    6970:	6141      	str	r1, [r0, #20]
    6972:	e6bf      	b.n	66f4 <_realloc_r+0xa8>
    6974:	4653      	mov	r3, sl
    6976:	6932      	ldr	r2, [r6, #16]
    6978:	4651      	mov	r1, sl
    697a:	619a      	str	r2, [r3, #24]
    697c:	0032      	movs	r2, r6
    697e:	6970      	ldr	r0, [r6, #20]
    6980:	3320      	adds	r3, #32
    6982:	3218      	adds	r2, #24
    6984:	61c8      	str	r0, [r1, #28]
    6986:	e7a9      	b.n	68dc <_realloc_r+0x290>
    6988:	002b      	movs	r3, r5
    698a:	0032      	movs	r2, r6
    698c:	e77e      	b.n	688c <_realloc_r+0x240>
    698e:	0031      	movs	r1, r6
    6990:	0028      	movs	r0, r5
    6992:	f7ff fe0b 	bl	65ac <memmove>
    6996:	e77f      	b.n	6898 <_realloc_r+0x24c>
    6998:	4653      	mov	r3, sl
    699a:	68b1      	ldr	r1, [r6, #8]
    699c:	6119      	str	r1, [r3, #16]
    699e:	68f1      	ldr	r1, [r6, #12]
    69a0:	6159      	str	r1, [r3, #20]
    69a2:	2a24      	cmp	r2, #36	; 0x24
    69a4:	d003      	beq.n	69ae <_realloc_r+0x362>
    69a6:	0032      	movs	r2, r6
    69a8:	3318      	adds	r3, #24
    69aa:	3210      	adds	r2, #16
    69ac:	e76e      	b.n	688c <_realloc_r+0x240>
    69ae:	4653      	mov	r3, sl
    69b0:	6932      	ldr	r2, [r6, #16]
    69b2:	4651      	mov	r1, sl
    69b4:	619a      	str	r2, [r3, #24]
    69b6:	0032      	movs	r2, r6
    69b8:	6970      	ldr	r0, [r6, #20]
    69ba:	3320      	adds	r3, #32
    69bc:	3218      	adds	r2, #24
    69be:	61c8      	str	r0, [r1, #28]
    69c0:	e764      	b.n	688c <_realloc_r+0x240>
    69c2:	46c0      	nop			; (mov r8, r8)
    69c4:	20000444 	.word	0x20000444

000069c8 <__ascii_wctomb>:
    69c8:	2900      	cmp	r1, #0
    69ca:	d004      	beq.n	69d6 <__ascii_wctomb+0xe>
    69cc:	2aff      	cmp	r2, #255	; 0xff
    69ce:	d804      	bhi.n	69da <__ascii_wctomb+0x12>
    69d0:	2001      	movs	r0, #1
    69d2:	700a      	strb	r2, [r1, #0]
    69d4:	4770      	bx	lr
    69d6:	2000      	movs	r0, #0
    69d8:	e7fc      	b.n	69d4 <__ascii_wctomb+0xc>
    69da:	238a      	movs	r3, #138	; 0x8a
    69dc:	6003      	str	r3, [r0, #0]
    69de:	2001      	movs	r0, #1
    69e0:	4240      	negs	r0, r0
    69e2:	e7f7      	b.n	69d4 <__ascii_wctomb+0xc>

000069e4 <__aeabi_cdrcmple>:
    69e4:	4684      	mov	ip, r0
    69e6:	1c10      	adds	r0, r2, #0
    69e8:	4662      	mov	r2, ip
    69ea:	468c      	mov	ip, r1
    69ec:	1c19      	adds	r1, r3, #0
    69ee:	4663      	mov	r3, ip
    69f0:	e000      	b.n	69f4 <__aeabi_cdcmpeq>
    69f2:	46c0      	nop			; (mov r8, r8)

000069f4 <__aeabi_cdcmpeq>:
    69f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    69f6:	f000 ff15 	bl	7824 <__ledf2>
    69fa:	2800      	cmp	r0, #0
    69fc:	d401      	bmi.n	6a02 <__aeabi_cdcmpeq+0xe>
    69fe:	2100      	movs	r1, #0
    6a00:	42c8      	cmn	r0, r1
    6a02:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006a04 <__aeabi_dcmpeq>:
    6a04:	b510      	push	{r4, lr}
    6a06:	f000 fe6f 	bl	76e8 <__eqdf2>
    6a0a:	4240      	negs	r0, r0
    6a0c:	3001      	adds	r0, #1
    6a0e:	bd10      	pop	{r4, pc}

00006a10 <__aeabi_dcmplt>:
    6a10:	b510      	push	{r4, lr}
    6a12:	f000 ff07 	bl	7824 <__ledf2>
    6a16:	2800      	cmp	r0, #0
    6a18:	db01      	blt.n	6a1e <__aeabi_dcmplt+0xe>
    6a1a:	2000      	movs	r0, #0
    6a1c:	bd10      	pop	{r4, pc}
    6a1e:	2001      	movs	r0, #1
    6a20:	bd10      	pop	{r4, pc}
    6a22:	46c0      	nop			; (mov r8, r8)

00006a24 <__aeabi_dcmple>:
    6a24:	b510      	push	{r4, lr}
    6a26:	f000 fefd 	bl	7824 <__ledf2>
    6a2a:	2800      	cmp	r0, #0
    6a2c:	dd01      	ble.n	6a32 <__aeabi_dcmple+0xe>
    6a2e:	2000      	movs	r0, #0
    6a30:	bd10      	pop	{r4, pc}
    6a32:	2001      	movs	r0, #1
    6a34:	bd10      	pop	{r4, pc}
    6a36:	46c0      	nop			; (mov r8, r8)

00006a38 <__aeabi_dcmpgt>:
    6a38:	b510      	push	{r4, lr}
    6a3a:	f000 fe8f 	bl	775c <__gedf2>
    6a3e:	2800      	cmp	r0, #0
    6a40:	dc01      	bgt.n	6a46 <__aeabi_dcmpgt+0xe>
    6a42:	2000      	movs	r0, #0
    6a44:	bd10      	pop	{r4, pc}
    6a46:	2001      	movs	r0, #1
    6a48:	bd10      	pop	{r4, pc}
    6a4a:	46c0      	nop			; (mov r8, r8)

00006a4c <__aeabi_dcmpge>:
    6a4c:	b510      	push	{r4, lr}
    6a4e:	f000 fe85 	bl	775c <__gedf2>
    6a52:	2800      	cmp	r0, #0
    6a54:	da01      	bge.n	6a5a <__aeabi_dcmpge+0xe>
    6a56:	2000      	movs	r0, #0
    6a58:	bd10      	pop	{r4, pc}
    6a5a:	2001      	movs	r0, #1
    6a5c:	bd10      	pop	{r4, pc}
    6a5e:	46c0      	nop			; (mov r8, r8)

00006a60 <__aeabi_dadd>:
    6a60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6a62:	4645      	mov	r5, r8
    6a64:	46de      	mov	lr, fp
    6a66:	4657      	mov	r7, sl
    6a68:	464e      	mov	r6, r9
    6a6a:	030c      	lsls	r4, r1, #12
    6a6c:	b5e0      	push	{r5, r6, r7, lr}
    6a6e:	004e      	lsls	r6, r1, #1
    6a70:	0fc9      	lsrs	r1, r1, #31
    6a72:	4688      	mov	r8, r1
    6a74:	000d      	movs	r5, r1
    6a76:	0a61      	lsrs	r1, r4, #9
    6a78:	0f44      	lsrs	r4, r0, #29
    6a7a:	430c      	orrs	r4, r1
    6a7c:	00c7      	lsls	r7, r0, #3
    6a7e:	0319      	lsls	r1, r3, #12
    6a80:	0058      	lsls	r0, r3, #1
    6a82:	0fdb      	lsrs	r3, r3, #31
    6a84:	469b      	mov	fp, r3
    6a86:	0a4b      	lsrs	r3, r1, #9
    6a88:	0f51      	lsrs	r1, r2, #29
    6a8a:	430b      	orrs	r3, r1
    6a8c:	0d76      	lsrs	r6, r6, #21
    6a8e:	0d40      	lsrs	r0, r0, #21
    6a90:	0019      	movs	r1, r3
    6a92:	00d2      	lsls	r2, r2, #3
    6a94:	45d8      	cmp	r8, fp
    6a96:	d100      	bne.n	6a9a <__aeabi_dadd+0x3a>
    6a98:	e0ae      	b.n	6bf8 <__aeabi_dadd+0x198>
    6a9a:	1a35      	subs	r5, r6, r0
    6a9c:	2d00      	cmp	r5, #0
    6a9e:	dc00      	bgt.n	6aa2 <__aeabi_dadd+0x42>
    6aa0:	e0f6      	b.n	6c90 <__aeabi_dadd+0x230>
    6aa2:	2800      	cmp	r0, #0
    6aa4:	d10f      	bne.n	6ac6 <__aeabi_dadd+0x66>
    6aa6:	4313      	orrs	r3, r2
    6aa8:	d100      	bne.n	6aac <__aeabi_dadd+0x4c>
    6aaa:	e0db      	b.n	6c64 <__aeabi_dadd+0x204>
    6aac:	1e6b      	subs	r3, r5, #1
    6aae:	2b00      	cmp	r3, #0
    6ab0:	d000      	beq.n	6ab4 <__aeabi_dadd+0x54>
    6ab2:	e137      	b.n	6d24 <__aeabi_dadd+0x2c4>
    6ab4:	1aba      	subs	r2, r7, r2
    6ab6:	4297      	cmp	r7, r2
    6ab8:	41bf      	sbcs	r7, r7
    6aba:	1a64      	subs	r4, r4, r1
    6abc:	427f      	negs	r7, r7
    6abe:	1be4      	subs	r4, r4, r7
    6ac0:	2601      	movs	r6, #1
    6ac2:	0017      	movs	r7, r2
    6ac4:	e024      	b.n	6b10 <__aeabi_dadd+0xb0>
    6ac6:	4bc6      	ldr	r3, [pc, #792]	; (6de0 <__aeabi_dadd+0x380>)
    6ac8:	429e      	cmp	r6, r3
    6aca:	d04d      	beq.n	6b68 <__aeabi_dadd+0x108>
    6acc:	2380      	movs	r3, #128	; 0x80
    6ace:	041b      	lsls	r3, r3, #16
    6ad0:	4319      	orrs	r1, r3
    6ad2:	2d38      	cmp	r5, #56	; 0x38
    6ad4:	dd00      	ble.n	6ad8 <__aeabi_dadd+0x78>
    6ad6:	e107      	b.n	6ce8 <__aeabi_dadd+0x288>
    6ad8:	2d1f      	cmp	r5, #31
    6ada:	dd00      	ble.n	6ade <__aeabi_dadd+0x7e>
    6adc:	e138      	b.n	6d50 <__aeabi_dadd+0x2f0>
    6ade:	2020      	movs	r0, #32
    6ae0:	1b43      	subs	r3, r0, r5
    6ae2:	469a      	mov	sl, r3
    6ae4:	000b      	movs	r3, r1
    6ae6:	4650      	mov	r0, sl
    6ae8:	4083      	lsls	r3, r0
    6aea:	4699      	mov	r9, r3
    6aec:	0013      	movs	r3, r2
    6aee:	4648      	mov	r0, r9
    6af0:	40eb      	lsrs	r3, r5
    6af2:	4318      	orrs	r0, r3
    6af4:	0003      	movs	r3, r0
    6af6:	4650      	mov	r0, sl
    6af8:	4082      	lsls	r2, r0
    6afa:	1e50      	subs	r0, r2, #1
    6afc:	4182      	sbcs	r2, r0
    6afe:	40e9      	lsrs	r1, r5
    6b00:	431a      	orrs	r2, r3
    6b02:	1aba      	subs	r2, r7, r2
    6b04:	1a61      	subs	r1, r4, r1
    6b06:	4297      	cmp	r7, r2
    6b08:	41a4      	sbcs	r4, r4
    6b0a:	0017      	movs	r7, r2
    6b0c:	4264      	negs	r4, r4
    6b0e:	1b0c      	subs	r4, r1, r4
    6b10:	0223      	lsls	r3, r4, #8
    6b12:	d562      	bpl.n	6bda <__aeabi_dadd+0x17a>
    6b14:	0264      	lsls	r4, r4, #9
    6b16:	0a65      	lsrs	r5, r4, #9
    6b18:	2d00      	cmp	r5, #0
    6b1a:	d100      	bne.n	6b1e <__aeabi_dadd+0xbe>
    6b1c:	e0df      	b.n	6cde <__aeabi_dadd+0x27e>
    6b1e:	0028      	movs	r0, r5
    6b20:	f7fb ff8a 	bl	2a38 <__clzsi2>
    6b24:	0003      	movs	r3, r0
    6b26:	3b08      	subs	r3, #8
    6b28:	2b1f      	cmp	r3, #31
    6b2a:	dd00      	ble.n	6b2e <__aeabi_dadd+0xce>
    6b2c:	e0d2      	b.n	6cd4 <__aeabi_dadd+0x274>
    6b2e:	2220      	movs	r2, #32
    6b30:	003c      	movs	r4, r7
    6b32:	1ad2      	subs	r2, r2, r3
    6b34:	409d      	lsls	r5, r3
    6b36:	40d4      	lsrs	r4, r2
    6b38:	409f      	lsls	r7, r3
    6b3a:	4325      	orrs	r5, r4
    6b3c:	429e      	cmp	r6, r3
    6b3e:	dd00      	ble.n	6b42 <__aeabi_dadd+0xe2>
    6b40:	e0c4      	b.n	6ccc <__aeabi_dadd+0x26c>
    6b42:	1b9e      	subs	r6, r3, r6
    6b44:	1c73      	adds	r3, r6, #1
    6b46:	2b1f      	cmp	r3, #31
    6b48:	dd00      	ble.n	6b4c <__aeabi_dadd+0xec>
    6b4a:	e0f1      	b.n	6d30 <__aeabi_dadd+0x2d0>
    6b4c:	2220      	movs	r2, #32
    6b4e:	0038      	movs	r0, r7
    6b50:	0029      	movs	r1, r5
    6b52:	1ad2      	subs	r2, r2, r3
    6b54:	40d8      	lsrs	r0, r3
    6b56:	4091      	lsls	r1, r2
    6b58:	4097      	lsls	r7, r2
    6b5a:	002c      	movs	r4, r5
    6b5c:	4301      	orrs	r1, r0
    6b5e:	1e78      	subs	r0, r7, #1
    6b60:	4187      	sbcs	r7, r0
    6b62:	40dc      	lsrs	r4, r3
    6b64:	2600      	movs	r6, #0
    6b66:	430f      	orrs	r7, r1
    6b68:	077b      	lsls	r3, r7, #29
    6b6a:	d009      	beq.n	6b80 <__aeabi_dadd+0x120>
    6b6c:	230f      	movs	r3, #15
    6b6e:	403b      	ands	r3, r7
    6b70:	2b04      	cmp	r3, #4
    6b72:	d005      	beq.n	6b80 <__aeabi_dadd+0x120>
    6b74:	1d3b      	adds	r3, r7, #4
    6b76:	42bb      	cmp	r3, r7
    6b78:	41bf      	sbcs	r7, r7
    6b7a:	427f      	negs	r7, r7
    6b7c:	19e4      	adds	r4, r4, r7
    6b7e:	001f      	movs	r7, r3
    6b80:	0223      	lsls	r3, r4, #8
    6b82:	d52c      	bpl.n	6bde <__aeabi_dadd+0x17e>
    6b84:	4b96      	ldr	r3, [pc, #600]	; (6de0 <__aeabi_dadd+0x380>)
    6b86:	3601      	adds	r6, #1
    6b88:	429e      	cmp	r6, r3
    6b8a:	d100      	bne.n	6b8e <__aeabi_dadd+0x12e>
    6b8c:	e09a      	b.n	6cc4 <__aeabi_dadd+0x264>
    6b8e:	4645      	mov	r5, r8
    6b90:	4b94      	ldr	r3, [pc, #592]	; (6de4 <__aeabi_dadd+0x384>)
    6b92:	08ff      	lsrs	r7, r7, #3
    6b94:	401c      	ands	r4, r3
    6b96:	0760      	lsls	r0, r4, #29
    6b98:	0576      	lsls	r6, r6, #21
    6b9a:	0264      	lsls	r4, r4, #9
    6b9c:	4307      	orrs	r7, r0
    6b9e:	0b24      	lsrs	r4, r4, #12
    6ba0:	0d76      	lsrs	r6, r6, #21
    6ba2:	2100      	movs	r1, #0
    6ba4:	0324      	lsls	r4, r4, #12
    6ba6:	0b23      	lsrs	r3, r4, #12
    6ba8:	0d0c      	lsrs	r4, r1, #20
    6baa:	4a8f      	ldr	r2, [pc, #572]	; (6de8 <__aeabi_dadd+0x388>)
    6bac:	0524      	lsls	r4, r4, #20
    6bae:	431c      	orrs	r4, r3
    6bb0:	4014      	ands	r4, r2
    6bb2:	0533      	lsls	r3, r6, #20
    6bb4:	4323      	orrs	r3, r4
    6bb6:	005b      	lsls	r3, r3, #1
    6bb8:	07ed      	lsls	r5, r5, #31
    6bba:	085b      	lsrs	r3, r3, #1
    6bbc:	432b      	orrs	r3, r5
    6bbe:	0038      	movs	r0, r7
    6bc0:	0019      	movs	r1, r3
    6bc2:	bc3c      	pop	{r2, r3, r4, r5}
    6bc4:	4690      	mov	r8, r2
    6bc6:	4699      	mov	r9, r3
    6bc8:	46a2      	mov	sl, r4
    6bca:	46ab      	mov	fp, r5
    6bcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6bce:	4664      	mov	r4, ip
    6bd0:	4304      	orrs	r4, r0
    6bd2:	d100      	bne.n	6bd6 <__aeabi_dadd+0x176>
    6bd4:	e211      	b.n	6ffa <__aeabi_dadd+0x59a>
    6bd6:	0004      	movs	r4, r0
    6bd8:	4667      	mov	r7, ip
    6bda:	077b      	lsls	r3, r7, #29
    6bdc:	d1c6      	bne.n	6b6c <__aeabi_dadd+0x10c>
    6bde:	4645      	mov	r5, r8
    6be0:	0760      	lsls	r0, r4, #29
    6be2:	08ff      	lsrs	r7, r7, #3
    6be4:	4307      	orrs	r7, r0
    6be6:	08e4      	lsrs	r4, r4, #3
    6be8:	4b7d      	ldr	r3, [pc, #500]	; (6de0 <__aeabi_dadd+0x380>)
    6bea:	429e      	cmp	r6, r3
    6bec:	d030      	beq.n	6c50 <__aeabi_dadd+0x1f0>
    6bee:	0324      	lsls	r4, r4, #12
    6bf0:	0576      	lsls	r6, r6, #21
    6bf2:	0b24      	lsrs	r4, r4, #12
    6bf4:	0d76      	lsrs	r6, r6, #21
    6bf6:	e7d4      	b.n	6ba2 <__aeabi_dadd+0x142>
    6bf8:	1a33      	subs	r3, r6, r0
    6bfa:	469a      	mov	sl, r3
    6bfc:	2b00      	cmp	r3, #0
    6bfe:	dd78      	ble.n	6cf2 <__aeabi_dadd+0x292>
    6c00:	2800      	cmp	r0, #0
    6c02:	d031      	beq.n	6c68 <__aeabi_dadd+0x208>
    6c04:	4876      	ldr	r0, [pc, #472]	; (6de0 <__aeabi_dadd+0x380>)
    6c06:	4286      	cmp	r6, r0
    6c08:	d0ae      	beq.n	6b68 <__aeabi_dadd+0x108>
    6c0a:	2080      	movs	r0, #128	; 0x80
    6c0c:	0400      	lsls	r0, r0, #16
    6c0e:	4301      	orrs	r1, r0
    6c10:	4653      	mov	r3, sl
    6c12:	2b38      	cmp	r3, #56	; 0x38
    6c14:	dc00      	bgt.n	6c18 <__aeabi_dadd+0x1b8>
    6c16:	e0e9      	b.n	6dec <__aeabi_dadd+0x38c>
    6c18:	430a      	orrs	r2, r1
    6c1a:	1e51      	subs	r1, r2, #1
    6c1c:	418a      	sbcs	r2, r1
    6c1e:	2100      	movs	r1, #0
    6c20:	19d2      	adds	r2, r2, r7
    6c22:	42ba      	cmp	r2, r7
    6c24:	41bf      	sbcs	r7, r7
    6c26:	1909      	adds	r1, r1, r4
    6c28:	427c      	negs	r4, r7
    6c2a:	0017      	movs	r7, r2
    6c2c:	190c      	adds	r4, r1, r4
    6c2e:	0223      	lsls	r3, r4, #8
    6c30:	d5d3      	bpl.n	6bda <__aeabi_dadd+0x17a>
    6c32:	4b6b      	ldr	r3, [pc, #428]	; (6de0 <__aeabi_dadd+0x380>)
    6c34:	3601      	adds	r6, #1
    6c36:	429e      	cmp	r6, r3
    6c38:	d100      	bne.n	6c3c <__aeabi_dadd+0x1dc>
    6c3a:	e13a      	b.n	6eb2 <__aeabi_dadd+0x452>
    6c3c:	2001      	movs	r0, #1
    6c3e:	4b69      	ldr	r3, [pc, #420]	; (6de4 <__aeabi_dadd+0x384>)
    6c40:	401c      	ands	r4, r3
    6c42:	087b      	lsrs	r3, r7, #1
    6c44:	4007      	ands	r7, r0
    6c46:	431f      	orrs	r7, r3
    6c48:	07e0      	lsls	r0, r4, #31
    6c4a:	4307      	orrs	r7, r0
    6c4c:	0864      	lsrs	r4, r4, #1
    6c4e:	e78b      	b.n	6b68 <__aeabi_dadd+0x108>
    6c50:	0023      	movs	r3, r4
    6c52:	433b      	orrs	r3, r7
    6c54:	d100      	bne.n	6c58 <__aeabi_dadd+0x1f8>
    6c56:	e1cb      	b.n	6ff0 <__aeabi_dadd+0x590>
    6c58:	2280      	movs	r2, #128	; 0x80
    6c5a:	0312      	lsls	r2, r2, #12
    6c5c:	4314      	orrs	r4, r2
    6c5e:	0324      	lsls	r4, r4, #12
    6c60:	0b24      	lsrs	r4, r4, #12
    6c62:	e79e      	b.n	6ba2 <__aeabi_dadd+0x142>
    6c64:	002e      	movs	r6, r5
    6c66:	e77f      	b.n	6b68 <__aeabi_dadd+0x108>
    6c68:	0008      	movs	r0, r1
    6c6a:	4310      	orrs	r0, r2
    6c6c:	d100      	bne.n	6c70 <__aeabi_dadd+0x210>
    6c6e:	e0b4      	b.n	6dda <__aeabi_dadd+0x37a>
    6c70:	1e58      	subs	r0, r3, #1
    6c72:	2800      	cmp	r0, #0
    6c74:	d000      	beq.n	6c78 <__aeabi_dadd+0x218>
    6c76:	e0de      	b.n	6e36 <__aeabi_dadd+0x3d6>
    6c78:	18ba      	adds	r2, r7, r2
    6c7a:	42ba      	cmp	r2, r7
    6c7c:	419b      	sbcs	r3, r3
    6c7e:	1864      	adds	r4, r4, r1
    6c80:	425b      	negs	r3, r3
    6c82:	18e4      	adds	r4, r4, r3
    6c84:	0017      	movs	r7, r2
    6c86:	2601      	movs	r6, #1
    6c88:	0223      	lsls	r3, r4, #8
    6c8a:	d5a6      	bpl.n	6bda <__aeabi_dadd+0x17a>
    6c8c:	2602      	movs	r6, #2
    6c8e:	e7d5      	b.n	6c3c <__aeabi_dadd+0x1dc>
    6c90:	2d00      	cmp	r5, #0
    6c92:	d16e      	bne.n	6d72 <__aeabi_dadd+0x312>
    6c94:	1c70      	adds	r0, r6, #1
    6c96:	0540      	lsls	r0, r0, #21
    6c98:	0d40      	lsrs	r0, r0, #21
    6c9a:	2801      	cmp	r0, #1
    6c9c:	dc00      	bgt.n	6ca0 <__aeabi_dadd+0x240>
    6c9e:	e0f9      	b.n	6e94 <__aeabi_dadd+0x434>
    6ca0:	1ab8      	subs	r0, r7, r2
    6ca2:	4684      	mov	ip, r0
    6ca4:	4287      	cmp	r7, r0
    6ca6:	4180      	sbcs	r0, r0
    6ca8:	1ae5      	subs	r5, r4, r3
    6caa:	4240      	negs	r0, r0
    6cac:	1a2d      	subs	r5, r5, r0
    6cae:	0228      	lsls	r0, r5, #8
    6cb0:	d400      	bmi.n	6cb4 <__aeabi_dadd+0x254>
    6cb2:	e089      	b.n	6dc8 <__aeabi_dadd+0x368>
    6cb4:	1bd7      	subs	r7, r2, r7
    6cb6:	42ba      	cmp	r2, r7
    6cb8:	4192      	sbcs	r2, r2
    6cba:	1b1c      	subs	r4, r3, r4
    6cbc:	4252      	negs	r2, r2
    6cbe:	1aa5      	subs	r5, r4, r2
    6cc0:	46d8      	mov	r8, fp
    6cc2:	e729      	b.n	6b18 <__aeabi_dadd+0xb8>
    6cc4:	4645      	mov	r5, r8
    6cc6:	2400      	movs	r4, #0
    6cc8:	2700      	movs	r7, #0
    6cca:	e76a      	b.n	6ba2 <__aeabi_dadd+0x142>
    6ccc:	4c45      	ldr	r4, [pc, #276]	; (6de4 <__aeabi_dadd+0x384>)
    6cce:	1af6      	subs	r6, r6, r3
    6cd0:	402c      	ands	r4, r5
    6cd2:	e749      	b.n	6b68 <__aeabi_dadd+0x108>
    6cd4:	003d      	movs	r5, r7
    6cd6:	3828      	subs	r0, #40	; 0x28
    6cd8:	4085      	lsls	r5, r0
    6cda:	2700      	movs	r7, #0
    6cdc:	e72e      	b.n	6b3c <__aeabi_dadd+0xdc>
    6cde:	0038      	movs	r0, r7
    6ce0:	f7fb feaa 	bl	2a38 <__clzsi2>
    6ce4:	3020      	adds	r0, #32
    6ce6:	e71d      	b.n	6b24 <__aeabi_dadd+0xc4>
    6ce8:	430a      	orrs	r2, r1
    6cea:	1e51      	subs	r1, r2, #1
    6cec:	418a      	sbcs	r2, r1
    6cee:	2100      	movs	r1, #0
    6cf0:	e707      	b.n	6b02 <__aeabi_dadd+0xa2>
    6cf2:	2b00      	cmp	r3, #0
    6cf4:	d000      	beq.n	6cf8 <__aeabi_dadd+0x298>
    6cf6:	e0f3      	b.n	6ee0 <__aeabi_dadd+0x480>
    6cf8:	1c70      	adds	r0, r6, #1
    6cfa:	0543      	lsls	r3, r0, #21
    6cfc:	0d5b      	lsrs	r3, r3, #21
    6cfe:	2b01      	cmp	r3, #1
    6d00:	dc00      	bgt.n	6d04 <__aeabi_dadd+0x2a4>
    6d02:	e0ad      	b.n	6e60 <__aeabi_dadd+0x400>
    6d04:	4b36      	ldr	r3, [pc, #216]	; (6de0 <__aeabi_dadd+0x380>)
    6d06:	4298      	cmp	r0, r3
    6d08:	d100      	bne.n	6d0c <__aeabi_dadd+0x2ac>
    6d0a:	e0d1      	b.n	6eb0 <__aeabi_dadd+0x450>
    6d0c:	18ba      	adds	r2, r7, r2
    6d0e:	42ba      	cmp	r2, r7
    6d10:	41bf      	sbcs	r7, r7
    6d12:	1864      	adds	r4, r4, r1
    6d14:	427f      	negs	r7, r7
    6d16:	19e4      	adds	r4, r4, r7
    6d18:	07e7      	lsls	r7, r4, #31
    6d1a:	0852      	lsrs	r2, r2, #1
    6d1c:	4317      	orrs	r7, r2
    6d1e:	0864      	lsrs	r4, r4, #1
    6d20:	0006      	movs	r6, r0
    6d22:	e721      	b.n	6b68 <__aeabi_dadd+0x108>
    6d24:	482e      	ldr	r0, [pc, #184]	; (6de0 <__aeabi_dadd+0x380>)
    6d26:	4285      	cmp	r5, r0
    6d28:	d100      	bne.n	6d2c <__aeabi_dadd+0x2cc>
    6d2a:	e093      	b.n	6e54 <__aeabi_dadd+0x3f4>
    6d2c:	001d      	movs	r5, r3
    6d2e:	e6d0      	b.n	6ad2 <__aeabi_dadd+0x72>
    6d30:	0029      	movs	r1, r5
    6d32:	3e1f      	subs	r6, #31
    6d34:	40f1      	lsrs	r1, r6
    6d36:	2b20      	cmp	r3, #32
    6d38:	d100      	bne.n	6d3c <__aeabi_dadd+0x2dc>
    6d3a:	e08d      	b.n	6e58 <__aeabi_dadd+0x3f8>
    6d3c:	2240      	movs	r2, #64	; 0x40
    6d3e:	1ad3      	subs	r3, r2, r3
    6d40:	409d      	lsls	r5, r3
    6d42:	432f      	orrs	r7, r5
    6d44:	1e7d      	subs	r5, r7, #1
    6d46:	41af      	sbcs	r7, r5
    6d48:	2400      	movs	r4, #0
    6d4a:	430f      	orrs	r7, r1
    6d4c:	2600      	movs	r6, #0
    6d4e:	e744      	b.n	6bda <__aeabi_dadd+0x17a>
    6d50:	002b      	movs	r3, r5
    6d52:	0008      	movs	r0, r1
    6d54:	3b20      	subs	r3, #32
    6d56:	40d8      	lsrs	r0, r3
    6d58:	0003      	movs	r3, r0
    6d5a:	2d20      	cmp	r5, #32
    6d5c:	d100      	bne.n	6d60 <__aeabi_dadd+0x300>
    6d5e:	e07d      	b.n	6e5c <__aeabi_dadd+0x3fc>
    6d60:	2040      	movs	r0, #64	; 0x40
    6d62:	1b45      	subs	r5, r0, r5
    6d64:	40a9      	lsls	r1, r5
    6d66:	430a      	orrs	r2, r1
    6d68:	1e51      	subs	r1, r2, #1
    6d6a:	418a      	sbcs	r2, r1
    6d6c:	2100      	movs	r1, #0
    6d6e:	431a      	orrs	r2, r3
    6d70:	e6c7      	b.n	6b02 <__aeabi_dadd+0xa2>
    6d72:	2e00      	cmp	r6, #0
    6d74:	d050      	beq.n	6e18 <__aeabi_dadd+0x3b8>
    6d76:	4e1a      	ldr	r6, [pc, #104]	; (6de0 <__aeabi_dadd+0x380>)
    6d78:	42b0      	cmp	r0, r6
    6d7a:	d057      	beq.n	6e2c <__aeabi_dadd+0x3cc>
    6d7c:	2680      	movs	r6, #128	; 0x80
    6d7e:	426b      	negs	r3, r5
    6d80:	4699      	mov	r9, r3
    6d82:	0436      	lsls	r6, r6, #16
    6d84:	4334      	orrs	r4, r6
    6d86:	464b      	mov	r3, r9
    6d88:	2b38      	cmp	r3, #56	; 0x38
    6d8a:	dd00      	ble.n	6d8e <__aeabi_dadd+0x32e>
    6d8c:	e0d6      	b.n	6f3c <__aeabi_dadd+0x4dc>
    6d8e:	2b1f      	cmp	r3, #31
    6d90:	dd00      	ble.n	6d94 <__aeabi_dadd+0x334>
    6d92:	e135      	b.n	7000 <__aeabi_dadd+0x5a0>
    6d94:	2620      	movs	r6, #32
    6d96:	1af5      	subs	r5, r6, r3
    6d98:	0026      	movs	r6, r4
    6d9a:	40ae      	lsls	r6, r5
    6d9c:	46b2      	mov	sl, r6
    6d9e:	003e      	movs	r6, r7
    6da0:	40de      	lsrs	r6, r3
    6da2:	46ac      	mov	ip, r5
    6da4:	0035      	movs	r5, r6
    6da6:	4656      	mov	r6, sl
    6da8:	432e      	orrs	r6, r5
    6daa:	4665      	mov	r5, ip
    6dac:	40af      	lsls	r7, r5
    6dae:	1e7d      	subs	r5, r7, #1
    6db0:	41af      	sbcs	r7, r5
    6db2:	40dc      	lsrs	r4, r3
    6db4:	4337      	orrs	r7, r6
    6db6:	1bd7      	subs	r7, r2, r7
    6db8:	42ba      	cmp	r2, r7
    6dba:	4192      	sbcs	r2, r2
    6dbc:	1b0c      	subs	r4, r1, r4
    6dbe:	4252      	negs	r2, r2
    6dc0:	1aa4      	subs	r4, r4, r2
    6dc2:	0006      	movs	r6, r0
    6dc4:	46d8      	mov	r8, fp
    6dc6:	e6a3      	b.n	6b10 <__aeabi_dadd+0xb0>
    6dc8:	4664      	mov	r4, ip
    6dca:	4667      	mov	r7, ip
    6dcc:	432c      	orrs	r4, r5
    6dce:	d000      	beq.n	6dd2 <__aeabi_dadd+0x372>
    6dd0:	e6a2      	b.n	6b18 <__aeabi_dadd+0xb8>
    6dd2:	2500      	movs	r5, #0
    6dd4:	2600      	movs	r6, #0
    6dd6:	2700      	movs	r7, #0
    6dd8:	e706      	b.n	6be8 <__aeabi_dadd+0x188>
    6dda:	001e      	movs	r6, r3
    6ddc:	e6c4      	b.n	6b68 <__aeabi_dadd+0x108>
    6dde:	46c0      	nop			; (mov r8, r8)
    6de0:	000007ff 	.word	0x000007ff
    6de4:	ff7fffff 	.word	0xff7fffff
    6de8:	800fffff 	.word	0x800fffff
    6dec:	2b1f      	cmp	r3, #31
    6dee:	dc63      	bgt.n	6eb8 <__aeabi_dadd+0x458>
    6df0:	2020      	movs	r0, #32
    6df2:	1ac3      	subs	r3, r0, r3
    6df4:	0008      	movs	r0, r1
    6df6:	4098      	lsls	r0, r3
    6df8:	469c      	mov	ip, r3
    6dfa:	4683      	mov	fp, r0
    6dfc:	4653      	mov	r3, sl
    6dfe:	0010      	movs	r0, r2
    6e00:	40d8      	lsrs	r0, r3
    6e02:	0003      	movs	r3, r0
    6e04:	4658      	mov	r0, fp
    6e06:	4318      	orrs	r0, r3
    6e08:	4663      	mov	r3, ip
    6e0a:	409a      	lsls	r2, r3
    6e0c:	1e53      	subs	r3, r2, #1
    6e0e:	419a      	sbcs	r2, r3
    6e10:	4653      	mov	r3, sl
    6e12:	4302      	orrs	r2, r0
    6e14:	40d9      	lsrs	r1, r3
    6e16:	e703      	b.n	6c20 <__aeabi_dadd+0x1c0>
    6e18:	0026      	movs	r6, r4
    6e1a:	433e      	orrs	r6, r7
    6e1c:	d006      	beq.n	6e2c <__aeabi_dadd+0x3cc>
    6e1e:	43eb      	mvns	r3, r5
    6e20:	4699      	mov	r9, r3
    6e22:	2b00      	cmp	r3, #0
    6e24:	d0c7      	beq.n	6db6 <__aeabi_dadd+0x356>
    6e26:	4e94      	ldr	r6, [pc, #592]	; (7078 <__aeabi_dadd+0x618>)
    6e28:	42b0      	cmp	r0, r6
    6e2a:	d1ac      	bne.n	6d86 <__aeabi_dadd+0x326>
    6e2c:	000c      	movs	r4, r1
    6e2e:	0017      	movs	r7, r2
    6e30:	0006      	movs	r6, r0
    6e32:	46d8      	mov	r8, fp
    6e34:	e698      	b.n	6b68 <__aeabi_dadd+0x108>
    6e36:	4b90      	ldr	r3, [pc, #576]	; (7078 <__aeabi_dadd+0x618>)
    6e38:	459a      	cmp	sl, r3
    6e3a:	d00b      	beq.n	6e54 <__aeabi_dadd+0x3f4>
    6e3c:	4682      	mov	sl, r0
    6e3e:	e6e7      	b.n	6c10 <__aeabi_dadd+0x1b0>
    6e40:	2800      	cmp	r0, #0
    6e42:	d000      	beq.n	6e46 <__aeabi_dadd+0x3e6>
    6e44:	e09e      	b.n	6f84 <__aeabi_dadd+0x524>
    6e46:	0018      	movs	r0, r3
    6e48:	4310      	orrs	r0, r2
    6e4a:	d100      	bne.n	6e4e <__aeabi_dadd+0x3ee>
    6e4c:	e0e9      	b.n	7022 <__aeabi_dadd+0x5c2>
    6e4e:	001c      	movs	r4, r3
    6e50:	0017      	movs	r7, r2
    6e52:	46d8      	mov	r8, fp
    6e54:	4e88      	ldr	r6, [pc, #544]	; (7078 <__aeabi_dadd+0x618>)
    6e56:	e687      	b.n	6b68 <__aeabi_dadd+0x108>
    6e58:	2500      	movs	r5, #0
    6e5a:	e772      	b.n	6d42 <__aeabi_dadd+0x2e2>
    6e5c:	2100      	movs	r1, #0
    6e5e:	e782      	b.n	6d66 <__aeabi_dadd+0x306>
    6e60:	0023      	movs	r3, r4
    6e62:	433b      	orrs	r3, r7
    6e64:	2e00      	cmp	r6, #0
    6e66:	d000      	beq.n	6e6a <__aeabi_dadd+0x40a>
    6e68:	e0ab      	b.n	6fc2 <__aeabi_dadd+0x562>
    6e6a:	2b00      	cmp	r3, #0
    6e6c:	d100      	bne.n	6e70 <__aeabi_dadd+0x410>
    6e6e:	e0e7      	b.n	7040 <__aeabi_dadd+0x5e0>
    6e70:	000b      	movs	r3, r1
    6e72:	4313      	orrs	r3, r2
    6e74:	d100      	bne.n	6e78 <__aeabi_dadd+0x418>
    6e76:	e677      	b.n	6b68 <__aeabi_dadd+0x108>
    6e78:	18ba      	adds	r2, r7, r2
    6e7a:	42ba      	cmp	r2, r7
    6e7c:	41bf      	sbcs	r7, r7
    6e7e:	1864      	adds	r4, r4, r1
    6e80:	427f      	negs	r7, r7
    6e82:	19e4      	adds	r4, r4, r7
    6e84:	0223      	lsls	r3, r4, #8
    6e86:	d400      	bmi.n	6e8a <__aeabi_dadd+0x42a>
    6e88:	e0f2      	b.n	7070 <__aeabi_dadd+0x610>
    6e8a:	4b7c      	ldr	r3, [pc, #496]	; (707c <__aeabi_dadd+0x61c>)
    6e8c:	0017      	movs	r7, r2
    6e8e:	401c      	ands	r4, r3
    6e90:	0006      	movs	r6, r0
    6e92:	e669      	b.n	6b68 <__aeabi_dadd+0x108>
    6e94:	0020      	movs	r0, r4
    6e96:	4338      	orrs	r0, r7
    6e98:	2e00      	cmp	r6, #0
    6e9a:	d1d1      	bne.n	6e40 <__aeabi_dadd+0x3e0>
    6e9c:	2800      	cmp	r0, #0
    6e9e:	d15b      	bne.n	6f58 <__aeabi_dadd+0x4f8>
    6ea0:	001c      	movs	r4, r3
    6ea2:	4314      	orrs	r4, r2
    6ea4:	d100      	bne.n	6ea8 <__aeabi_dadd+0x448>
    6ea6:	e0a8      	b.n	6ffa <__aeabi_dadd+0x59a>
    6ea8:	001c      	movs	r4, r3
    6eaa:	0017      	movs	r7, r2
    6eac:	46d8      	mov	r8, fp
    6eae:	e65b      	b.n	6b68 <__aeabi_dadd+0x108>
    6eb0:	0006      	movs	r6, r0
    6eb2:	2400      	movs	r4, #0
    6eb4:	2700      	movs	r7, #0
    6eb6:	e697      	b.n	6be8 <__aeabi_dadd+0x188>
    6eb8:	4650      	mov	r0, sl
    6eba:	000b      	movs	r3, r1
    6ebc:	3820      	subs	r0, #32
    6ebe:	40c3      	lsrs	r3, r0
    6ec0:	4699      	mov	r9, r3
    6ec2:	4653      	mov	r3, sl
    6ec4:	2b20      	cmp	r3, #32
    6ec6:	d100      	bne.n	6eca <__aeabi_dadd+0x46a>
    6ec8:	e095      	b.n	6ff6 <__aeabi_dadd+0x596>
    6eca:	2340      	movs	r3, #64	; 0x40
    6ecc:	4650      	mov	r0, sl
    6ece:	1a1b      	subs	r3, r3, r0
    6ed0:	4099      	lsls	r1, r3
    6ed2:	430a      	orrs	r2, r1
    6ed4:	1e51      	subs	r1, r2, #1
    6ed6:	418a      	sbcs	r2, r1
    6ed8:	464b      	mov	r3, r9
    6eda:	2100      	movs	r1, #0
    6edc:	431a      	orrs	r2, r3
    6ede:	e69f      	b.n	6c20 <__aeabi_dadd+0x1c0>
    6ee0:	2e00      	cmp	r6, #0
    6ee2:	d130      	bne.n	6f46 <__aeabi_dadd+0x4e6>
    6ee4:	0026      	movs	r6, r4
    6ee6:	433e      	orrs	r6, r7
    6ee8:	d067      	beq.n	6fba <__aeabi_dadd+0x55a>
    6eea:	43db      	mvns	r3, r3
    6eec:	469a      	mov	sl, r3
    6eee:	2b00      	cmp	r3, #0
    6ef0:	d01c      	beq.n	6f2c <__aeabi_dadd+0x4cc>
    6ef2:	4e61      	ldr	r6, [pc, #388]	; (7078 <__aeabi_dadd+0x618>)
    6ef4:	42b0      	cmp	r0, r6
    6ef6:	d060      	beq.n	6fba <__aeabi_dadd+0x55a>
    6ef8:	4653      	mov	r3, sl
    6efa:	2b38      	cmp	r3, #56	; 0x38
    6efc:	dd00      	ble.n	6f00 <__aeabi_dadd+0x4a0>
    6efe:	e096      	b.n	702e <__aeabi_dadd+0x5ce>
    6f00:	2b1f      	cmp	r3, #31
    6f02:	dd00      	ble.n	6f06 <__aeabi_dadd+0x4a6>
    6f04:	e09f      	b.n	7046 <__aeabi_dadd+0x5e6>
    6f06:	2620      	movs	r6, #32
    6f08:	1af3      	subs	r3, r6, r3
    6f0a:	0026      	movs	r6, r4
    6f0c:	409e      	lsls	r6, r3
    6f0e:	469c      	mov	ip, r3
    6f10:	46b3      	mov	fp, r6
    6f12:	4653      	mov	r3, sl
    6f14:	003e      	movs	r6, r7
    6f16:	40de      	lsrs	r6, r3
    6f18:	0033      	movs	r3, r6
    6f1a:	465e      	mov	r6, fp
    6f1c:	431e      	orrs	r6, r3
    6f1e:	4663      	mov	r3, ip
    6f20:	409f      	lsls	r7, r3
    6f22:	1e7b      	subs	r3, r7, #1
    6f24:	419f      	sbcs	r7, r3
    6f26:	4653      	mov	r3, sl
    6f28:	40dc      	lsrs	r4, r3
    6f2a:	4337      	orrs	r7, r6
    6f2c:	18bf      	adds	r7, r7, r2
    6f2e:	4297      	cmp	r7, r2
    6f30:	4192      	sbcs	r2, r2
    6f32:	1864      	adds	r4, r4, r1
    6f34:	4252      	negs	r2, r2
    6f36:	18a4      	adds	r4, r4, r2
    6f38:	0006      	movs	r6, r0
    6f3a:	e678      	b.n	6c2e <__aeabi_dadd+0x1ce>
    6f3c:	4327      	orrs	r7, r4
    6f3e:	1e7c      	subs	r4, r7, #1
    6f40:	41a7      	sbcs	r7, r4
    6f42:	2400      	movs	r4, #0
    6f44:	e737      	b.n	6db6 <__aeabi_dadd+0x356>
    6f46:	4e4c      	ldr	r6, [pc, #304]	; (7078 <__aeabi_dadd+0x618>)
    6f48:	42b0      	cmp	r0, r6
    6f4a:	d036      	beq.n	6fba <__aeabi_dadd+0x55a>
    6f4c:	2680      	movs	r6, #128	; 0x80
    6f4e:	425b      	negs	r3, r3
    6f50:	0436      	lsls	r6, r6, #16
    6f52:	469a      	mov	sl, r3
    6f54:	4334      	orrs	r4, r6
    6f56:	e7cf      	b.n	6ef8 <__aeabi_dadd+0x498>
    6f58:	0018      	movs	r0, r3
    6f5a:	4310      	orrs	r0, r2
    6f5c:	d100      	bne.n	6f60 <__aeabi_dadd+0x500>
    6f5e:	e603      	b.n	6b68 <__aeabi_dadd+0x108>
    6f60:	1ab8      	subs	r0, r7, r2
    6f62:	4684      	mov	ip, r0
    6f64:	4567      	cmp	r7, ip
    6f66:	41ad      	sbcs	r5, r5
    6f68:	1ae0      	subs	r0, r4, r3
    6f6a:	426d      	negs	r5, r5
    6f6c:	1b40      	subs	r0, r0, r5
    6f6e:	0205      	lsls	r5, r0, #8
    6f70:	d400      	bmi.n	6f74 <__aeabi_dadd+0x514>
    6f72:	e62c      	b.n	6bce <__aeabi_dadd+0x16e>
    6f74:	1bd7      	subs	r7, r2, r7
    6f76:	42ba      	cmp	r2, r7
    6f78:	4192      	sbcs	r2, r2
    6f7a:	1b1c      	subs	r4, r3, r4
    6f7c:	4252      	negs	r2, r2
    6f7e:	1aa4      	subs	r4, r4, r2
    6f80:	46d8      	mov	r8, fp
    6f82:	e5f1      	b.n	6b68 <__aeabi_dadd+0x108>
    6f84:	0018      	movs	r0, r3
    6f86:	4310      	orrs	r0, r2
    6f88:	d100      	bne.n	6f8c <__aeabi_dadd+0x52c>
    6f8a:	e763      	b.n	6e54 <__aeabi_dadd+0x3f4>
    6f8c:	08f8      	lsrs	r0, r7, #3
    6f8e:	0767      	lsls	r7, r4, #29
    6f90:	4307      	orrs	r7, r0
    6f92:	2080      	movs	r0, #128	; 0x80
    6f94:	08e4      	lsrs	r4, r4, #3
    6f96:	0300      	lsls	r0, r0, #12
    6f98:	4204      	tst	r4, r0
    6f9a:	d008      	beq.n	6fae <__aeabi_dadd+0x54e>
    6f9c:	08dd      	lsrs	r5, r3, #3
    6f9e:	4205      	tst	r5, r0
    6fa0:	d105      	bne.n	6fae <__aeabi_dadd+0x54e>
    6fa2:	08d2      	lsrs	r2, r2, #3
    6fa4:	0759      	lsls	r1, r3, #29
    6fa6:	4311      	orrs	r1, r2
    6fa8:	000f      	movs	r7, r1
    6faa:	002c      	movs	r4, r5
    6fac:	46d8      	mov	r8, fp
    6fae:	0f7b      	lsrs	r3, r7, #29
    6fb0:	00e4      	lsls	r4, r4, #3
    6fb2:	431c      	orrs	r4, r3
    6fb4:	00ff      	lsls	r7, r7, #3
    6fb6:	4e30      	ldr	r6, [pc, #192]	; (7078 <__aeabi_dadd+0x618>)
    6fb8:	e5d6      	b.n	6b68 <__aeabi_dadd+0x108>
    6fba:	000c      	movs	r4, r1
    6fbc:	0017      	movs	r7, r2
    6fbe:	0006      	movs	r6, r0
    6fc0:	e5d2      	b.n	6b68 <__aeabi_dadd+0x108>
    6fc2:	2b00      	cmp	r3, #0
    6fc4:	d038      	beq.n	7038 <__aeabi_dadd+0x5d8>
    6fc6:	000b      	movs	r3, r1
    6fc8:	4313      	orrs	r3, r2
    6fca:	d100      	bne.n	6fce <__aeabi_dadd+0x56e>
    6fcc:	e742      	b.n	6e54 <__aeabi_dadd+0x3f4>
    6fce:	08f8      	lsrs	r0, r7, #3
    6fd0:	0767      	lsls	r7, r4, #29
    6fd2:	4307      	orrs	r7, r0
    6fd4:	2080      	movs	r0, #128	; 0x80
    6fd6:	08e4      	lsrs	r4, r4, #3
    6fd8:	0300      	lsls	r0, r0, #12
    6fda:	4204      	tst	r4, r0
    6fdc:	d0e7      	beq.n	6fae <__aeabi_dadd+0x54e>
    6fde:	08cb      	lsrs	r3, r1, #3
    6fe0:	4203      	tst	r3, r0
    6fe2:	d1e4      	bne.n	6fae <__aeabi_dadd+0x54e>
    6fe4:	08d2      	lsrs	r2, r2, #3
    6fe6:	0749      	lsls	r1, r1, #29
    6fe8:	4311      	orrs	r1, r2
    6fea:	000f      	movs	r7, r1
    6fec:	001c      	movs	r4, r3
    6fee:	e7de      	b.n	6fae <__aeabi_dadd+0x54e>
    6ff0:	2700      	movs	r7, #0
    6ff2:	2400      	movs	r4, #0
    6ff4:	e5d5      	b.n	6ba2 <__aeabi_dadd+0x142>
    6ff6:	2100      	movs	r1, #0
    6ff8:	e76b      	b.n	6ed2 <__aeabi_dadd+0x472>
    6ffa:	2500      	movs	r5, #0
    6ffc:	2700      	movs	r7, #0
    6ffe:	e5f3      	b.n	6be8 <__aeabi_dadd+0x188>
    7000:	464e      	mov	r6, r9
    7002:	0025      	movs	r5, r4
    7004:	3e20      	subs	r6, #32
    7006:	40f5      	lsrs	r5, r6
    7008:	464b      	mov	r3, r9
    700a:	002e      	movs	r6, r5
    700c:	2b20      	cmp	r3, #32
    700e:	d02d      	beq.n	706c <__aeabi_dadd+0x60c>
    7010:	2540      	movs	r5, #64	; 0x40
    7012:	1aed      	subs	r5, r5, r3
    7014:	40ac      	lsls	r4, r5
    7016:	4327      	orrs	r7, r4
    7018:	1e7c      	subs	r4, r7, #1
    701a:	41a7      	sbcs	r7, r4
    701c:	2400      	movs	r4, #0
    701e:	4337      	orrs	r7, r6
    7020:	e6c9      	b.n	6db6 <__aeabi_dadd+0x356>
    7022:	2480      	movs	r4, #128	; 0x80
    7024:	2500      	movs	r5, #0
    7026:	0324      	lsls	r4, r4, #12
    7028:	4e13      	ldr	r6, [pc, #76]	; (7078 <__aeabi_dadd+0x618>)
    702a:	2700      	movs	r7, #0
    702c:	e5dc      	b.n	6be8 <__aeabi_dadd+0x188>
    702e:	4327      	orrs	r7, r4
    7030:	1e7c      	subs	r4, r7, #1
    7032:	41a7      	sbcs	r7, r4
    7034:	2400      	movs	r4, #0
    7036:	e779      	b.n	6f2c <__aeabi_dadd+0x4cc>
    7038:	000c      	movs	r4, r1
    703a:	0017      	movs	r7, r2
    703c:	4e0e      	ldr	r6, [pc, #56]	; (7078 <__aeabi_dadd+0x618>)
    703e:	e593      	b.n	6b68 <__aeabi_dadd+0x108>
    7040:	000c      	movs	r4, r1
    7042:	0017      	movs	r7, r2
    7044:	e590      	b.n	6b68 <__aeabi_dadd+0x108>
    7046:	4656      	mov	r6, sl
    7048:	0023      	movs	r3, r4
    704a:	3e20      	subs	r6, #32
    704c:	40f3      	lsrs	r3, r6
    704e:	4699      	mov	r9, r3
    7050:	4653      	mov	r3, sl
    7052:	2b20      	cmp	r3, #32
    7054:	d00e      	beq.n	7074 <__aeabi_dadd+0x614>
    7056:	2340      	movs	r3, #64	; 0x40
    7058:	4656      	mov	r6, sl
    705a:	1b9b      	subs	r3, r3, r6
    705c:	409c      	lsls	r4, r3
    705e:	4327      	orrs	r7, r4
    7060:	1e7c      	subs	r4, r7, #1
    7062:	41a7      	sbcs	r7, r4
    7064:	464b      	mov	r3, r9
    7066:	2400      	movs	r4, #0
    7068:	431f      	orrs	r7, r3
    706a:	e75f      	b.n	6f2c <__aeabi_dadd+0x4cc>
    706c:	2400      	movs	r4, #0
    706e:	e7d2      	b.n	7016 <__aeabi_dadd+0x5b6>
    7070:	0017      	movs	r7, r2
    7072:	e5b2      	b.n	6bda <__aeabi_dadd+0x17a>
    7074:	2400      	movs	r4, #0
    7076:	e7f2      	b.n	705e <__aeabi_dadd+0x5fe>
    7078:	000007ff 	.word	0x000007ff
    707c:	ff7fffff 	.word	0xff7fffff

00007080 <__aeabi_ddiv>:
    7080:	b5f0      	push	{r4, r5, r6, r7, lr}
    7082:	4657      	mov	r7, sl
    7084:	4645      	mov	r5, r8
    7086:	46de      	mov	lr, fp
    7088:	464e      	mov	r6, r9
    708a:	b5e0      	push	{r5, r6, r7, lr}
    708c:	004c      	lsls	r4, r1, #1
    708e:	030e      	lsls	r6, r1, #12
    7090:	b087      	sub	sp, #28
    7092:	4683      	mov	fp, r0
    7094:	4692      	mov	sl, r2
    7096:	001d      	movs	r5, r3
    7098:	4680      	mov	r8, r0
    709a:	0b36      	lsrs	r6, r6, #12
    709c:	0d64      	lsrs	r4, r4, #21
    709e:	0fcf      	lsrs	r7, r1, #31
    70a0:	2c00      	cmp	r4, #0
    70a2:	d04f      	beq.n	7144 <__aeabi_ddiv+0xc4>
    70a4:	4b6f      	ldr	r3, [pc, #444]	; (7264 <__aeabi_ddiv+0x1e4>)
    70a6:	429c      	cmp	r4, r3
    70a8:	d035      	beq.n	7116 <__aeabi_ddiv+0x96>
    70aa:	2380      	movs	r3, #128	; 0x80
    70ac:	0f42      	lsrs	r2, r0, #29
    70ae:	041b      	lsls	r3, r3, #16
    70b0:	00f6      	lsls	r6, r6, #3
    70b2:	4313      	orrs	r3, r2
    70b4:	4333      	orrs	r3, r6
    70b6:	4699      	mov	r9, r3
    70b8:	00c3      	lsls	r3, r0, #3
    70ba:	4698      	mov	r8, r3
    70bc:	4b6a      	ldr	r3, [pc, #424]	; (7268 <__aeabi_ddiv+0x1e8>)
    70be:	2600      	movs	r6, #0
    70c0:	469c      	mov	ip, r3
    70c2:	2300      	movs	r3, #0
    70c4:	4464      	add	r4, ip
    70c6:	9303      	str	r3, [sp, #12]
    70c8:	032b      	lsls	r3, r5, #12
    70ca:	0b1b      	lsrs	r3, r3, #12
    70cc:	469b      	mov	fp, r3
    70ce:	006b      	lsls	r3, r5, #1
    70d0:	0fed      	lsrs	r5, r5, #31
    70d2:	4650      	mov	r0, sl
    70d4:	0d5b      	lsrs	r3, r3, #21
    70d6:	9501      	str	r5, [sp, #4]
    70d8:	d05e      	beq.n	7198 <__aeabi_ddiv+0x118>
    70da:	4a62      	ldr	r2, [pc, #392]	; (7264 <__aeabi_ddiv+0x1e4>)
    70dc:	4293      	cmp	r3, r2
    70de:	d053      	beq.n	7188 <__aeabi_ddiv+0x108>
    70e0:	465a      	mov	r2, fp
    70e2:	00d1      	lsls	r1, r2, #3
    70e4:	2280      	movs	r2, #128	; 0x80
    70e6:	0f40      	lsrs	r0, r0, #29
    70e8:	0412      	lsls	r2, r2, #16
    70ea:	4302      	orrs	r2, r0
    70ec:	430a      	orrs	r2, r1
    70ee:	4693      	mov	fp, r2
    70f0:	4652      	mov	r2, sl
    70f2:	00d1      	lsls	r1, r2, #3
    70f4:	4a5c      	ldr	r2, [pc, #368]	; (7268 <__aeabi_ddiv+0x1e8>)
    70f6:	4694      	mov	ip, r2
    70f8:	2200      	movs	r2, #0
    70fa:	4463      	add	r3, ip
    70fc:	0038      	movs	r0, r7
    70fe:	4068      	eors	r0, r5
    7100:	4684      	mov	ip, r0
    7102:	9002      	str	r0, [sp, #8]
    7104:	1ae4      	subs	r4, r4, r3
    7106:	4316      	orrs	r6, r2
    7108:	2e0f      	cmp	r6, #15
    710a:	d900      	bls.n	710e <__aeabi_ddiv+0x8e>
    710c:	e0b4      	b.n	7278 <__aeabi_ddiv+0x1f8>
    710e:	4b57      	ldr	r3, [pc, #348]	; (726c <__aeabi_ddiv+0x1ec>)
    7110:	00b6      	lsls	r6, r6, #2
    7112:	599b      	ldr	r3, [r3, r6]
    7114:	469f      	mov	pc, r3
    7116:	0003      	movs	r3, r0
    7118:	4333      	orrs	r3, r6
    711a:	4699      	mov	r9, r3
    711c:	d16c      	bne.n	71f8 <__aeabi_ddiv+0x178>
    711e:	2300      	movs	r3, #0
    7120:	4698      	mov	r8, r3
    7122:	3302      	adds	r3, #2
    7124:	2608      	movs	r6, #8
    7126:	9303      	str	r3, [sp, #12]
    7128:	e7ce      	b.n	70c8 <__aeabi_ddiv+0x48>
    712a:	46cb      	mov	fp, r9
    712c:	4641      	mov	r1, r8
    712e:	9a03      	ldr	r2, [sp, #12]
    7130:	9701      	str	r7, [sp, #4]
    7132:	2a02      	cmp	r2, #2
    7134:	d165      	bne.n	7202 <__aeabi_ddiv+0x182>
    7136:	9b01      	ldr	r3, [sp, #4]
    7138:	4c4a      	ldr	r4, [pc, #296]	; (7264 <__aeabi_ddiv+0x1e4>)
    713a:	469c      	mov	ip, r3
    713c:	2300      	movs	r3, #0
    713e:	2200      	movs	r2, #0
    7140:	4698      	mov	r8, r3
    7142:	e06b      	b.n	721c <__aeabi_ddiv+0x19c>
    7144:	0003      	movs	r3, r0
    7146:	4333      	orrs	r3, r6
    7148:	4699      	mov	r9, r3
    714a:	d04e      	beq.n	71ea <__aeabi_ddiv+0x16a>
    714c:	2e00      	cmp	r6, #0
    714e:	d100      	bne.n	7152 <__aeabi_ddiv+0xd2>
    7150:	e1bc      	b.n	74cc <__aeabi_ddiv+0x44c>
    7152:	0030      	movs	r0, r6
    7154:	f7fb fc70 	bl	2a38 <__clzsi2>
    7158:	0003      	movs	r3, r0
    715a:	3b0b      	subs	r3, #11
    715c:	2b1c      	cmp	r3, #28
    715e:	dd00      	ble.n	7162 <__aeabi_ddiv+0xe2>
    7160:	e1ac      	b.n	74bc <__aeabi_ddiv+0x43c>
    7162:	221d      	movs	r2, #29
    7164:	1ad3      	subs	r3, r2, r3
    7166:	465a      	mov	r2, fp
    7168:	0001      	movs	r1, r0
    716a:	40da      	lsrs	r2, r3
    716c:	3908      	subs	r1, #8
    716e:	408e      	lsls	r6, r1
    7170:	0013      	movs	r3, r2
    7172:	4333      	orrs	r3, r6
    7174:	4699      	mov	r9, r3
    7176:	465b      	mov	r3, fp
    7178:	408b      	lsls	r3, r1
    717a:	4698      	mov	r8, r3
    717c:	2300      	movs	r3, #0
    717e:	4c3c      	ldr	r4, [pc, #240]	; (7270 <__aeabi_ddiv+0x1f0>)
    7180:	2600      	movs	r6, #0
    7182:	1a24      	subs	r4, r4, r0
    7184:	9303      	str	r3, [sp, #12]
    7186:	e79f      	b.n	70c8 <__aeabi_ddiv+0x48>
    7188:	4651      	mov	r1, sl
    718a:	465a      	mov	r2, fp
    718c:	4311      	orrs	r1, r2
    718e:	d129      	bne.n	71e4 <__aeabi_ddiv+0x164>
    7190:	2200      	movs	r2, #0
    7192:	4693      	mov	fp, r2
    7194:	3202      	adds	r2, #2
    7196:	e7b1      	b.n	70fc <__aeabi_ddiv+0x7c>
    7198:	4659      	mov	r1, fp
    719a:	4301      	orrs	r1, r0
    719c:	d01e      	beq.n	71dc <__aeabi_ddiv+0x15c>
    719e:	465b      	mov	r3, fp
    71a0:	2b00      	cmp	r3, #0
    71a2:	d100      	bne.n	71a6 <__aeabi_ddiv+0x126>
    71a4:	e19e      	b.n	74e4 <__aeabi_ddiv+0x464>
    71a6:	4658      	mov	r0, fp
    71a8:	f7fb fc46 	bl	2a38 <__clzsi2>
    71ac:	0003      	movs	r3, r0
    71ae:	3b0b      	subs	r3, #11
    71b0:	2b1c      	cmp	r3, #28
    71b2:	dd00      	ble.n	71b6 <__aeabi_ddiv+0x136>
    71b4:	e18f      	b.n	74d6 <__aeabi_ddiv+0x456>
    71b6:	0002      	movs	r2, r0
    71b8:	4659      	mov	r1, fp
    71ba:	3a08      	subs	r2, #8
    71bc:	4091      	lsls	r1, r2
    71be:	468b      	mov	fp, r1
    71c0:	211d      	movs	r1, #29
    71c2:	1acb      	subs	r3, r1, r3
    71c4:	4651      	mov	r1, sl
    71c6:	40d9      	lsrs	r1, r3
    71c8:	000b      	movs	r3, r1
    71ca:	4659      	mov	r1, fp
    71cc:	430b      	orrs	r3, r1
    71ce:	4651      	mov	r1, sl
    71d0:	469b      	mov	fp, r3
    71d2:	4091      	lsls	r1, r2
    71d4:	4b26      	ldr	r3, [pc, #152]	; (7270 <__aeabi_ddiv+0x1f0>)
    71d6:	2200      	movs	r2, #0
    71d8:	1a1b      	subs	r3, r3, r0
    71da:	e78f      	b.n	70fc <__aeabi_ddiv+0x7c>
    71dc:	2300      	movs	r3, #0
    71de:	2201      	movs	r2, #1
    71e0:	469b      	mov	fp, r3
    71e2:	e78b      	b.n	70fc <__aeabi_ddiv+0x7c>
    71e4:	4651      	mov	r1, sl
    71e6:	2203      	movs	r2, #3
    71e8:	e788      	b.n	70fc <__aeabi_ddiv+0x7c>
    71ea:	2300      	movs	r3, #0
    71ec:	4698      	mov	r8, r3
    71ee:	3301      	adds	r3, #1
    71f0:	2604      	movs	r6, #4
    71f2:	2400      	movs	r4, #0
    71f4:	9303      	str	r3, [sp, #12]
    71f6:	e767      	b.n	70c8 <__aeabi_ddiv+0x48>
    71f8:	2303      	movs	r3, #3
    71fa:	46b1      	mov	r9, r6
    71fc:	9303      	str	r3, [sp, #12]
    71fe:	260c      	movs	r6, #12
    7200:	e762      	b.n	70c8 <__aeabi_ddiv+0x48>
    7202:	2a03      	cmp	r2, #3
    7204:	d100      	bne.n	7208 <__aeabi_ddiv+0x188>
    7206:	e25c      	b.n	76c2 <__aeabi_ddiv+0x642>
    7208:	9b01      	ldr	r3, [sp, #4]
    720a:	2a01      	cmp	r2, #1
    720c:	d000      	beq.n	7210 <__aeabi_ddiv+0x190>
    720e:	e1e4      	b.n	75da <__aeabi_ddiv+0x55a>
    7210:	4013      	ands	r3, r2
    7212:	469c      	mov	ip, r3
    7214:	2300      	movs	r3, #0
    7216:	2400      	movs	r4, #0
    7218:	2200      	movs	r2, #0
    721a:	4698      	mov	r8, r3
    721c:	2100      	movs	r1, #0
    721e:	0312      	lsls	r2, r2, #12
    7220:	0b13      	lsrs	r3, r2, #12
    7222:	0d0a      	lsrs	r2, r1, #20
    7224:	0512      	lsls	r2, r2, #20
    7226:	431a      	orrs	r2, r3
    7228:	0523      	lsls	r3, r4, #20
    722a:	4c12      	ldr	r4, [pc, #72]	; (7274 <__aeabi_ddiv+0x1f4>)
    722c:	4640      	mov	r0, r8
    722e:	4022      	ands	r2, r4
    7230:	4313      	orrs	r3, r2
    7232:	4662      	mov	r2, ip
    7234:	005b      	lsls	r3, r3, #1
    7236:	07d2      	lsls	r2, r2, #31
    7238:	085b      	lsrs	r3, r3, #1
    723a:	4313      	orrs	r3, r2
    723c:	0019      	movs	r1, r3
    723e:	b007      	add	sp, #28
    7240:	bc3c      	pop	{r2, r3, r4, r5}
    7242:	4690      	mov	r8, r2
    7244:	4699      	mov	r9, r3
    7246:	46a2      	mov	sl, r4
    7248:	46ab      	mov	fp, r5
    724a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    724c:	2300      	movs	r3, #0
    724e:	2280      	movs	r2, #128	; 0x80
    7250:	469c      	mov	ip, r3
    7252:	0312      	lsls	r2, r2, #12
    7254:	4698      	mov	r8, r3
    7256:	4c03      	ldr	r4, [pc, #12]	; (7264 <__aeabi_ddiv+0x1e4>)
    7258:	e7e0      	b.n	721c <__aeabi_ddiv+0x19c>
    725a:	2300      	movs	r3, #0
    725c:	4c01      	ldr	r4, [pc, #4]	; (7264 <__aeabi_ddiv+0x1e4>)
    725e:	2200      	movs	r2, #0
    7260:	4698      	mov	r8, r3
    7262:	e7db      	b.n	721c <__aeabi_ddiv+0x19c>
    7264:	000007ff 	.word	0x000007ff
    7268:	fffffc01 	.word	0xfffffc01
    726c:	000084e8 	.word	0x000084e8
    7270:	fffffc0d 	.word	0xfffffc0d
    7274:	800fffff 	.word	0x800fffff
    7278:	45d9      	cmp	r9, fp
    727a:	d900      	bls.n	727e <__aeabi_ddiv+0x1fe>
    727c:	e139      	b.n	74f2 <__aeabi_ddiv+0x472>
    727e:	d100      	bne.n	7282 <__aeabi_ddiv+0x202>
    7280:	e134      	b.n	74ec <__aeabi_ddiv+0x46c>
    7282:	2300      	movs	r3, #0
    7284:	4646      	mov	r6, r8
    7286:	464d      	mov	r5, r9
    7288:	469a      	mov	sl, r3
    728a:	3c01      	subs	r4, #1
    728c:	465b      	mov	r3, fp
    728e:	0e0a      	lsrs	r2, r1, #24
    7290:	021b      	lsls	r3, r3, #8
    7292:	431a      	orrs	r2, r3
    7294:	020b      	lsls	r3, r1, #8
    7296:	0c17      	lsrs	r7, r2, #16
    7298:	9303      	str	r3, [sp, #12]
    729a:	0413      	lsls	r3, r2, #16
    729c:	0c1b      	lsrs	r3, r3, #16
    729e:	0039      	movs	r1, r7
    72a0:	0028      	movs	r0, r5
    72a2:	4690      	mov	r8, r2
    72a4:	9301      	str	r3, [sp, #4]
    72a6:	f7fa fda9 	bl	1dfc <__udivsi3>
    72aa:	0002      	movs	r2, r0
    72ac:	9b01      	ldr	r3, [sp, #4]
    72ae:	4683      	mov	fp, r0
    72b0:	435a      	muls	r2, r3
    72b2:	0028      	movs	r0, r5
    72b4:	0039      	movs	r1, r7
    72b6:	4691      	mov	r9, r2
    72b8:	f7fa fe26 	bl	1f08 <__aeabi_uidivmod>
    72bc:	0c35      	lsrs	r5, r6, #16
    72be:	0409      	lsls	r1, r1, #16
    72c0:	430d      	orrs	r5, r1
    72c2:	45a9      	cmp	r9, r5
    72c4:	d90d      	bls.n	72e2 <__aeabi_ddiv+0x262>
    72c6:	465b      	mov	r3, fp
    72c8:	4445      	add	r5, r8
    72ca:	3b01      	subs	r3, #1
    72cc:	45a8      	cmp	r8, r5
    72ce:	d900      	bls.n	72d2 <__aeabi_ddiv+0x252>
    72d0:	e13a      	b.n	7548 <__aeabi_ddiv+0x4c8>
    72d2:	45a9      	cmp	r9, r5
    72d4:	d800      	bhi.n	72d8 <__aeabi_ddiv+0x258>
    72d6:	e137      	b.n	7548 <__aeabi_ddiv+0x4c8>
    72d8:	2302      	movs	r3, #2
    72da:	425b      	negs	r3, r3
    72dc:	469c      	mov	ip, r3
    72de:	4445      	add	r5, r8
    72e0:	44e3      	add	fp, ip
    72e2:	464b      	mov	r3, r9
    72e4:	1aeb      	subs	r3, r5, r3
    72e6:	0039      	movs	r1, r7
    72e8:	0018      	movs	r0, r3
    72ea:	9304      	str	r3, [sp, #16]
    72ec:	f7fa fd86 	bl	1dfc <__udivsi3>
    72f0:	9b01      	ldr	r3, [sp, #4]
    72f2:	0005      	movs	r5, r0
    72f4:	4343      	muls	r3, r0
    72f6:	0039      	movs	r1, r7
    72f8:	9804      	ldr	r0, [sp, #16]
    72fa:	4699      	mov	r9, r3
    72fc:	f7fa fe04 	bl	1f08 <__aeabi_uidivmod>
    7300:	0433      	lsls	r3, r6, #16
    7302:	0409      	lsls	r1, r1, #16
    7304:	0c1b      	lsrs	r3, r3, #16
    7306:	430b      	orrs	r3, r1
    7308:	4599      	cmp	r9, r3
    730a:	d909      	bls.n	7320 <__aeabi_ddiv+0x2a0>
    730c:	4443      	add	r3, r8
    730e:	1e6a      	subs	r2, r5, #1
    7310:	4598      	cmp	r8, r3
    7312:	d900      	bls.n	7316 <__aeabi_ddiv+0x296>
    7314:	e11a      	b.n	754c <__aeabi_ddiv+0x4cc>
    7316:	4599      	cmp	r9, r3
    7318:	d800      	bhi.n	731c <__aeabi_ddiv+0x29c>
    731a:	e117      	b.n	754c <__aeabi_ddiv+0x4cc>
    731c:	3d02      	subs	r5, #2
    731e:	4443      	add	r3, r8
    7320:	464a      	mov	r2, r9
    7322:	1a9b      	subs	r3, r3, r2
    7324:	465a      	mov	r2, fp
    7326:	0412      	lsls	r2, r2, #16
    7328:	432a      	orrs	r2, r5
    732a:	9903      	ldr	r1, [sp, #12]
    732c:	4693      	mov	fp, r2
    732e:	0c10      	lsrs	r0, r2, #16
    7330:	0c0a      	lsrs	r2, r1, #16
    7332:	4691      	mov	r9, r2
    7334:	0409      	lsls	r1, r1, #16
    7336:	465a      	mov	r2, fp
    7338:	0c09      	lsrs	r1, r1, #16
    733a:	464e      	mov	r6, r9
    733c:	000d      	movs	r5, r1
    733e:	0412      	lsls	r2, r2, #16
    7340:	0c12      	lsrs	r2, r2, #16
    7342:	4345      	muls	r5, r0
    7344:	9105      	str	r1, [sp, #20]
    7346:	4351      	muls	r1, r2
    7348:	4372      	muls	r2, r6
    734a:	4370      	muls	r0, r6
    734c:	1952      	adds	r2, r2, r5
    734e:	0c0e      	lsrs	r6, r1, #16
    7350:	18b2      	adds	r2, r6, r2
    7352:	4295      	cmp	r5, r2
    7354:	d903      	bls.n	735e <__aeabi_ddiv+0x2de>
    7356:	2580      	movs	r5, #128	; 0x80
    7358:	026d      	lsls	r5, r5, #9
    735a:	46ac      	mov	ip, r5
    735c:	4460      	add	r0, ip
    735e:	0c15      	lsrs	r5, r2, #16
    7360:	0409      	lsls	r1, r1, #16
    7362:	0412      	lsls	r2, r2, #16
    7364:	0c09      	lsrs	r1, r1, #16
    7366:	1828      	adds	r0, r5, r0
    7368:	1852      	adds	r2, r2, r1
    736a:	4283      	cmp	r3, r0
    736c:	d200      	bcs.n	7370 <__aeabi_ddiv+0x2f0>
    736e:	e0ce      	b.n	750e <__aeabi_ddiv+0x48e>
    7370:	d100      	bne.n	7374 <__aeabi_ddiv+0x2f4>
    7372:	e0c8      	b.n	7506 <__aeabi_ddiv+0x486>
    7374:	1a1d      	subs	r5, r3, r0
    7376:	4653      	mov	r3, sl
    7378:	1a9e      	subs	r6, r3, r2
    737a:	45b2      	cmp	sl, r6
    737c:	4192      	sbcs	r2, r2
    737e:	4252      	negs	r2, r2
    7380:	1aab      	subs	r3, r5, r2
    7382:	469a      	mov	sl, r3
    7384:	4598      	cmp	r8, r3
    7386:	d100      	bne.n	738a <__aeabi_ddiv+0x30a>
    7388:	e117      	b.n	75ba <__aeabi_ddiv+0x53a>
    738a:	0039      	movs	r1, r7
    738c:	0018      	movs	r0, r3
    738e:	f7fa fd35 	bl	1dfc <__udivsi3>
    7392:	9b01      	ldr	r3, [sp, #4]
    7394:	0005      	movs	r5, r0
    7396:	4343      	muls	r3, r0
    7398:	0039      	movs	r1, r7
    739a:	4650      	mov	r0, sl
    739c:	9304      	str	r3, [sp, #16]
    739e:	f7fa fdb3 	bl	1f08 <__aeabi_uidivmod>
    73a2:	9804      	ldr	r0, [sp, #16]
    73a4:	040b      	lsls	r3, r1, #16
    73a6:	0c31      	lsrs	r1, r6, #16
    73a8:	4319      	orrs	r1, r3
    73aa:	4288      	cmp	r0, r1
    73ac:	d909      	bls.n	73c2 <__aeabi_ddiv+0x342>
    73ae:	4441      	add	r1, r8
    73b0:	1e6b      	subs	r3, r5, #1
    73b2:	4588      	cmp	r8, r1
    73b4:	d900      	bls.n	73b8 <__aeabi_ddiv+0x338>
    73b6:	e107      	b.n	75c8 <__aeabi_ddiv+0x548>
    73b8:	4288      	cmp	r0, r1
    73ba:	d800      	bhi.n	73be <__aeabi_ddiv+0x33e>
    73bc:	e104      	b.n	75c8 <__aeabi_ddiv+0x548>
    73be:	3d02      	subs	r5, #2
    73c0:	4441      	add	r1, r8
    73c2:	9b04      	ldr	r3, [sp, #16]
    73c4:	1acb      	subs	r3, r1, r3
    73c6:	0018      	movs	r0, r3
    73c8:	0039      	movs	r1, r7
    73ca:	9304      	str	r3, [sp, #16]
    73cc:	f7fa fd16 	bl	1dfc <__udivsi3>
    73d0:	9b01      	ldr	r3, [sp, #4]
    73d2:	4682      	mov	sl, r0
    73d4:	4343      	muls	r3, r0
    73d6:	0039      	movs	r1, r7
    73d8:	9804      	ldr	r0, [sp, #16]
    73da:	9301      	str	r3, [sp, #4]
    73dc:	f7fa fd94 	bl	1f08 <__aeabi_uidivmod>
    73e0:	9801      	ldr	r0, [sp, #4]
    73e2:	040b      	lsls	r3, r1, #16
    73e4:	0431      	lsls	r1, r6, #16
    73e6:	0c09      	lsrs	r1, r1, #16
    73e8:	4319      	orrs	r1, r3
    73ea:	4288      	cmp	r0, r1
    73ec:	d90d      	bls.n	740a <__aeabi_ddiv+0x38a>
    73ee:	4653      	mov	r3, sl
    73f0:	4441      	add	r1, r8
    73f2:	3b01      	subs	r3, #1
    73f4:	4588      	cmp	r8, r1
    73f6:	d900      	bls.n	73fa <__aeabi_ddiv+0x37a>
    73f8:	e0e8      	b.n	75cc <__aeabi_ddiv+0x54c>
    73fa:	4288      	cmp	r0, r1
    73fc:	d800      	bhi.n	7400 <__aeabi_ddiv+0x380>
    73fe:	e0e5      	b.n	75cc <__aeabi_ddiv+0x54c>
    7400:	2302      	movs	r3, #2
    7402:	425b      	negs	r3, r3
    7404:	469c      	mov	ip, r3
    7406:	4441      	add	r1, r8
    7408:	44e2      	add	sl, ip
    740a:	9b01      	ldr	r3, [sp, #4]
    740c:	042d      	lsls	r5, r5, #16
    740e:	1ace      	subs	r6, r1, r3
    7410:	4651      	mov	r1, sl
    7412:	4329      	orrs	r1, r5
    7414:	9d05      	ldr	r5, [sp, #20]
    7416:	464f      	mov	r7, r9
    7418:	002a      	movs	r2, r5
    741a:	040b      	lsls	r3, r1, #16
    741c:	0c08      	lsrs	r0, r1, #16
    741e:	0c1b      	lsrs	r3, r3, #16
    7420:	435a      	muls	r2, r3
    7422:	4345      	muls	r5, r0
    7424:	437b      	muls	r3, r7
    7426:	4378      	muls	r0, r7
    7428:	195b      	adds	r3, r3, r5
    742a:	0c17      	lsrs	r7, r2, #16
    742c:	18fb      	adds	r3, r7, r3
    742e:	429d      	cmp	r5, r3
    7430:	d903      	bls.n	743a <__aeabi_ddiv+0x3ba>
    7432:	2580      	movs	r5, #128	; 0x80
    7434:	026d      	lsls	r5, r5, #9
    7436:	46ac      	mov	ip, r5
    7438:	4460      	add	r0, ip
    743a:	0c1d      	lsrs	r5, r3, #16
    743c:	0412      	lsls	r2, r2, #16
    743e:	041b      	lsls	r3, r3, #16
    7440:	0c12      	lsrs	r2, r2, #16
    7442:	1828      	adds	r0, r5, r0
    7444:	189b      	adds	r3, r3, r2
    7446:	4286      	cmp	r6, r0
    7448:	d200      	bcs.n	744c <__aeabi_ddiv+0x3cc>
    744a:	e093      	b.n	7574 <__aeabi_ddiv+0x4f4>
    744c:	d100      	bne.n	7450 <__aeabi_ddiv+0x3d0>
    744e:	e08e      	b.n	756e <__aeabi_ddiv+0x4ee>
    7450:	2301      	movs	r3, #1
    7452:	4319      	orrs	r1, r3
    7454:	4ba0      	ldr	r3, [pc, #640]	; (76d8 <__aeabi_ddiv+0x658>)
    7456:	18e3      	adds	r3, r4, r3
    7458:	2b00      	cmp	r3, #0
    745a:	dc00      	bgt.n	745e <__aeabi_ddiv+0x3de>
    745c:	e099      	b.n	7592 <__aeabi_ddiv+0x512>
    745e:	074a      	lsls	r2, r1, #29
    7460:	d000      	beq.n	7464 <__aeabi_ddiv+0x3e4>
    7462:	e09e      	b.n	75a2 <__aeabi_ddiv+0x522>
    7464:	465a      	mov	r2, fp
    7466:	01d2      	lsls	r2, r2, #7
    7468:	d506      	bpl.n	7478 <__aeabi_ddiv+0x3f8>
    746a:	465a      	mov	r2, fp
    746c:	4b9b      	ldr	r3, [pc, #620]	; (76dc <__aeabi_ddiv+0x65c>)
    746e:	401a      	ands	r2, r3
    7470:	2380      	movs	r3, #128	; 0x80
    7472:	4693      	mov	fp, r2
    7474:	00db      	lsls	r3, r3, #3
    7476:	18e3      	adds	r3, r4, r3
    7478:	4a99      	ldr	r2, [pc, #612]	; (76e0 <__aeabi_ddiv+0x660>)
    747a:	4293      	cmp	r3, r2
    747c:	dd68      	ble.n	7550 <__aeabi_ddiv+0x4d0>
    747e:	2301      	movs	r3, #1
    7480:	9a02      	ldr	r2, [sp, #8]
    7482:	4c98      	ldr	r4, [pc, #608]	; (76e4 <__aeabi_ddiv+0x664>)
    7484:	401a      	ands	r2, r3
    7486:	2300      	movs	r3, #0
    7488:	4694      	mov	ip, r2
    748a:	4698      	mov	r8, r3
    748c:	2200      	movs	r2, #0
    748e:	e6c5      	b.n	721c <__aeabi_ddiv+0x19c>
    7490:	2280      	movs	r2, #128	; 0x80
    7492:	464b      	mov	r3, r9
    7494:	0312      	lsls	r2, r2, #12
    7496:	4213      	tst	r3, r2
    7498:	d00a      	beq.n	74b0 <__aeabi_ddiv+0x430>
    749a:	465b      	mov	r3, fp
    749c:	4213      	tst	r3, r2
    749e:	d106      	bne.n	74ae <__aeabi_ddiv+0x42e>
    74a0:	431a      	orrs	r2, r3
    74a2:	0312      	lsls	r2, r2, #12
    74a4:	0b12      	lsrs	r2, r2, #12
    74a6:	46ac      	mov	ip, r5
    74a8:	4688      	mov	r8, r1
    74aa:	4c8e      	ldr	r4, [pc, #568]	; (76e4 <__aeabi_ddiv+0x664>)
    74ac:	e6b6      	b.n	721c <__aeabi_ddiv+0x19c>
    74ae:	464b      	mov	r3, r9
    74b0:	431a      	orrs	r2, r3
    74b2:	0312      	lsls	r2, r2, #12
    74b4:	0b12      	lsrs	r2, r2, #12
    74b6:	46bc      	mov	ip, r7
    74b8:	4c8a      	ldr	r4, [pc, #552]	; (76e4 <__aeabi_ddiv+0x664>)
    74ba:	e6af      	b.n	721c <__aeabi_ddiv+0x19c>
    74bc:	0003      	movs	r3, r0
    74be:	465a      	mov	r2, fp
    74c0:	3b28      	subs	r3, #40	; 0x28
    74c2:	409a      	lsls	r2, r3
    74c4:	2300      	movs	r3, #0
    74c6:	4691      	mov	r9, r2
    74c8:	4698      	mov	r8, r3
    74ca:	e657      	b.n	717c <__aeabi_ddiv+0xfc>
    74cc:	4658      	mov	r0, fp
    74ce:	f7fb fab3 	bl	2a38 <__clzsi2>
    74d2:	3020      	adds	r0, #32
    74d4:	e640      	b.n	7158 <__aeabi_ddiv+0xd8>
    74d6:	0003      	movs	r3, r0
    74d8:	4652      	mov	r2, sl
    74da:	3b28      	subs	r3, #40	; 0x28
    74dc:	409a      	lsls	r2, r3
    74de:	2100      	movs	r1, #0
    74e0:	4693      	mov	fp, r2
    74e2:	e677      	b.n	71d4 <__aeabi_ddiv+0x154>
    74e4:	f7fb faa8 	bl	2a38 <__clzsi2>
    74e8:	3020      	adds	r0, #32
    74ea:	e65f      	b.n	71ac <__aeabi_ddiv+0x12c>
    74ec:	4588      	cmp	r8, r1
    74ee:	d200      	bcs.n	74f2 <__aeabi_ddiv+0x472>
    74f0:	e6c7      	b.n	7282 <__aeabi_ddiv+0x202>
    74f2:	464b      	mov	r3, r9
    74f4:	07de      	lsls	r6, r3, #31
    74f6:	085d      	lsrs	r5, r3, #1
    74f8:	4643      	mov	r3, r8
    74fa:	085b      	lsrs	r3, r3, #1
    74fc:	431e      	orrs	r6, r3
    74fe:	4643      	mov	r3, r8
    7500:	07db      	lsls	r3, r3, #31
    7502:	469a      	mov	sl, r3
    7504:	e6c2      	b.n	728c <__aeabi_ddiv+0x20c>
    7506:	2500      	movs	r5, #0
    7508:	4592      	cmp	sl, r2
    750a:	d300      	bcc.n	750e <__aeabi_ddiv+0x48e>
    750c:	e733      	b.n	7376 <__aeabi_ddiv+0x2f6>
    750e:	9e03      	ldr	r6, [sp, #12]
    7510:	4659      	mov	r1, fp
    7512:	46b4      	mov	ip, r6
    7514:	44e2      	add	sl, ip
    7516:	45b2      	cmp	sl, r6
    7518:	41ad      	sbcs	r5, r5
    751a:	426d      	negs	r5, r5
    751c:	4445      	add	r5, r8
    751e:	18eb      	adds	r3, r5, r3
    7520:	3901      	subs	r1, #1
    7522:	4598      	cmp	r8, r3
    7524:	d207      	bcs.n	7536 <__aeabi_ddiv+0x4b6>
    7526:	4298      	cmp	r0, r3
    7528:	d900      	bls.n	752c <__aeabi_ddiv+0x4ac>
    752a:	e07f      	b.n	762c <__aeabi_ddiv+0x5ac>
    752c:	d100      	bne.n	7530 <__aeabi_ddiv+0x4b0>
    752e:	e0bc      	b.n	76aa <__aeabi_ddiv+0x62a>
    7530:	1a1d      	subs	r5, r3, r0
    7532:	468b      	mov	fp, r1
    7534:	e71f      	b.n	7376 <__aeabi_ddiv+0x2f6>
    7536:	4598      	cmp	r8, r3
    7538:	d1fa      	bne.n	7530 <__aeabi_ddiv+0x4b0>
    753a:	9d03      	ldr	r5, [sp, #12]
    753c:	4555      	cmp	r5, sl
    753e:	d9f2      	bls.n	7526 <__aeabi_ddiv+0x4a6>
    7540:	4643      	mov	r3, r8
    7542:	468b      	mov	fp, r1
    7544:	1a1d      	subs	r5, r3, r0
    7546:	e716      	b.n	7376 <__aeabi_ddiv+0x2f6>
    7548:	469b      	mov	fp, r3
    754a:	e6ca      	b.n	72e2 <__aeabi_ddiv+0x262>
    754c:	0015      	movs	r5, r2
    754e:	e6e7      	b.n	7320 <__aeabi_ddiv+0x2a0>
    7550:	465a      	mov	r2, fp
    7552:	08c9      	lsrs	r1, r1, #3
    7554:	0752      	lsls	r2, r2, #29
    7556:	430a      	orrs	r2, r1
    7558:	055b      	lsls	r3, r3, #21
    755a:	4690      	mov	r8, r2
    755c:	0d5c      	lsrs	r4, r3, #21
    755e:	465a      	mov	r2, fp
    7560:	2301      	movs	r3, #1
    7562:	9902      	ldr	r1, [sp, #8]
    7564:	0252      	lsls	r2, r2, #9
    7566:	4019      	ands	r1, r3
    7568:	0b12      	lsrs	r2, r2, #12
    756a:	468c      	mov	ip, r1
    756c:	e656      	b.n	721c <__aeabi_ddiv+0x19c>
    756e:	2b00      	cmp	r3, #0
    7570:	d100      	bne.n	7574 <__aeabi_ddiv+0x4f4>
    7572:	e76f      	b.n	7454 <__aeabi_ddiv+0x3d4>
    7574:	4446      	add	r6, r8
    7576:	1e4a      	subs	r2, r1, #1
    7578:	45b0      	cmp	r8, r6
    757a:	d929      	bls.n	75d0 <__aeabi_ddiv+0x550>
    757c:	0011      	movs	r1, r2
    757e:	4286      	cmp	r6, r0
    7580:	d000      	beq.n	7584 <__aeabi_ddiv+0x504>
    7582:	e765      	b.n	7450 <__aeabi_ddiv+0x3d0>
    7584:	9a03      	ldr	r2, [sp, #12]
    7586:	4293      	cmp	r3, r2
    7588:	d000      	beq.n	758c <__aeabi_ddiv+0x50c>
    758a:	e761      	b.n	7450 <__aeabi_ddiv+0x3d0>
    758c:	e762      	b.n	7454 <__aeabi_ddiv+0x3d4>
    758e:	2101      	movs	r1, #1
    7590:	4249      	negs	r1, r1
    7592:	2001      	movs	r0, #1
    7594:	1ac2      	subs	r2, r0, r3
    7596:	2a38      	cmp	r2, #56	; 0x38
    7598:	dd21      	ble.n	75de <__aeabi_ddiv+0x55e>
    759a:	9b02      	ldr	r3, [sp, #8]
    759c:	4003      	ands	r3, r0
    759e:	469c      	mov	ip, r3
    75a0:	e638      	b.n	7214 <__aeabi_ddiv+0x194>
    75a2:	220f      	movs	r2, #15
    75a4:	400a      	ands	r2, r1
    75a6:	2a04      	cmp	r2, #4
    75a8:	d100      	bne.n	75ac <__aeabi_ddiv+0x52c>
    75aa:	e75b      	b.n	7464 <__aeabi_ddiv+0x3e4>
    75ac:	000a      	movs	r2, r1
    75ae:	1d11      	adds	r1, r2, #4
    75b0:	4291      	cmp	r1, r2
    75b2:	4192      	sbcs	r2, r2
    75b4:	4252      	negs	r2, r2
    75b6:	4493      	add	fp, r2
    75b8:	e754      	b.n	7464 <__aeabi_ddiv+0x3e4>
    75ba:	4b47      	ldr	r3, [pc, #284]	; (76d8 <__aeabi_ddiv+0x658>)
    75bc:	18e3      	adds	r3, r4, r3
    75be:	2b00      	cmp	r3, #0
    75c0:	dde5      	ble.n	758e <__aeabi_ddiv+0x50e>
    75c2:	2201      	movs	r2, #1
    75c4:	4252      	negs	r2, r2
    75c6:	e7f2      	b.n	75ae <__aeabi_ddiv+0x52e>
    75c8:	001d      	movs	r5, r3
    75ca:	e6fa      	b.n	73c2 <__aeabi_ddiv+0x342>
    75cc:	469a      	mov	sl, r3
    75ce:	e71c      	b.n	740a <__aeabi_ddiv+0x38a>
    75d0:	42b0      	cmp	r0, r6
    75d2:	d839      	bhi.n	7648 <__aeabi_ddiv+0x5c8>
    75d4:	d06e      	beq.n	76b4 <__aeabi_ddiv+0x634>
    75d6:	0011      	movs	r1, r2
    75d8:	e73a      	b.n	7450 <__aeabi_ddiv+0x3d0>
    75da:	9302      	str	r3, [sp, #8]
    75dc:	e73a      	b.n	7454 <__aeabi_ddiv+0x3d4>
    75de:	2a1f      	cmp	r2, #31
    75e0:	dc3c      	bgt.n	765c <__aeabi_ddiv+0x5dc>
    75e2:	2320      	movs	r3, #32
    75e4:	1a9b      	subs	r3, r3, r2
    75e6:	000c      	movs	r4, r1
    75e8:	4658      	mov	r0, fp
    75ea:	4099      	lsls	r1, r3
    75ec:	4098      	lsls	r0, r3
    75ee:	1e4b      	subs	r3, r1, #1
    75f0:	4199      	sbcs	r1, r3
    75f2:	465b      	mov	r3, fp
    75f4:	40d4      	lsrs	r4, r2
    75f6:	40d3      	lsrs	r3, r2
    75f8:	4320      	orrs	r0, r4
    75fa:	4308      	orrs	r0, r1
    75fc:	001a      	movs	r2, r3
    75fe:	0743      	lsls	r3, r0, #29
    7600:	d009      	beq.n	7616 <__aeabi_ddiv+0x596>
    7602:	230f      	movs	r3, #15
    7604:	4003      	ands	r3, r0
    7606:	2b04      	cmp	r3, #4
    7608:	d005      	beq.n	7616 <__aeabi_ddiv+0x596>
    760a:	0001      	movs	r1, r0
    760c:	1d08      	adds	r0, r1, #4
    760e:	4288      	cmp	r0, r1
    7610:	419b      	sbcs	r3, r3
    7612:	425b      	negs	r3, r3
    7614:	18d2      	adds	r2, r2, r3
    7616:	0213      	lsls	r3, r2, #8
    7618:	d53a      	bpl.n	7690 <__aeabi_ddiv+0x610>
    761a:	2301      	movs	r3, #1
    761c:	9a02      	ldr	r2, [sp, #8]
    761e:	2401      	movs	r4, #1
    7620:	401a      	ands	r2, r3
    7622:	2300      	movs	r3, #0
    7624:	4694      	mov	ip, r2
    7626:	4698      	mov	r8, r3
    7628:	2200      	movs	r2, #0
    762a:	e5f7      	b.n	721c <__aeabi_ddiv+0x19c>
    762c:	2102      	movs	r1, #2
    762e:	4249      	negs	r1, r1
    7630:	468c      	mov	ip, r1
    7632:	9d03      	ldr	r5, [sp, #12]
    7634:	44e3      	add	fp, ip
    7636:	46ac      	mov	ip, r5
    7638:	44e2      	add	sl, ip
    763a:	45aa      	cmp	sl, r5
    763c:	41ad      	sbcs	r5, r5
    763e:	426d      	negs	r5, r5
    7640:	4445      	add	r5, r8
    7642:	18ed      	adds	r5, r5, r3
    7644:	1a2d      	subs	r5, r5, r0
    7646:	e696      	b.n	7376 <__aeabi_ddiv+0x2f6>
    7648:	1e8a      	subs	r2, r1, #2
    764a:	9903      	ldr	r1, [sp, #12]
    764c:	004d      	lsls	r5, r1, #1
    764e:	428d      	cmp	r5, r1
    7650:	4189      	sbcs	r1, r1
    7652:	4249      	negs	r1, r1
    7654:	4441      	add	r1, r8
    7656:	1876      	adds	r6, r6, r1
    7658:	9503      	str	r5, [sp, #12]
    765a:	e78f      	b.n	757c <__aeabi_ddiv+0x4fc>
    765c:	201f      	movs	r0, #31
    765e:	4240      	negs	r0, r0
    7660:	1ac3      	subs	r3, r0, r3
    7662:	4658      	mov	r0, fp
    7664:	40d8      	lsrs	r0, r3
    7666:	0003      	movs	r3, r0
    7668:	2a20      	cmp	r2, #32
    766a:	d028      	beq.n	76be <__aeabi_ddiv+0x63e>
    766c:	2040      	movs	r0, #64	; 0x40
    766e:	465d      	mov	r5, fp
    7670:	1a82      	subs	r2, r0, r2
    7672:	4095      	lsls	r5, r2
    7674:	4329      	orrs	r1, r5
    7676:	1e4a      	subs	r2, r1, #1
    7678:	4191      	sbcs	r1, r2
    767a:	4319      	orrs	r1, r3
    767c:	2307      	movs	r3, #7
    767e:	2200      	movs	r2, #0
    7680:	400b      	ands	r3, r1
    7682:	d009      	beq.n	7698 <__aeabi_ddiv+0x618>
    7684:	230f      	movs	r3, #15
    7686:	2200      	movs	r2, #0
    7688:	400b      	ands	r3, r1
    768a:	0008      	movs	r0, r1
    768c:	2b04      	cmp	r3, #4
    768e:	d1bd      	bne.n	760c <__aeabi_ddiv+0x58c>
    7690:	0001      	movs	r1, r0
    7692:	0753      	lsls	r3, r2, #29
    7694:	0252      	lsls	r2, r2, #9
    7696:	0b12      	lsrs	r2, r2, #12
    7698:	08c9      	lsrs	r1, r1, #3
    769a:	4319      	orrs	r1, r3
    769c:	2301      	movs	r3, #1
    769e:	4688      	mov	r8, r1
    76a0:	9902      	ldr	r1, [sp, #8]
    76a2:	2400      	movs	r4, #0
    76a4:	4019      	ands	r1, r3
    76a6:	468c      	mov	ip, r1
    76a8:	e5b8      	b.n	721c <__aeabi_ddiv+0x19c>
    76aa:	4552      	cmp	r2, sl
    76ac:	d8be      	bhi.n	762c <__aeabi_ddiv+0x5ac>
    76ae:	468b      	mov	fp, r1
    76b0:	2500      	movs	r5, #0
    76b2:	e660      	b.n	7376 <__aeabi_ddiv+0x2f6>
    76b4:	9d03      	ldr	r5, [sp, #12]
    76b6:	429d      	cmp	r5, r3
    76b8:	d3c6      	bcc.n	7648 <__aeabi_ddiv+0x5c8>
    76ba:	0011      	movs	r1, r2
    76bc:	e762      	b.n	7584 <__aeabi_ddiv+0x504>
    76be:	2500      	movs	r5, #0
    76c0:	e7d8      	b.n	7674 <__aeabi_ddiv+0x5f4>
    76c2:	2280      	movs	r2, #128	; 0x80
    76c4:	465b      	mov	r3, fp
    76c6:	0312      	lsls	r2, r2, #12
    76c8:	431a      	orrs	r2, r3
    76ca:	9b01      	ldr	r3, [sp, #4]
    76cc:	0312      	lsls	r2, r2, #12
    76ce:	0b12      	lsrs	r2, r2, #12
    76d0:	469c      	mov	ip, r3
    76d2:	4688      	mov	r8, r1
    76d4:	4c03      	ldr	r4, [pc, #12]	; (76e4 <__aeabi_ddiv+0x664>)
    76d6:	e5a1      	b.n	721c <__aeabi_ddiv+0x19c>
    76d8:	000003ff 	.word	0x000003ff
    76dc:	feffffff 	.word	0xfeffffff
    76e0:	000007fe 	.word	0x000007fe
    76e4:	000007ff 	.word	0x000007ff

000076e8 <__eqdf2>:
    76e8:	b5f0      	push	{r4, r5, r6, r7, lr}
    76ea:	464f      	mov	r7, r9
    76ec:	4646      	mov	r6, r8
    76ee:	46d6      	mov	lr, sl
    76f0:	005c      	lsls	r4, r3, #1
    76f2:	b5c0      	push	{r6, r7, lr}
    76f4:	031f      	lsls	r7, r3, #12
    76f6:	0fdb      	lsrs	r3, r3, #31
    76f8:	469a      	mov	sl, r3
    76fa:	4b17      	ldr	r3, [pc, #92]	; (7758 <__eqdf2+0x70>)
    76fc:	030e      	lsls	r6, r1, #12
    76fe:	004d      	lsls	r5, r1, #1
    7700:	4684      	mov	ip, r0
    7702:	4680      	mov	r8, r0
    7704:	0b36      	lsrs	r6, r6, #12
    7706:	0d6d      	lsrs	r5, r5, #21
    7708:	0fc9      	lsrs	r1, r1, #31
    770a:	4691      	mov	r9, r2
    770c:	0b3f      	lsrs	r7, r7, #12
    770e:	0d64      	lsrs	r4, r4, #21
    7710:	2001      	movs	r0, #1
    7712:	429d      	cmp	r5, r3
    7714:	d008      	beq.n	7728 <__eqdf2+0x40>
    7716:	429c      	cmp	r4, r3
    7718:	d001      	beq.n	771e <__eqdf2+0x36>
    771a:	42a5      	cmp	r5, r4
    771c:	d00b      	beq.n	7736 <__eqdf2+0x4e>
    771e:	bc1c      	pop	{r2, r3, r4}
    7720:	4690      	mov	r8, r2
    7722:	4699      	mov	r9, r3
    7724:	46a2      	mov	sl, r4
    7726:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7728:	4663      	mov	r3, ip
    772a:	4333      	orrs	r3, r6
    772c:	d1f7      	bne.n	771e <__eqdf2+0x36>
    772e:	42ac      	cmp	r4, r5
    7730:	d1f5      	bne.n	771e <__eqdf2+0x36>
    7732:	433a      	orrs	r2, r7
    7734:	d1f3      	bne.n	771e <__eqdf2+0x36>
    7736:	2001      	movs	r0, #1
    7738:	42be      	cmp	r6, r7
    773a:	d1f0      	bne.n	771e <__eqdf2+0x36>
    773c:	45c8      	cmp	r8, r9
    773e:	d1ee      	bne.n	771e <__eqdf2+0x36>
    7740:	4551      	cmp	r1, sl
    7742:	d007      	beq.n	7754 <__eqdf2+0x6c>
    7744:	2d00      	cmp	r5, #0
    7746:	d1ea      	bne.n	771e <__eqdf2+0x36>
    7748:	4663      	mov	r3, ip
    774a:	431e      	orrs	r6, r3
    774c:	0030      	movs	r0, r6
    774e:	1e46      	subs	r6, r0, #1
    7750:	41b0      	sbcs	r0, r6
    7752:	e7e4      	b.n	771e <__eqdf2+0x36>
    7754:	2000      	movs	r0, #0
    7756:	e7e2      	b.n	771e <__eqdf2+0x36>
    7758:	000007ff 	.word	0x000007ff

0000775c <__gedf2>:
    775c:	b5f0      	push	{r4, r5, r6, r7, lr}
    775e:	4645      	mov	r5, r8
    7760:	46de      	mov	lr, fp
    7762:	4657      	mov	r7, sl
    7764:	464e      	mov	r6, r9
    7766:	b5e0      	push	{r5, r6, r7, lr}
    7768:	031f      	lsls	r7, r3, #12
    776a:	0b3d      	lsrs	r5, r7, #12
    776c:	4f2c      	ldr	r7, [pc, #176]	; (7820 <__gedf2+0xc4>)
    776e:	030e      	lsls	r6, r1, #12
    7770:	004c      	lsls	r4, r1, #1
    7772:	46ab      	mov	fp, r5
    7774:	005d      	lsls	r5, r3, #1
    7776:	4684      	mov	ip, r0
    7778:	0b36      	lsrs	r6, r6, #12
    777a:	0d64      	lsrs	r4, r4, #21
    777c:	0fc9      	lsrs	r1, r1, #31
    777e:	4690      	mov	r8, r2
    7780:	0d6d      	lsrs	r5, r5, #21
    7782:	0fdb      	lsrs	r3, r3, #31
    7784:	42bc      	cmp	r4, r7
    7786:	d02a      	beq.n	77de <__gedf2+0x82>
    7788:	4f25      	ldr	r7, [pc, #148]	; (7820 <__gedf2+0xc4>)
    778a:	42bd      	cmp	r5, r7
    778c:	d02d      	beq.n	77ea <__gedf2+0x8e>
    778e:	2c00      	cmp	r4, #0
    7790:	d10f      	bne.n	77b2 <__gedf2+0x56>
    7792:	4330      	orrs	r0, r6
    7794:	0007      	movs	r7, r0
    7796:	4681      	mov	r9, r0
    7798:	4278      	negs	r0, r7
    779a:	4178      	adcs	r0, r7
    779c:	b2c0      	uxtb	r0, r0
    779e:	2d00      	cmp	r5, #0
    77a0:	d117      	bne.n	77d2 <__gedf2+0x76>
    77a2:	465f      	mov	r7, fp
    77a4:	433a      	orrs	r2, r7
    77a6:	d114      	bne.n	77d2 <__gedf2+0x76>
    77a8:	464b      	mov	r3, r9
    77aa:	2000      	movs	r0, #0
    77ac:	2b00      	cmp	r3, #0
    77ae:	d00a      	beq.n	77c6 <__gedf2+0x6a>
    77b0:	e006      	b.n	77c0 <__gedf2+0x64>
    77b2:	2d00      	cmp	r5, #0
    77b4:	d102      	bne.n	77bc <__gedf2+0x60>
    77b6:	4658      	mov	r0, fp
    77b8:	4302      	orrs	r2, r0
    77ba:	d001      	beq.n	77c0 <__gedf2+0x64>
    77bc:	4299      	cmp	r1, r3
    77be:	d018      	beq.n	77f2 <__gedf2+0x96>
    77c0:	4248      	negs	r0, r1
    77c2:	2101      	movs	r1, #1
    77c4:	4308      	orrs	r0, r1
    77c6:	bc3c      	pop	{r2, r3, r4, r5}
    77c8:	4690      	mov	r8, r2
    77ca:	4699      	mov	r9, r3
    77cc:	46a2      	mov	sl, r4
    77ce:	46ab      	mov	fp, r5
    77d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    77d2:	2800      	cmp	r0, #0
    77d4:	d0f2      	beq.n	77bc <__gedf2+0x60>
    77d6:	2001      	movs	r0, #1
    77d8:	3b01      	subs	r3, #1
    77da:	4318      	orrs	r0, r3
    77dc:	e7f3      	b.n	77c6 <__gedf2+0x6a>
    77de:	0037      	movs	r7, r6
    77e0:	4307      	orrs	r7, r0
    77e2:	d0d1      	beq.n	7788 <__gedf2+0x2c>
    77e4:	2002      	movs	r0, #2
    77e6:	4240      	negs	r0, r0
    77e8:	e7ed      	b.n	77c6 <__gedf2+0x6a>
    77ea:	465f      	mov	r7, fp
    77ec:	4317      	orrs	r7, r2
    77ee:	d0ce      	beq.n	778e <__gedf2+0x32>
    77f0:	e7f8      	b.n	77e4 <__gedf2+0x88>
    77f2:	42ac      	cmp	r4, r5
    77f4:	dce4      	bgt.n	77c0 <__gedf2+0x64>
    77f6:	da03      	bge.n	7800 <__gedf2+0xa4>
    77f8:	1e48      	subs	r0, r1, #1
    77fa:	2101      	movs	r1, #1
    77fc:	4308      	orrs	r0, r1
    77fe:	e7e2      	b.n	77c6 <__gedf2+0x6a>
    7800:	455e      	cmp	r6, fp
    7802:	d8dd      	bhi.n	77c0 <__gedf2+0x64>
    7804:	d006      	beq.n	7814 <__gedf2+0xb8>
    7806:	2000      	movs	r0, #0
    7808:	455e      	cmp	r6, fp
    780a:	d2dc      	bcs.n	77c6 <__gedf2+0x6a>
    780c:	2301      	movs	r3, #1
    780e:	1e48      	subs	r0, r1, #1
    7810:	4318      	orrs	r0, r3
    7812:	e7d8      	b.n	77c6 <__gedf2+0x6a>
    7814:	45c4      	cmp	ip, r8
    7816:	d8d3      	bhi.n	77c0 <__gedf2+0x64>
    7818:	2000      	movs	r0, #0
    781a:	45c4      	cmp	ip, r8
    781c:	d3f6      	bcc.n	780c <__gedf2+0xb0>
    781e:	e7d2      	b.n	77c6 <__gedf2+0x6a>
    7820:	000007ff 	.word	0x000007ff

00007824 <__ledf2>:
    7824:	b5f0      	push	{r4, r5, r6, r7, lr}
    7826:	464e      	mov	r6, r9
    7828:	4645      	mov	r5, r8
    782a:	46de      	mov	lr, fp
    782c:	4657      	mov	r7, sl
    782e:	005c      	lsls	r4, r3, #1
    7830:	b5e0      	push	{r5, r6, r7, lr}
    7832:	031f      	lsls	r7, r3, #12
    7834:	0fdb      	lsrs	r3, r3, #31
    7836:	4699      	mov	r9, r3
    7838:	4b2a      	ldr	r3, [pc, #168]	; (78e4 <__ledf2+0xc0>)
    783a:	030e      	lsls	r6, r1, #12
    783c:	004d      	lsls	r5, r1, #1
    783e:	0fc9      	lsrs	r1, r1, #31
    7840:	4684      	mov	ip, r0
    7842:	0b36      	lsrs	r6, r6, #12
    7844:	0d6d      	lsrs	r5, r5, #21
    7846:	468b      	mov	fp, r1
    7848:	4690      	mov	r8, r2
    784a:	0b3f      	lsrs	r7, r7, #12
    784c:	0d64      	lsrs	r4, r4, #21
    784e:	429d      	cmp	r5, r3
    7850:	d020      	beq.n	7894 <__ledf2+0x70>
    7852:	4b24      	ldr	r3, [pc, #144]	; (78e4 <__ledf2+0xc0>)
    7854:	429c      	cmp	r4, r3
    7856:	d022      	beq.n	789e <__ledf2+0x7a>
    7858:	2d00      	cmp	r5, #0
    785a:	d112      	bne.n	7882 <__ledf2+0x5e>
    785c:	4330      	orrs	r0, r6
    785e:	4243      	negs	r3, r0
    7860:	4143      	adcs	r3, r0
    7862:	b2db      	uxtb	r3, r3
    7864:	2c00      	cmp	r4, #0
    7866:	d01f      	beq.n	78a8 <__ledf2+0x84>
    7868:	2b00      	cmp	r3, #0
    786a:	d00c      	beq.n	7886 <__ledf2+0x62>
    786c:	464b      	mov	r3, r9
    786e:	2001      	movs	r0, #1
    7870:	3b01      	subs	r3, #1
    7872:	4303      	orrs	r3, r0
    7874:	0018      	movs	r0, r3
    7876:	bc3c      	pop	{r2, r3, r4, r5}
    7878:	4690      	mov	r8, r2
    787a:	4699      	mov	r9, r3
    787c:	46a2      	mov	sl, r4
    787e:	46ab      	mov	fp, r5
    7880:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7882:	2c00      	cmp	r4, #0
    7884:	d016      	beq.n	78b4 <__ledf2+0x90>
    7886:	45cb      	cmp	fp, r9
    7888:	d017      	beq.n	78ba <__ledf2+0x96>
    788a:	465b      	mov	r3, fp
    788c:	4259      	negs	r1, r3
    788e:	2301      	movs	r3, #1
    7890:	430b      	orrs	r3, r1
    7892:	e7ef      	b.n	7874 <__ledf2+0x50>
    7894:	0031      	movs	r1, r6
    7896:	2302      	movs	r3, #2
    7898:	4301      	orrs	r1, r0
    789a:	d1eb      	bne.n	7874 <__ledf2+0x50>
    789c:	e7d9      	b.n	7852 <__ledf2+0x2e>
    789e:	0039      	movs	r1, r7
    78a0:	2302      	movs	r3, #2
    78a2:	4311      	orrs	r1, r2
    78a4:	d1e6      	bne.n	7874 <__ledf2+0x50>
    78a6:	e7d7      	b.n	7858 <__ledf2+0x34>
    78a8:	433a      	orrs	r2, r7
    78aa:	d1dd      	bne.n	7868 <__ledf2+0x44>
    78ac:	2300      	movs	r3, #0
    78ae:	2800      	cmp	r0, #0
    78b0:	d0e0      	beq.n	7874 <__ledf2+0x50>
    78b2:	e7ea      	b.n	788a <__ledf2+0x66>
    78b4:	433a      	orrs	r2, r7
    78b6:	d1e6      	bne.n	7886 <__ledf2+0x62>
    78b8:	e7e7      	b.n	788a <__ledf2+0x66>
    78ba:	42a5      	cmp	r5, r4
    78bc:	dce5      	bgt.n	788a <__ledf2+0x66>
    78be:	db05      	blt.n	78cc <__ledf2+0xa8>
    78c0:	42be      	cmp	r6, r7
    78c2:	d8e2      	bhi.n	788a <__ledf2+0x66>
    78c4:	d007      	beq.n	78d6 <__ledf2+0xb2>
    78c6:	2300      	movs	r3, #0
    78c8:	42be      	cmp	r6, r7
    78ca:	d2d3      	bcs.n	7874 <__ledf2+0x50>
    78cc:	4659      	mov	r1, fp
    78ce:	2301      	movs	r3, #1
    78d0:	3901      	subs	r1, #1
    78d2:	430b      	orrs	r3, r1
    78d4:	e7ce      	b.n	7874 <__ledf2+0x50>
    78d6:	45c4      	cmp	ip, r8
    78d8:	d8d7      	bhi.n	788a <__ledf2+0x66>
    78da:	2300      	movs	r3, #0
    78dc:	45c4      	cmp	ip, r8
    78de:	d3f5      	bcc.n	78cc <__ledf2+0xa8>
    78e0:	e7c8      	b.n	7874 <__ledf2+0x50>
    78e2:	46c0      	nop			; (mov r8, r8)
    78e4:	000007ff 	.word	0x000007ff

000078e8 <__aeabi_dsub>:
    78e8:	b5f0      	push	{r4, r5, r6, r7, lr}
    78ea:	4646      	mov	r6, r8
    78ec:	46d6      	mov	lr, sl
    78ee:	464f      	mov	r7, r9
    78f0:	030c      	lsls	r4, r1, #12
    78f2:	b5c0      	push	{r6, r7, lr}
    78f4:	0fcd      	lsrs	r5, r1, #31
    78f6:	004e      	lsls	r6, r1, #1
    78f8:	0a61      	lsrs	r1, r4, #9
    78fa:	0f44      	lsrs	r4, r0, #29
    78fc:	430c      	orrs	r4, r1
    78fe:	00c1      	lsls	r1, r0, #3
    7900:	0058      	lsls	r0, r3, #1
    7902:	0d40      	lsrs	r0, r0, #21
    7904:	4684      	mov	ip, r0
    7906:	468a      	mov	sl, r1
    7908:	000f      	movs	r7, r1
    790a:	0319      	lsls	r1, r3, #12
    790c:	0f50      	lsrs	r0, r2, #29
    790e:	0a49      	lsrs	r1, r1, #9
    7910:	4301      	orrs	r1, r0
    7912:	48c6      	ldr	r0, [pc, #792]	; (7c2c <__aeabi_dsub+0x344>)
    7914:	0d76      	lsrs	r6, r6, #21
    7916:	46a8      	mov	r8, r5
    7918:	0fdb      	lsrs	r3, r3, #31
    791a:	00d2      	lsls	r2, r2, #3
    791c:	4584      	cmp	ip, r0
    791e:	d100      	bne.n	7922 <__aeabi_dsub+0x3a>
    7920:	e0d8      	b.n	7ad4 <__aeabi_dsub+0x1ec>
    7922:	2001      	movs	r0, #1
    7924:	4043      	eors	r3, r0
    7926:	42ab      	cmp	r3, r5
    7928:	d100      	bne.n	792c <__aeabi_dsub+0x44>
    792a:	e0a6      	b.n	7a7a <__aeabi_dsub+0x192>
    792c:	4660      	mov	r0, ip
    792e:	1a35      	subs	r5, r6, r0
    7930:	2d00      	cmp	r5, #0
    7932:	dc00      	bgt.n	7936 <__aeabi_dsub+0x4e>
    7934:	e105      	b.n	7b42 <__aeabi_dsub+0x25a>
    7936:	2800      	cmp	r0, #0
    7938:	d110      	bne.n	795c <__aeabi_dsub+0x74>
    793a:	000b      	movs	r3, r1
    793c:	4313      	orrs	r3, r2
    793e:	d100      	bne.n	7942 <__aeabi_dsub+0x5a>
    7940:	e0d7      	b.n	7af2 <__aeabi_dsub+0x20a>
    7942:	1e6b      	subs	r3, r5, #1
    7944:	2b00      	cmp	r3, #0
    7946:	d000      	beq.n	794a <__aeabi_dsub+0x62>
    7948:	e14b      	b.n	7be2 <__aeabi_dsub+0x2fa>
    794a:	4653      	mov	r3, sl
    794c:	1a9f      	subs	r7, r3, r2
    794e:	45ba      	cmp	sl, r7
    7950:	4180      	sbcs	r0, r0
    7952:	1a64      	subs	r4, r4, r1
    7954:	4240      	negs	r0, r0
    7956:	1a24      	subs	r4, r4, r0
    7958:	2601      	movs	r6, #1
    795a:	e01e      	b.n	799a <__aeabi_dsub+0xb2>
    795c:	4bb3      	ldr	r3, [pc, #716]	; (7c2c <__aeabi_dsub+0x344>)
    795e:	429e      	cmp	r6, r3
    7960:	d048      	beq.n	79f4 <__aeabi_dsub+0x10c>
    7962:	2380      	movs	r3, #128	; 0x80
    7964:	041b      	lsls	r3, r3, #16
    7966:	4319      	orrs	r1, r3
    7968:	2d38      	cmp	r5, #56	; 0x38
    796a:	dd00      	ble.n	796e <__aeabi_dsub+0x86>
    796c:	e119      	b.n	7ba2 <__aeabi_dsub+0x2ba>
    796e:	2d1f      	cmp	r5, #31
    7970:	dd00      	ble.n	7974 <__aeabi_dsub+0x8c>
    7972:	e14c      	b.n	7c0e <__aeabi_dsub+0x326>
    7974:	2320      	movs	r3, #32
    7976:	000f      	movs	r7, r1
    7978:	1b5b      	subs	r3, r3, r5
    797a:	0010      	movs	r0, r2
    797c:	409a      	lsls	r2, r3
    797e:	409f      	lsls	r7, r3
    7980:	40e8      	lsrs	r0, r5
    7982:	1e53      	subs	r3, r2, #1
    7984:	419a      	sbcs	r2, r3
    7986:	40e9      	lsrs	r1, r5
    7988:	4307      	orrs	r7, r0
    798a:	4317      	orrs	r7, r2
    798c:	4653      	mov	r3, sl
    798e:	1bdf      	subs	r7, r3, r7
    7990:	1a61      	subs	r1, r4, r1
    7992:	45ba      	cmp	sl, r7
    7994:	41a4      	sbcs	r4, r4
    7996:	4264      	negs	r4, r4
    7998:	1b0c      	subs	r4, r1, r4
    799a:	0223      	lsls	r3, r4, #8
    799c:	d400      	bmi.n	79a0 <__aeabi_dsub+0xb8>
    799e:	e0c5      	b.n	7b2c <__aeabi_dsub+0x244>
    79a0:	0264      	lsls	r4, r4, #9
    79a2:	0a65      	lsrs	r5, r4, #9
    79a4:	2d00      	cmp	r5, #0
    79a6:	d100      	bne.n	79aa <__aeabi_dsub+0xc2>
    79a8:	e0f6      	b.n	7b98 <__aeabi_dsub+0x2b0>
    79aa:	0028      	movs	r0, r5
    79ac:	f7fb f844 	bl	2a38 <__clzsi2>
    79b0:	0003      	movs	r3, r0
    79b2:	3b08      	subs	r3, #8
    79b4:	2b1f      	cmp	r3, #31
    79b6:	dd00      	ble.n	79ba <__aeabi_dsub+0xd2>
    79b8:	e0e9      	b.n	7b8e <__aeabi_dsub+0x2a6>
    79ba:	2220      	movs	r2, #32
    79bc:	003c      	movs	r4, r7
    79be:	1ad2      	subs	r2, r2, r3
    79c0:	409d      	lsls	r5, r3
    79c2:	40d4      	lsrs	r4, r2
    79c4:	409f      	lsls	r7, r3
    79c6:	4325      	orrs	r5, r4
    79c8:	429e      	cmp	r6, r3
    79ca:	dd00      	ble.n	79ce <__aeabi_dsub+0xe6>
    79cc:	e0db      	b.n	7b86 <__aeabi_dsub+0x29e>
    79ce:	1b9e      	subs	r6, r3, r6
    79d0:	1c73      	adds	r3, r6, #1
    79d2:	2b1f      	cmp	r3, #31
    79d4:	dd00      	ble.n	79d8 <__aeabi_dsub+0xf0>
    79d6:	e10a      	b.n	7bee <__aeabi_dsub+0x306>
    79d8:	2220      	movs	r2, #32
    79da:	0038      	movs	r0, r7
    79dc:	1ad2      	subs	r2, r2, r3
    79de:	0029      	movs	r1, r5
    79e0:	4097      	lsls	r7, r2
    79e2:	002c      	movs	r4, r5
    79e4:	4091      	lsls	r1, r2
    79e6:	40d8      	lsrs	r0, r3
    79e8:	1e7a      	subs	r2, r7, #1
    79ea:	4197      	sbcs	r7, r2
    79ec:	40dc      	lsrs	r4, r3
    79ee:	2600      	movs	r6, #0
    79f0:	4301      	orrs	r1, r0
    79f2:	430f      	orrs	r7, r1
    79f4:	077b      	lsls	r3, r7, #29
    79f6:	d009      	beq.n	7a0c <__aeabi_dsub+0x124>
    79f8:	230f      	movs	r3, #15
    79fa:	403b      	ands	r3, r7
    79fc:	2b04      	cmp	r3, #4
    79fe:	d005      	beq.n	7a0c <__aeabi_dsub+0x124>
    7a00:	1d3b      	adds	r3, r7, #4
    7a02:	42bb      	cmp	r3, r7
    7a04:	41bf      	sbcs	r7, r7
    7a06:	427f      	negs	r7, r7
    7a08:	19e4      	adds	r4, r4, r7
    7a0a:	001f      	movs	r7, r3
    7a0c:	0223      	lsls	r3, r4, #8
    7a0e:	d525      	bpl.n	7a5c <__aeabi_dsub+0x174>
    7a10:	4b86      	ldr	r3, [pc, #536]	; (7c2c <__aeabi_dsub+0x344>)
    7a12:	3601      	adds	r6, #1
    7a14:	429e      	cmp	r6, r3
    7a16:	d100      	bne.n	7a1a <__aeabi_dsub+0x132>
    7a18:	e0af      	b.n	7b7a <__aeabi_dsub+0x292>
    7a1a:	4b85      	ldr	r3, [pc, #532]	; (7c30 <__aeabi_dsub+0x348>)
    7a1c:	2501      	movs	r5, #1
    7a1e:	401c      	ands	r4, r3
    7a20:	4643      	mov	r3, r8
    7a22:	0762      	lsls	r2, r4, #29
    7a24:	08ff      	lsrs	r7, r7, #3
    7a26:	0264      	lsls	r4, r4, #9
    7a28:	0576      	lsls	r6, r6, #21
    7a2a:	4317      	orrs	r7, r2
    7a2c:	0b24      	lsrs	r4, r4, #12
    7a2e:	0d76      	lsrs	r6, r6, #21
    7a30:	401d      	ands	r5, r3
    7a32:	2100      	movs	r1, #0
    7a34:	0324      	lsls	r4, r4, #12
    7a36:	0b23      	lsrs	r3, r4, #12
    7a38:	0d0c      	lsrs	r4, r1, #20
    7a3a:	4a7e      	ldr	r2, [pc, #504]	; (7c34 <__aeabi_dsub+0x34c>)
    7a3c:	0524      	lsls	r4, r4, #20
    7a3e:	431c      	orrs	r4, r3
    7a40:	4014      	ands	r4, r2
    7a42:	0533      	lsls	r3, r6, #20
    7a44:	4323      	orrs	r3, r4
    7a46:	005b      	lsls	r3, r3, #1
    7a48:	07ed      	lsls	r5, r5, #31
    7a4a:	085b      	lsrs	r3, r3, #1
    7a4c:	432b      	orrs	r3, r5
    7a4e:	0038      	movs	r0, r7
    7a50:	0019      	movs	r1, r3
    7a52:	bc1c      	pop	{r2, r3, r4}
    7a54:	4690      	mov	r8, r2
    7a56:	4699      	mov	r9, r3
    7a58:	46a2      	mov	sl, r4
    7a5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7a5c:	2501      	movs	r5, #1
    7a5e:	4643      	mov	r3, r8
    7a60:	0762      	lsls	r2, r4, #29
    7a62:	08ff      	lsrs	r7, r7, #3
    7a64:	4317      	orrs	r7, r2
    7a66:	08e4      	lsrs	r4, r4, #3
    7a68:	401d      	ands	r5, r3
    7a6a:	4b70      	ldr	r3, [pc, #448]	; (7c2c <__aeabi_dsub+0x344>)
    7a6c:	429e      	cmp	r6, r3
    7a6e:	d036      	beq.n	7ade <__aeabi_dsub+0x1f6>
    7a70:	0324      	lsls	r4, r4, #12
    7a72:	0576      	lsls	r6, r6, #21
    7a74:	0b24      	lsrs	r4, r4, #12
    7a76:	0d76      	lsrs	r6, r6, #21
    7a78:	e7db      	b.n	7a32 <__aeabi_dsub+0x14a>
    7a7a:	4663      	mov	r3, ip
    7a7c:	1af3      	subs	r3, r6, r3
    7a7e:	2b00      	cmp	r3, #0
    7a80:	dc00      	bgt.n	7a84 <__aeabi_dsub+0x19c>
    7a82:	e094      	b.n	7bae <__aeabi_dsub+0x2c6>
    7a84:	4660      	mov	r0, ip
    7a86:	2800      	cmp	r0, #0
    7a88:	d035      	beq.n	7af6 <__aeabi_dsub+0x20e>
    7a8a:	4868      	ldr	r0, [pc, #416]	; (7c2c <__aeabi_dsub+0x344>)
    7a8c:	4286      	cmp	r6, r0
    7a8e:	d0b1      	beq.n	79f4 <__aeabi_dsub+0x10c>
    7a90:	2780      	movs	r7, #128	; 0x80
    7a92:	043f      	lsls	r7, r7, #16
    7a94:	4339      	orrs	r1, r7
    7a96:	2b38      	cmp	r3, #56	; 0x38
    7a98:	dc00      	bgt.n	7a9c <__aeabi_dsub+0x1b4>
    7a9a:	e0fd      	b.n	7c98 <__aeabi_dsub+0x3b0>
    7a9c:	430a      	orrs	r2, r1
    7a9e:	0017      	movs	r7, r2
    7aa0:	2100      	movs	r1, #0
    7aa2:	1e7a      	subs	r2, r7, #1
    7aa4:	4197      	sbcs	r7, r2
    7aa6:	4457      	add	r7, sl
    7aa8:	4557      	cmp	r7, sl
    7aaa:	4180      	sbcs	r0, r0
    7aac:	1909      	adds	r1, r1, r4
    7aae:	4244      	negs	r4, r0
    7ab0:	190c      	adds	r4, r1, r4
    7ab2:	0223      	lsls	r3, r4, #8
    7ab4:	d53a      	bpl.n	7b2c <__aeabi_dsub+0x244>
    7ab6:	4b5d      	ldr	r3, [pc, #372]	; (7c2c <__aeabi_dsub+0x344>)
    7ab8:	3601      	adds	r6, #1
    7aba:	429e      	cmp	r6, r3
    7abc:	d100      	bne.n	7ac0 <__aeabi_dsub+0x1d8>
    7abe:	e14b      	b.n	7d58 <__aeabi_dsub+0x470>
    7ac0:	2201      	movs	r2, #1
    7ac2:	4b5b      	ldr	r3, [pc, #364]	; (7c30 <__aeabi_dsub+0x348>)
    7ac4:	401c      	ands	r4, r3
    7ac6:	087b      	lsrs	r3, r7, #1
    7ac8:	4017      	ands	r7, r2
    7aca:	431f      	orrs	r7, r3
    7acc:	07e2      	lsls	r2, r4, #31
    7ace:	4317      	orrs	r7, r2
    7ad0:	0864      	lsrs	r4, r4, #1
    7ad2:	e78f      	b.n	79f4 <__aeabi_dsub+0x10c>
    7ad4:	0008      	movs	r0, r1
    7ad6:	4310      	orrs	r0, r2
    7ad8:	d000      	beq.n	7adc <__aeabi_dsub+0x1f4>
    7ada:	e724      	b.n	7926 <__aeabi_dsub+0x3e>
    7adc:	e721      	b.n	7922 <__aeabi_dsub+0x3a>
    7ade:	0023      	movs	r3, r4
    7ae0:	433b      	orrs	r3, r7
    7ae2:	d100      	bne.n	7ae6 <__aeabi_dsub+0x1fe>
    7ae4:	e1b9      	b.n	7e5a <__aeabi_dsub+0x572>
    7ae6:	2280      	movs	r2, #128	; 0x80
    7ae8:	0312      	lsls	r2, r2, #12
    7aea:	4314      	orrs	r4, r2
    7aec:	0324      	lsls	r4, r4, #12
    7aee:	0b24      	lsrs	r4, r4, #12
    7af0:	e79f      	b.n	7a32 <__aeabi_dsub+0x14a>
    7af2:	002e      	movs	r6, r5
    7af4:	e77e      	b.n	79f4 <__aeabi_dsub+0x10c>
    7af6:	0008      	movs	r0, r1
    7af8:	4310      	orrs	r0, r2
    7afa:	d100      	bne.n	7afe <__aeabi_dsub+0x216>
    7afc:	e0ca      	b.n	7c94 <__aeabi_dsub+0x3ac>
    7afe:	1e58      	subs	r0, r3, #1
    7b00:	4684      	mov	ip, r0
    7b02:	2800      	cmp	r0, #0
    7b04:	d000      	beq.n	7b08 <__aeabi_dsub+0x220>
    7b06:	e0e7      	b.n	7cd8 <__aeabi_dsub+0x3f0>
    7b08:	4452      	add	r2, sl
    7b0a:	4552      	cmp	r2, sl
    7b0c:	4180      	sbcs	r0, r0
    7b0e:	1864      	adds	r4, r4, r1
    7b10:	4240      	negs	r0, r0
    7b12:	1824      	adds	r4, r4, r0
    7b14:	0017      	movs	r7, r2
    7b16:	2601      	movs	r6, #1
    7b18:	0223      	lsls	r3, r4, #8
    7b1a:	d507      	bpl.n	7b2c <__aeabi_dsub+0x244>
    7b1c:	2602      	movs	r6, #2
    7b1e:	e7cf      	b.n	7ac0 <__aeabi_dsub+0x1d8>
    7b20:	4664      	mov	r4, ip
    7b22:	432c      	orrs	r4, r5
    7b24:	d100      	bne.n	7b28 <__aeabi_dsub+0x240>
    7b26:	e1b3      	b.n	7e90 <__aeabi_dsub+0x5a8>
    7b28:	002c      	movs	r4, r5
    7b2a:	4667      	mov	r7, ip
    7b2c:	077b      	lsls	r3, r7, #29
    7b2e:	d000      	beq.n	7b32 <__aeabi_dsub+0x24a>
    7b30:	e762      	b.n	79f8 <__aeabi_dsub+0x110>
    7b32:	0763      	lsls	r3, r4, #29
    7b34:	08ff      	lsrs	r7, r7, #3
    7b36:	431f      	orrs	r7, r3
    7b38:	2501      	movs	r5, #1
    7b3a:	4643      	mov	r3, r8
    7b3c:	08e4      	lsrs	r4, r4, #3
    7b3e:	401d      	ands	r5, r3
    7b40:	e793      	b.n	7a6a <__aeabi_dsub+0x182>
    7b42:	2d00      	cmp	r5, #0
    7b44:	d178      	bne.n	7c38 <__aeabi_dsub+0x350>
    7b46:	1c75      	adds	r5, r6, #1
    7b48:	056d      	lsls	r5, r5, #21
    7b4a:	0d6d      	lsrs	r5, r5, #21
    7b4c:	2d01      	cmp	r5, #1
    7b4e:	dc00      	bgt.n	7b52 <__aeabi_dsub+0x26a>
    7b50:	e0f2      	b.n	7d38 <__aeabi_dsub+0x450>
    7b52:	4650      	mov	r0, sl
    7b54:	1a80      	subs	r0, r0, r2
    7b56:	4582      	cmp	sl, r0
    7b58:	41bf      	sbcs	r7, r7
    7b5a:	1a65      	subs	r5, r4, r1
    7b5c:	427f      	negs	r7, r7
    7b5e:	1bed      	subs	r5, r5, r7
    7b60:	4684      	mov	ip, r0
    7b62:	0228      	lsls	r0, r5, #8
    7b64:	d400      	bmi.n	7b68 <__aeabi_dsub+0x280>
    7b66:	e08c      	b.n	7c82 <__aeabi_dsub+0x39a>
    7b68:	4650      	mov	r0, sl
    7b6a:	1a17      	subs	r7, r2, r0
    7b6c:	42ba      	cmp	r2, r7
    7b6e:	4192      	sbcs	r2, r2
    7b70:	1b0c      	subs	r4, r1, r4
    7b72:	4255      	negs	r5, r2
    7b74:	1b65      	subs	r5, r4, r5
    7b76:	4698      	mov	r8, r3
    7b78:	e714      	b.n	79a4 <__aeabi_dsub+0xbc>
    7b7a:	2501      	movs	r5, #1
    7b7c:	4643      	mov	r3, r8
    7b7e:	2400      	movs	r4, #0
    7b80:	401d      	ands	r5, r3
    7b82:	2700      	movs	r7, #0
    7b84:	e755      	b.n	7a32 <__aeabi_dsub+0x14a>
    7b86:	4c2a      	ldr	r4, [pc, #168]	; (7c30 <__aeabi_dsub+0x348>)
    7b88:	1af6      	subs	r6, r6, r3
    7b8a:	402c      	ands	r4, r5
    7b8c:	e732      	b.n	79f4 <__aeabi_dsub+0x10c>
    7b8e:	003d      	movs	r5, r7
    7b90:	3828      	subs	r0, #40	; 0x28
    7b92:	4085      	lsls	r5, r0
    7b94:	2700      	movs	r7, #0
    7b96:	e717      	b.n	79c8 <__aeabi_dsub+0xe0>
    7b98:	0038      	movs	r0, r7
    7b9a:	f7fa ff4d 	bl	2a38 <__clzsi2>
    7b9e:	3020      	adds	r0, #32
    7ba0:	e706      	b.n	79b0 <__aeabi_dsub+0xc8>
    7ba2:	430a      	orrs	r2, r1
    7ba4:	0017      	movs	r7, r2
    7ba6:	2100      	movs	r1, #0
    7ba8:	1e7a      	subs	r2, r7, #1
    7baa:	4197      	sbcs	r7, r2
    7bac:	e6ee      	b.n	798c <__aeabi_dsub+0xa4>
    7bae:	2b00      	cmp	r3, #0
    7bb0:	d000      	beq.n	7bb4 <__aeabi_dsub+0x2cc>
    7bb2:	e0e5      	b.n	7d80 <__aeabi_dsub+0x498>
    7bb4:	1c73      	adds	r3, r6, #1
    7bb6:	469c      	mov	ip, r3
    7bb8:	055b      	lsls	r3, r3, #21
    7bba:	0d5b      	lsrs	r3, r3, #21
    7bbc:	2b01      	cmp	r3, #1
    7bbe:	dc00      	bgt.n	7bc2 <__aeabi_dsub+0x2da>
    7bc0:	e09f      	b.n	7d02 <__aeabi_dsub+0x41a>
    7bc2:	4b1a      	ldr	r3, [pc, #104]	; (7c2c <__aeabi_dsub+0x344>)
    7bc4:	459c      	cmp	ip, r3
    7bc6:	d100      	bne.n	7bca <__aeabi_dsub+0x2e2>
    7bc8:	e0c5      	b.n	7d56 <__aeabi_dsub+0x46e>
    7bca:	4452      	add	r2, sl
    7bcc:	4552      	cmp	r2, sl
    7bce:	4180      	sbcs	r0, r0
    7bd0:	1864      	adds	r4, r4, r1
    7bd2:	4240      	negs	r0, r0
    7bd4:	1824      	adds	r4, r4, r0
    7bd6:	07e7      	lsls	r7, r4, #31
    7bd8:	0852      	lsrs	r2, r2, #1
    7bda:	4317      	orrs	r7, r2
    7bdc:	0864      	lsrs	r4, r4, #1
    7bde:	4666      	mov	r6, ip
    7be0:	e708      	b.n	79f4 <__aeabi_dsub+0x10c>
    7be2:	4812      	ldr	r0, [pc, #72]	; (7c2c <__aeabi_dsub+0x344>)
    7be4:	4285      	cmp	r5, r0
    7be6:	d100      	bne.n	7bea <__aeabi_dsub+0x302>
    7be8:	e085      	b.n	7cf6 <__aeabi_dsub+0x40e>
    7bea:	001d      	movs	r5, r3
    7bec:	e6bc      	b.n	7968 <__aeabi_dsub+0x80>
    7bee:	0029      	movs	r1, r5
    7bf0:	3e1f      	subs	r6, #31
    7bf2:	40f1      	lsrs	r1, r6
    7bf4:	2b20      	cmp	r3, #32
    7bf6:	d100      	bne.n	7bfa <__aeabi_dsub+0x312>
    7bf8:	e07f      	b.n	7cfa <__aeabi_dsub+0x412>
    7bfa:	2240      	movs	r2, #64	; 0x40
    7bfc:	1ad3      	subs	r3, r2, r3
    7bfe:	409d      	lsls	r5, r3
    7c00:	432f      	orrs	r7, r5
    7c02:	1e7d      	subs	r5, r7, #1
    7c04:	41af      	sbcs	r7, r5
    7c06:	2400      	movs	r4, #0
    7c08:	430f      	orrs	r7, r1
    7c0a:	2600      	movs	r6, #0
    7c0c:	e78e      	b.n	7b2c <__aeabi_dsub+0x244>
    7c0e:	002b      	movs	r3, r5
    7c10:	000f      	movs	r7, r1
    7c12:	3b20      	subs	r3, #32
    7c14:	40df      	lsrs	r7, r3
    7c16:	2d20      	cmp	r5, #32
    7c18:	d071      	beq.n	7cfe <__aeabi_dsub+0x416>
    7c1a:	2340      	movs	r3, #64	; 0x40
    7c1c:	1b5d      	subs	r5, r3, r5
    7c1e:	40a9      	lsls	r1, r5
    7c20:	430a      	orrs	r2, r1
    7c22:	1e51      	subs	r1, r2, #1
    7c24:	418a      	sbcs	r2, r1
    7c26:	2100      	movs	r1, #0
    7c28:	4317      	orrs	r7, r2
    7c2a:	e6af      	b.n	798c <__aeabi_dsub+0xa4>
    7c2c:	000007ff 	.word	0x000007ff
    7c30:	ff7fffff 	.word	0xff7fffff
    7c34:	800fffff 	.word	0x800fffff
    7c38:	2e00      	cmp	r6, #0
    7c3a:	d03e      	beq.n	7cba <__aeabi_dsub+0x3d2>
    7c3c:	4eb3      	ldr	r6, [pc, #716]	; (7f0c <__aeabi_dsub+0x624>)
    7c3e:	45b4      	cmp	ip, r6
    7c40:	d045      	beq.n	7cce <__aeabi_dsub+0x3e6>
    7c42:	2680      	movs	r6, #128	; 0x80
    7c44:	0436      	lsls	r6, r6, #16
    7c46:	426d      	negs	r5, r5
    7c48:	4334      	orrs	r4, r6
    7c4a:	2d38      	cmp	r5, #56	; 0x38
    7c4c:	dd00      	ble.n	7c50 <__aeabi_dsub+0x368>
    7c4e:	e0a8      	b.n	7da2 <__aeabi_dsub+0x4ba>
    7c50:	2d1f      	cmp	r5, #31
    7c52:	dd00      	ble.n	7c56 <__aeabi_dsub+0x36e>
    7c54:	e11f      	b.n	7e96 <__aeabi_dsub+0x5ae>
    7c56:	2620      	movs	r6, #32
    7c58:	0027      	movs	r7, r4
    7c5a:	4650      	mov	r0, sl
    7c5c:	1b76      	subs	r6, r6, r5
    7c5e:	40b7      	lsls	r7, r6
    7c60:	40e8      	lsrs	r0, r5
    7c62:	4307      	orrs	r7, r0
    7c64:	4650      	mov	r0, sl
    7c66:	40b0      	lsls	r0, r6
    7c68:	1e46      	subs	r6, r0, #1
    7c6a:	41b0      	sbcs	r0, r6
    7c6c:	40ec      	lsrs	r4, r5
    7c6e:	4338      	orrs	r0, r7
    7c70:	1a17      	subs	r7, r2, r0
    7c72:	42ba      	cmp	r2, r7
    7c74:	4192      	sbcs	r2, r2
    7c76:	1b0c      	subs	r4, r1, r4
    7c78:	4252      	negs	r2, r2
    7c7a:	1aa4      	subs	r4, r4, r2
    7c7c:	4666      	mov	r6, ip
    7c7e:	4698      	mov	r8, r3
    7c80:	e68b      	b.n	799a <__aeabi_dsub+0xb2>
    7c82:	4664      	mov	r4, ip
    7c84:	4667      	mov	r7, ip
    7c86:	432c      	orrs	r4, r5
    7c88:	d000      	beq.n	7c8c <__aeabi_dsub+0x3a4>
    7c8a:	e68b      	b.n	79a4 <__aeabi_dsub+0xbc>
    7c8c:	2500      	movs	r5, #0
    7c8e:	2600      	movs	r6, #0
    7c90:	2700      	movs	r7, #0
    7c92:	e6ea      	b.n	7a6a <__aeabi_dsub+0x182>
    7c94:	001e      	movs	r6, r3
    7c96:	e6ad      	b.n	79f4 <__aeabi_dsub+0x10c>
    7c98:	2b1f      	cmp	r3, #31
    7c9a:	dc60      	bgt.n	7d5e <__aeabi_dsub+0x476>
    7c9c:	2720      	movs	r7, #32
    7c9e:	1af8      	subs	r0, r7, r3
    7ca0:	000f      	movs	r7, r1
    7ca2:	4684      	mov	ip, r0
    7ca4:	4087      	lsls	r7, r0
    7ca6:	0010      	movs	r0, r2
    7ca8:	40d8      	lsrs	r0, r3
    7caa:	4307      	orrs	r7, r0
    7cac:	4660      	mov	r0, ip
    7cae:	4082      	lsls	r2, r0
    7cb0:	1e50      	subs	r0, r2, #1
    7cb2:	4182      	sbcs	r2, r0
    7cb4:	40d9      	lsrs	r1, r3
    7cb6:	4317      	orrs	r7, r2
    7cb8:	e6f5      	b.n	7aa6 <__aeabi_dsub+0x1be>
    7cba:	0026      	movs	r6, r4
    7cbc:	4650      	mov	r0, sl
    7cbe:	4306      	orrs	r6, r0
    7cc0:	d005      	beq.n	7cce <__aeabi_dsub+0x3e6>
    7cc2:	43ed      	mvns	r5, r5
    7cc4:	2d00      	cmp	r5, #0
    7cc6:	d0d3      	beq.n	7c70 <__aeabi_dsub+0x388>
    7cc8:	4e90      	ldr	r6, [pc, #576]	; (7f0c <__aeabi_dsub+0x624>)
    7cca:	45b4      	cmp	ip, r6
    7ccc:	d1bd      	bne.n	7c4a <__aeabi_dsub+0x362>
    7cce:	000c      	movs	r4, r1
    7cd0:	0017      	movs	r7, r2
    7cd2:	4666      	mov	r6, ip
    7cd4:	4698      	mov	r8, r3
    7cd6:	e68d      	b.n	79f4 <__aeabi_dsub+0x10c>
    7cd8:	488c      	ldr	r0, [pc, #560]	; (7f0c <__aeabi_dsub+0x624>)
    7cda:	4283      	cmp	r3, r0
    7cdc:	d00b      	beq.n	7cf6 <__aeabi_dsub+0x40e>
    7cde:	4663      	mov	r3, ip
    7ce0:	e6d9      	b.n	7a96 <__aeabi_dsub+0x1ae>
    7ce2:	2d00      	cmp	r5, #0
    7ce4:	d000      	beq.n	7ce8 <__aeabi_dsub+0x400>
    7ce6:	e096      	b.n	7e16 <__aeabi_dsub+0x52e>
    7ce8:	0008      	movs	r0, r1
    7cea:	4310      	orrs	r0, r2
    7cec:	d100      	bne.n	7cf0 <__aeabi_dsub+0x408>
    7cee:	e0e2      	b.n	7eb6 <__aeabi_dsub+0x5ce>
    7cf0:	000c      	movs	r4, r1
    7cf2:	0017      	movs	r7, r2
    7cf4:	4698      	mov	r8, r3
    7cf6:	4e85      	ldr	r6, [pc, #532]	; (7f0c <__aeabi_dsub+0x624>)
    7cf8:	e67c      	b.n	79f4 <__aeabi_dsub+0x10c>
    7cfa:	2500      	movs	r5, #0
    7cfc:	e780      	b.n	7c00 <__aeabi_dsub+0x318>
    7cfe:	2100      	movs	r1, #0
    7d00:	e78e      	b.n	7c20 <__aeabi_dsub+0x338>
    7d02:	0023      	movs	r3, r4
    7d04:	4650      	mov	r0, sl
    7d06:	4303      	orrs	r3, r0
    7d08:	2e00      	cmp	r6, #0
    7d0a:	d000      	beq.n	7d0e <__aeabi_dsub+0x426>
    7d0c:	e0a8      	b.n	7e60 <__aeabi_dsub+0x578>
    7d0e:	2b00      	cmp	r3, #0
    7d10:	d100      	bne.n	7d14 <__aeabi_dsub+0x42c>
    7d12:	e0de      	b.n	7ed2 <__aeabi_dsub+0x5ea>
    7d14:	000b      	movs	r3, r1
    7d16:	4313      	orrs	r3, r2
    7d18:	d100      	bne.n	7d1c <__aeabi_dsub+0x434>
    7d1a:	e66b      	b.n	79f4 <__aeabi_dsub+0x10c>
    7d1c:	4452      	add	r2, sl
    7d1e:	4552      	cmp	r2, sl
    7d20:	4180      	sbcs	r0, r0
    7d22:	1864      	adds	r4, r4, r1
    7d24:	4240      	negs	r0, r0
    7d26:	1824      	adds	r4, r4, r0
    7d28:	0017      	movs	r7, r2
    7d2a:	0223      	lsls	r3, r4, #8
    7d2c:	d400      	bmi.n	7d30 <__aeabi_dsub+0x448>
    7d2e:	e6fd      	b.n	7b2c <__aeabi_dsub+0x244>
    7d30:	4b77      	ldr	r3, [pc, #476]	; (7f10 <__aeabi_dsub+0x628>)
    7d32:	4666      	mov	r6, ip
    7d34:	401c      	ands	r4, r3
    7d36:	e65d      	b.n	79f4 <__aeabi_dsub+0x10c>
    7d38:	0025      	movs	r5, r4
    7d3a:	4650      	mov	r0, sl
    7d3c:	4305      	orrs	r5, r0
    7d3e:	2e00      	cmp	r6, #0
    7d40:	d1cf      	bne.n	7ce2 <__aeabi_dsub+0x3fa>
    7d42:	2d00      	cmp	r5, #0
    7d44:	d14f      	bne.n	7de6 <__aeabi_dsub+0x4fe>
    7d46:	000c      	movs	r4, r1
    7d48:	4314      	orrs	r4, r2
    7d4a:	d100      	bne.n	7d4e <__aeabi_dsub+0x466>
    7d4c:	e0a0      	b.n	7e90 <__aeabi_dsub+0x5a8>
    7d4e:	000c      	movs	r4, r1
    7d50:	0017      	movs	r7, r2
    7d52:	4698      	mov	r8, r3
    7d54:	e64e      	b.n	79f4 <__aeabi_dsub+0x10c>
    7d56:	4666      	mov	r6, ip
    7d58:	2400      	movs	r4, #0
    7d5a:	2700      	movs	r7, #0
    7d5c:	e685      	b.n	7a6a <__aeabi_dsub+0x182>
    7d5e:	001f      	movs	r7, r3
    7d60:	0008      	movs	r0, r1
    7d62:	3f20      	subs	r7, #32
    7d64:	40f8      	lsrs	r0, r7
    7d66:	0007      	movs	r7, r0
    7d68:	2b20      	cmp	r3, #32
    7d6a:	d100      	bne.n	7d6e <__aeabi_dsub+0x486>
    7d6c:	e08e      	b.n	7e8c <__aeabi_dsub+0x5a4>
    7d6e:	2040      	movs	r0, #64	; 0x40
    7d70:	1ac3      	subs	r3, r0, r3
    7d72:	4099      	lsls	r1, r3
    7d74:	430a      	orrs	r2, r1
    7d76:	1e51      	subs	r1, r2, #1
    7d78:	418a      	sbcs	r2, r1
    7d7a:	2100      	movs	r1, #0
    7d7c:	4317      	orrs	r7, r2
    7d7e:	e692      	b.n	7aa6 <__aeabi_dsub+0x1be>
    7d80:	2e00      	cmp	r6, #0
    7d82:	d114      	bne.n	7dae <__aeabi_dsub+0x4c6>
    7d84:	0026      	movs	r6, r4
    7d86:	4650      	mov	r0, sl
    7d88:	4306      	orrs	r6, r0
    7d8a:	d062      	beq.n	7e52 <__aeabi_dsub+0x56a>
    7d8c:	43db      	mvns	r3, r3
    7d8e:	2b00      	cmp	r3, #0
    7d90:	d15c      	bne.n	7e4c <__aeabi_dsub+0x564>
    7d92:	1887      	adds	r7, r0, r2
    7d94:	4297      	cmp	r7, r2
    7d96:	4192      	sbcs	r2, r2
    7d98:	1864      	adds	r4, r4, r1
    7d9a:	4252      	negs	r2, r2
    7d9c:	18a4      	adds	r4, r4, r2
    7d9e:	4666      	mov	r6, ip
    7da0:	e687      	b.n	7ab2 <__aeabi_dsub+0x1ca>
    7da2:	4650      	mov	r0, sl
    7da4:	4320      	orrs	r0, r4
    7da6:	1e44      	subs	r4, r0, #1
    7da8:	41a0      	sbcs	r0, r4
    7daa:	2400      	movs	r4, #0
    7dac:	e760      	b.n	7c70 <__aeabi_dsub+0x388>
    7dae:	4e57      	ldr	r6, [pc, #348]	; (7f0c <__aeabi_dsub+0x624>)
    7db0:	45b4      	cmp	ip, r6
    7db2:	d04e      	beq.n	7e52 <__aeabi_dsub+0x56a>
    7db4:	2680      	movs	r6, #128	; 0x80
    7db6:	0436      	lsls	r6, r6, #16
    7db8:	425b      	negs	r3, r3
    7dba:	4334      	orrs	r4, r6
    7dbc:	2b38      	cmp	r3, #56	; 0x38
    7dbe:	dd00      	ble.n	7dc2 <__aeabi_dsub+0x4da>
    7dc0:	e07f      	b.n	7ec2 <__aeabi_dsub+0x5da>
    7dc2:	2b1f      	cmp	r3, #31
    7dc4:	dd00      	ble.n	7dc8 <__aeabi_dsub+0x4e0>
    7dc6:	e08b      	b.n	7ee0 <__aeabi_dsub+0x5f8>
    7dc8:	2620      	movs	r6, #32
    7dca:	0027      	movs	r7, r4
    7dcc:	4650      	mov	r0, sl
    7dce:	1af6      	subs	r6, r6, r3
    7dd0:	40b7      	lsls	r7, r6
    7dd2:	40d8      	lsrs	r0, r3
    7dd4:	4307      	orrs	r7, r0
    7dd6:	4650      	mov	r0, sl
    7dd8:	40b0      	lsls	r0, r6
    7dda:	1e46      	subs	r6, r0, #1
    7ddc:	41b0      	sbcs	r0, r6
    7dde:	4307      	orrs	r7, r0
    7de0:	40dc      	lsrs	r4, r3
    7de2:	18bf      	adds	r7, r7, r2
    7de4:	e7d6      	b.n	7d94 <__aeabi_dsub+0x4ac>
    7de6:	000d      	movs	r5, r1
    7de8:	4315      	orrs	r5, r2
    7dea:	d100      	bne.n	7dee <__aeabi_dsub+0x506>
    7dec:	e602      	b.n	79f4 <__aeabi_dsub+0x10c>
    7dee:	4650      	mov	r0, sl
    7df0:	1a80      	subs	r0, r0, r2
    7df2:	4582      	cmp	sl, r0
    7df4:	41bf      	sbcs	r7, r7
    7df6:	1a65      	subs	r5, r4, r1
    7df8:	427f      	negs	r7, r7
    7dfa:	1bed      	subs	r5, r5, r7
    7dfc:	4684      	mov	ip, r0
    7dfe:	0228      	lsls	r0, r5, #8
    7e00:	d400      	bmi.n	7e04 <__aeabi_dsub+0x51c>
    7e02:	e68d      	b.n	7b20 <__aeabi_dsub+0x238>
    7e04:	4650      	mov	r0, sl
    7e06:	1a17      	subs	r7, r2, r0
    7e08:	42ba      	cmp	r2, r7
    7e0a:	4192      	sbcs	r2, r2
    7e0c:	1b0c      	subs	r4, r1, r4
    7e0e:	4252      	negs	r2, r2
    7e10:	1aa4      	subs	r4, r4, r2
    7e12:	4698      	mov	r8, r3
    7e14:	e5ee      	b.n	79f4 <__aeabi_dsub+0x10c>
    7e16:	000d      	movs	r5, r1
    7e18:	4315      	orrs	r5, r2
    7e1a:	d100      	bne.n	7e1e <__aeabi_dsub+0x536>
    7e1c:	e76b      	b.n	7cf6 <__aeabi_dsub+0x40e>
    7e1e:	4650      	mov	r0, sl
    7e20:	0767      	lsls	r7, r4, #29
    7e22:	08c0      	lsrs	r0, r0, #3
    7e24:	4307      	orrs	r7, r0
    7e26:	2080      	movs	r0, #128	; 0x80
    7e28:	08e4      	lsrs	r4, r4, #3
    7e2a:	0300      	lsls	r0, r0, #12
    7e2c:	4204      	tst	r4, r0
    7e2e:	d007      	beq.n	7e40 <__aeabi_dsub+0x558>
    7e30:	08cd      	lsrs	r5, r1, #3
    7e32:	4205      	tst	r5, r0
    7e34:	d104      	bne.n	7e40 <__aeabi_dsub+0x558>
    7e36:	002c      	movs	r4, r5
    7e38:	4698      	mov	r8, r3
    7e3a:	08d7      	lsrs	r7, r2, #3
    7e3c:	0749      	lsls	r1, r1, #29
    7e3e:	430f      	orrs	r7, r1
    7e40:	0f7b      	lsrs	r3, r7, #29
    7e42:	00e4      	lsls	r4, r4, #3
    7e44:	431c      	orrs	r4, r3
    7e46:	00ff      	lsls	r7, r7, #3
    7e48:	4e30      	ldr	r6, [pc, #192]	; (7f0c <__aeabi_dsub+0x624>)
    7e4a:	e5d3      	b.n	79f4 <__aeabi_dsub+0x10c>
    7e4c:	4e2f      	ldr	r6, [pc, #188]	; (7f0c <__aeabi_dsub+0x624>)
    7e4e:	45b4      	cmp	ip, r6
    7e50:	d1b4      	bne.n	7dbc <__aeabi_dsub+0x4d4>
    7e52:	000c      	movs	r4, r1
    7e54:	0017      	movs	r7, r2
    7e56:	4666      	mov	r6, ip
    7e58:	e5cc      	b.n	79f4 <__aeabi_dsub+0x10c>
    7e5a:	2700      	movs	r7, #0
    7e5c:	2400      	movs	r4, #0
    7e5e:	e5e8      	b.n	7a32 <__aeabi_dsub+0x14a>
    7e60:	2b00      	cmp	r3, #0
    7e62:	d039      	beq.n	7ed8 <__aeabi_dsub+0x5f0>
    7e64:	000b      	movs	r3, r1
    7e66:	4313      	orrs	r3, r2
    7e68:	d100      	bne.n	7e6c <__aeabi_dsub+0x584>
    7e6a:	e744      	b.n	7cf6 <__aeabi_dsub+0x40e>
    7e6c:	08c0      	lsrs	r0, r0, #3
    7e6e:	0767      	lsls	r7, r4, #29
    7e70:	4307      	orrs	r7, r0
    7e72:	2080      	movs	r0, #128	; 0x80
    7e74:	08e4      	lsrs	r4, r4, #3
    7e76:	0300      	lsls	r0, r0, #12
    7e78:	4204      	tst	r4, r0
    7e7a:	d0e1      	beq.n	7e40 <__aeabi_dsub+0x558>
    7e7c:	08cb      	lsrs	r3, r1, #3
    7e7e:	4203      	tst	r3, r0
    7e80:	d1de      	bne.n	7e40 <__aeabi_dsub+0x558>
    7e82:	08d7      	lsrs	r7, r2, #3
    7e84:	0749      	lsls	r1, r1, #29
    7e86:	430f      	orrs	r7, r1
    7e88:	001c      	movs	r4, r3
    7e8a:	e7d9      	b.n	7e40 <__aeabi_dsub+0x558>
    7e8c:	2100      	movs	r1, #0
    7e8e:	e771      	b.n	7d74 <__aeabi_dsub+0x48c>
    7e90:	2500      	movs	r5, #0
    7e92:	2700      	movs	r7, #0
    7e94:	e5e9      	b.n	7a6a <__aeabi_dsub+0x182>
    7e96:	002e      	movs	r6, r5
    7e98:	0027      	movs	r7, r4
    7e9a:	3e20      	subs	r6, #32
    7e9c:	40f7      	lsrs	r7, r6
    7e9e:	2d20      	cmp	r5, #32
    7ea0:	d02f      	beq.n	7f02 <__aeabi_dsub+0x61a>
    7ea2:	2640      	movs	r6, #64	; 0x40
    7ea4:	1b75      	subs	r5, r6, r5
    7ea6:	40ac      	lsls	r4, r5
    7ea8:	4650      	mov	r0, sl
    7eaa:	4320      	orrs	r0, r4
    7eac:	1e44      	subs	r4, r0, #1
    7eae:	41a0      	sbcs	r0, r4
    7eb0:	2400      	movs	r4, #0
    7eb2:	4338      	orrs	r0, r7
    7eb4:	e6dc      	b.n	7c70 <__aeabi_dsub+0x388>
    7eb6:	2480      	movs	r4, #128	; 0x80
    7eb8:	2500      	movs	r5, #0
    7eba:	0324      	lsls	r4, r4, #12
    7ebc:	4e13      	ldr	r6, [pc, #76]	; (7f0c <__aeabi_dsub+0x624>)
    7ebe:	2700      	movs	r7, #0
    7ec0:	e5d3      	b.n	7a6a <__aeabi_dsub+0x182>
    7ec2:	4650      	mov	r0, sl
    7ec4:	4320      	orrs	r0, r4
    7ec6:	0007      	movs	r7, r0
    7ec8:	1e78      	subs	r0, r7, #1
    7eca:	4187      	sbcs	r7, r0
    7ecc:	2400      	movs	r4, #0
    7ece:	18bf      	adds	r7, r7, r2
    7ed0:	e760      	b.n	7d94 <__aeabi_dsub+0x4ac>
    7ed2:	000c      	movs	r4, r1
    7ed4:	0017      	movs	r7, r2
    7ed6:	e58d      	b.n	79f4 <__aeabi_dsub+0x10c>
    7ed8:	000c      	movs	r4, r1
    7eda:	0017      	movs	r7, r2
    7edc:	4e0b      	ldr	r6, [pc, #44]	; (7f0c <__aeabi_dsub+0x624>)
    7ede:	e589      	b.n	79f4 <__aeabi_dsub+0x10c>
    7ee0:	001e      	movs	r6, r3
    7ee2:	0027      	movs	r7, r4
    7ee4:	3e20      	subs	r6, #32
    7ee6:	40f7      	lsrs	r7, r6
    7ee8:	2b20      	cmp	r3, #32
    7eea:	d00c      	beq.n	7f06 <__aeabi_dsub+0x61e>
    7eec:	2640      	movs	r6, #64	; 0x40
    7eee:	1af3      	subs	r3, r6, r3
    7ef0:	409c      	lsls	r4, r3
    7ef2:	4650      	mov	r0, sl
    7ef4:	4320      	orrs	r0, r4
    7ef6:	1e44      	subs	r4, r0, #1
    7ef8:	41a0      	sbcs	r0, r4
    7efa:	4307      	orrs	r7, r0
    7efc:	2400      	movs	r4, #0
    7efe:	18bf      	adds	r7, r7, r2
    7f00:	e748      	b.n	7d94 <__aeabi_dsub+0x4ac>
    7f02:	2400      	movs	r4, #0
    7f04:	e7d0      	b.n	7ea8 <__aeabi_dsub+0x5c0>
    7f06:	2400      	movs	r4, #0
    7f08:	e7f3      	b.n	7ef2 <__aeabi_dsub+0x60a>
    7f0a:	46c0      	nop			; (mov r8, r8)
    7f0c:	000007ff 	.word	0x000007ff
    7f10:	ff7fffff 	.word	0xff7fffff

00007f14 <__aeabi_dcmpun>:
    7f14:	b570      	push	{r4, r5, r6, lr}
    7f16:	4e0e      	ldr	r6, [pc, #56]	; (7f50 <__aeabi_dcmpun+0x3c>)
    7f18:	030d      	lsls	r5, r1, #12
    7f1a:	031c      	lsls	r4, r3, #12
    7f1c:	0049      	lsls	r1, r1, #1
    7f1e:	005b      	lsls	r3, r3, #1
    7f20:	0b2d      	lsrs	r5, r5, #12
    7f22:	0d49      	lsrs	r1, r1, #21
    7f24:	0b24      	lsrs	r4, r4, #12
    7f26:	0d5b      	lsrs	r3, r3, #21
    7f28:	42b1      	cmp	r1, r6
    7f2a:	d004      	beq.n	7f36 <__aeabi_dcmpun+0x22>
    7f2c:	4908      	ldr	r1, [pc, #32]	; (7f50 <__aeabi_dcmpun+0x3c>)
    7f2e:	2000      	movs	r0, #0
    7f30:	428b      	cmp	r3, r1
    7f32:	d008      	beq.n	7f46 <__aeabi_dcmpun+0x32>
    7f34:	bd70      	pop	{r4, r5, r6, pc}
    7f36:	4305      	orrs	r5, r0
    7f38:	2001      	movs	r0, #1
    7f3a:	2d00      	cmp	r5, #0
    7f3c:	d1fa      	bne.n	7f34 <__aeabi_dcmpun+0x20>
    7f3e:	4904      	ldr	r1, [pc, #16]	; (7f50 <__aeabi_dcmpun+0x3c>)
    7f40:	2000      	movs	r0, #0
    7f42:	428b      	cmp	r3, r1
    7f44:	d1f6      	bne.n	7f34 <__aeabi_dcmpun+0x20>
    7f46:	4314      	orrs	r4, r2
    7f48:	0020      	movs	r0, r4
    7f4a:	1e44      	subs	r4, r0, #1
    7f4c:	41a0      	sbcs	r0, r4
    7f4e:	e7f1      	b.n	7f34 <__aeabi_dcmpun+0x20>
    7f50:	000007ff 	.word	0x000007ff

00007f54 <__aeabi_d2iz>:
    7f54:	b530      	push	{r4, r5, lr}
    7f56:	4d13      	ldr	r5, [pc, #76]	; (7fa4 <__aeabi_d2iz+0x50>)
    7f58:	030a      	lsls	r2, r1, #12
    7f5a:	004b      	lsls	r3, r1, #1
    7f5c:	0b12      	lsrs	r2, r2, #12
    7f5e:	0d5b      	lsrs	r3, r3, #21
    7f60:	0fc9      	lsrs	r1, r1, #31
    7f62:	2400      	movs	r4, #0
    7f64:	42ab      	cmp	r3, r5
    7f66:	dd10      	ble.n	7f8a <__aeabi_d2iz+0x36>
    7f68:	4c0f      	ldr	r4, [pc, #60]	; (7fa8 <__aeabi_d2iz+0x54>)
    7f6a:	42a3      	cmp	r3, r4
    7f6c:	dc0f      	bgt.n	7f8e <__aeabi_d2iz+0x3a>
    7f6e:	2480      	movs	r4, #128	; 0x80
    7f70:	4d0e      	ldr	r5, [pc, #56]	; (7fac <__aeabi_d2iz+0x58>)
    7f72:	0364      	lsls	r4, r4, #13
    7f74:	4322      	orrs	r2, r4
    7f76:	1aed      	subs	r5, r5, r3
    7f78:	2d1f      	cmp	r5, #31
    7f7a:	dd0b      	ble.n	7f94 <__aeabi_d2iz+0x40>
    7f7c:	480c      	ldr	r0, [pc, #48]	; (7fb0 <__aeabi_d2iz+0x5c>)
    7f7e:	1ac3      	subs	r3, r0, r3
    7f80:	40da      	lsrs	r2, r3
    7f82:	4254      	negs	r4, r2
    7f84:	2900      	cmp	r1, #0
    7f86:	d100      	bne.n	7f8a <__aeabi_d2iz+0x36>
    7f88:	0014      	movs	r4, r2
    7f8a:	0020      	movs	r0, r4
    7f8c:	bd30      	pop	{r4, r5, pc}
    7f8e:	4b09      	ldr	r3, [pc, #36]	; (7fb4 <__aeabi_d2iz+0x60>)
    7f90:	18cc      	adds	r4, r1, r3
    7f92:	e7fa      	b.n	7f8a <__aeabi_d2iz+0x36>
    7f94:	4c08      	ldr	r4, [pc, #32]	; (7fb8 <__aeabi_d2iz+0x64>)
    7f96:	40e8      	lsrs	r0, r5
    7f98:	46a4      	mov	ip, r4
    7f9a:	4463      	add	r3, ip
    7f9c:	409a      	lsls	r2, r3
    7f9e:	4302      	orrs	r2, r0
    7fa0:	e7ef      	b.n	7f82 <__aeabi_d2iz+0x2e>
    7fa2:	46c0      	nop			; (mov r8, r8)
    7fa4:	000003fe 	.word	0x000003fe
    7fa8:	0000041d 	.word	0x0000041d
    7fac:	00000433 	.word	0x00000433
    7fb0:	00000413 	.word	0x00000413
    7fb4:	7fffffff 	.word	0x7fffffff
    7fb8:	fffffbed 	.word	0xfffffbed

00007fbc <__aeabi_ui2d>:
    7fbc:	b510      	push	{r4, lr}
    7fbe:	1e04      	subs	r4, r0, #0
    7fc0:	d028      	beq.n	8014 <__aeabi_ui2d+0x58>
    7fc2:	f7fa fd39 	bl	2a38 <__clzsi2>
    7fc6:	4b15      	ldr	r3, [pc, #84]	; (801c <__aeabi_ui2d+0x60>)
    7fc8:	4a15      	ldr	r2, [pc, #84]	; (8020 <__aeabi_ui2d+0x64>)
    7fca:	1a1b      	subs	r3, r3, r0
    7fcc:	1ad2      	subs	r2, r2, r3
    7fce:	2a1f      	cmp	r2, #31
    7fd0:	dd15      	ble.n	7ffe <__aeabi_ui2d+0x42>
    7fd2:	4a14      	ldr	r2, [pc, #80]	; (8024 <__aeabi_ui2d+0x68>)
    7fd4:	1ad2      	subs	r2, r2, r3
    7fd6:	4094      	lsls	r4, r2
    7fd8:	2200      	movs	r2, #0
    7fda:	0324      	lsls	r4, r4, #12
    7fdc:	055b      	lsls	r3, r3, #21
    7fde:	0b24      	lsrs	r4, r4, #12
    7fe0:	0d5b      	lsrs	r3, r3, #21
    7fe2:	2100      	movs	r1, #0
    7fe4:	0010      	movs	r0, r2
    7fe6:	0324      	lsls	r4, r4, #12
    7fe8:	0d0a      	lsrs	r2, r1, #20
    7fea:	0b24      	lsrs	r4, r4, #12
    7fec:	0512      	lsls	r2, r2, #20
    7fee:	4322      	orrs	r2, r4
    7ff0:	4c0d      	ldr	r4, [pc, #52]	; (8028 <__aeabi_ui2d+0x6c>)
    7ff2:	051b      	lsls	r3, r3, #20
    7ff4:	4022      	ands	r2, r4
    7ff6:	4313      	orrs	r3, r2
    7ff8:	005b      	lsls	r3, r3, #1
    7ffa:	0859      	lsrs	r1, r3, #1
    7ffc:	bd10      	pop	{r4, pc}
    7ffe:	0021      	movs	r1, r4
    8000:	4091      	lsls	r1, r2
    8002:	000a      	movs	r2, r1
    8004:	210b      	movs	r1, #11
    8006:	1a08      	subs	r0, r1, r0
    8008:	40c4      	lsrs	r4, r0
    800a:	055b      	lsls	r3, r3, #21
    800c:	0324      	lsls	r4, r4, #12
    800e:	0b24      	lsrs	r4, r4, #12
    8010:	0d5b      	lsrs	r3, r3, #21
    8012:	e7e6      	b.n	7fe2 <__aeabi_ui2d+0x26>
    8014:	2300      	movs	r3, #0
    8016:	2400      	movs	r4, #0
    8018:	2200      	movs	r2, #0
    801a:	e7e2      	b.n	7fe2 <__aeabi_ui2d+0x26>
    801c:	0000041e 	.word	0x0000041e
    8020:	00000433 	.word	0x00000433
    8024:	00000413 	.word	0x00000413
    8028:	800fffff 	.word	0x800fffff
    802c:	42000800 	.word	0x42000800
    8030:	42000c00 	.word	0x42000c00
    8034:	42001000 	.word	0x42001000
    8038:	42001400 	.word	0x42001400
    803c:	42001800 	.word	0x42001800
    8040:	42001c00 	.word	0x42001c00
    8044:	00007325 	.word	0x00007325
    8048:	52415355 	.word	0x52415355
    804c:	4e492054 	.word	0x4e492054
    8050:	41495449 	.word	0x41495449
    8054:	455a494c 	.word	0x455a494c
    8058:	00000a44 	.word	0x00000a44
    805c:	000013da 	.word	0x000013da
    8060:	000013d6 	.word	0x000013d6
    8064:	000013d6 	.word	0x000013d6
    8068:	0000143c 	.word	0x0000143c
    806c:	0000143c 	.word	0x0000143c
    8070:	000013ee 	.word	0x000013ee
    8074:	000013e0 	.word	0x000013e0
    8078:	000013f4 	.word	0x000013f4
    807c:	0000142a 	.word	0x0000142a
    8080:	000015fc 	.word	0x000015fc
    8084:	000015dc 	.word	0x000015dc
    8088:	000015dc 	.word	0x000015dc
    808c:	00001668 	.word	0x00001668
    8090:	000015ee 	.word	0x000015ee
    8094:	0000160a 	.word	0x0000160a
    8098:	000015e0 	.word	0x000015e0
    809c:	00001618 	.word	0x00001618
    80a0:	00001658 	.word	0x00001658
    80a4:	09782325 	.word	0x09782325
    80a8:	09782325 	.word	0x09782325
    80ac:	09782325 	.word	0x09782325
    80b0:	0a782325 	.word	0x0a782325
    80b4:	00000000 	.word	0x00000000
    80b8:	000a6625 	.word	0x000a6625
    80bc:	000024ec 	.word	0x000024ec
    80c0:	000023ac 	.word	0x000023ac
    80c4:	000023ac 	.word	0x000023ac
    80c8:	000023a8 	.word	0x000023a8
    80cc:	000024c4 	.word	0x000024c4
    80d0:	000024c4 	.word	0x000024c4
    80d4:	000024b6 	.word	0x000024b6
    80d8:	000023a8 	.word	0x000023a8
    80dc:	000024c4 	.word	0x000024c4
    80e0:	000024b6 	.word	0x000024b6
    80e4:	000024c4 	.word	0x000024c4
    80e8:	000023a8 	.word	0x000023a8
    80ec:	000024cc 	.word	0x000024cc
    80f0:	000024cc 	.word	0x000024cc
    80f4:	000024cc 	.word	0x000024cc
    80f8:	000026d0 	.word	0x000026d0

000080fc <_global_impure_ptr>:
    80fc:	20000018 000032d4 00003348 00003348     ... .2..H3..H3..
    810c:	000032b8 00003348 00003348 00003348     .2..H3..H3..H3..
    811c:	00003348 00003348 00003348 000032c0     H3..H3..H3...2..
    812c:	00002da2 00003348 00002d5c 00002dac     .-..H3..\-...-..
    813c:	00003348 00002df8 00002fe2 00002fe2     H3...-.../.../..
    814c:	00002fe2 00002fe2 00002fe2 00002fe2     ./.../.../.../..
    815c:	00002fe2 00002fe2 00002fe2 00003348     ./.../.../..H3..
    816c:	00003348 00003348 00003348 00003348     H3..H3..H3..H3..
    817c:	00003348 00003348 00003348 00003348     H3..H3..H3..H3..
    818c:	00003348 00002e00 00002f48 00003348     H3......H/..H3..
    819c:	00002f48 00003348 00003348 00003348     H/..H3..H3..H3..
    81ac:	00003348 00003012 00003348 00003348     H3...0..H3..H3..
    81bc:	0000301a 00003348 00003348 00003348     .0..H3..H3..H3..
    81cc:	00003348 00003348 000030bc 00003348     H3..H3...0..H3..
    81dc:	00003348 000030ee 00003348 00003348     H3...0..H3..H3..
    81ec:	00003348 00003348 00003348 00003348     H3..H3..H3..H3..
    81fc:	00003348 00003348 00003348 00003348     H3..H3..H3..H3..
    820c:	000031e8 0000321c 00002f48 00002f48     .1...2..H/..H/..
    821c:	00002f48 0000322e 0000321c 00003348     H/...2...2..H3..
    822c:	00003348 00003236 00003348 00003150     H3..62..H3..P1..
    823c:	00003316 0000328c 00003186 00003348     .3...2...1..H3..
    824c:	0000318e 00003348 000032e4 00003348     .1..H3...2..H3..
    825c:	00003348 00003246 00464e49 00666e69     H3..F2..INF.inf.
    826c:	004e414e 006e616e 33323130 37363534     NAN.nan.01234567
    827c:	42413938 46454443 00000000 33323130     89ABCDEF....0123
    828c:	37363534 62613938 66656463 00000000     456789abcdef....
    829c:	6c756e28 0000296c 00000030              (null)..0...

000082a8 <blanks.7223>:
    82a8:	20202020 20202020 20202020 20202020                     

000082b8 <zeroes.7224>:
    82b8:	30303030 30303030 30303030 30303030     0000000000000000
    82c8:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.

000082d8 <__mprec_bigtens>:
    82d8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    82e8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    82f8:	7f73bf3c 75154fdd                       <.s..O.u

00008300 <__mprec_tens>:
    8300:	00000000 3ff00000 00000000 40240000     .......?......$@
    8310:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    8320:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    8330:	00000000 412e8480 00000000 416312d0     .......A......cA
    8340:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    8350:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    8360:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    8370:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    8380:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    8390:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    83a0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    83b0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    83c0:	79d99db4 44ea7843                       ...yCx.D

000083c8 <p05.6055>:
    83c8:	00000005 00000019 0000007d 00000043     ........}...C...
    83d8:	49534f50 00000058 0000002e              POSIX.......

000083e4 <_ctype_>:
    83e4:	20202000 20202020 28282020 20282828     .         ((((( 
    83f4:	20202020 20202020 20202020 20202020                     
    8404:	10108820 10101010 10101010 10101010      ...............
    8414:	04040410 04040404 10040404 10101010     ................
    8424:	41411010 41414141 01010101 01010101     ..AAAAAA........
    8434:	01010101 01010101 01010101 10101010     ................
    8444:	42421010 42424242 02020202 02020202     ..BBBBBB........
    8454:	02020202 02020202 02020202 10101010     ................
    8464:	00000020 00000000 00000000 00000000      ...............
	...
    84e8:	00007278 0000725a 00007214 00007132     xr..Zr...r..2q..
    84f8:	00007214 0000724c 00007214 00007132     .r..Lr...r..2q..
    8508:	0000725a 0000725a 0000724c 00007132     Zr..Zr..Lr..2q..
    8518:	0000712a 0000712a 0000712a 00007490     *q..*q..*q...t..

00008528 <_init>:
    8528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    852a:	46c0      	nop			; (mov r8, r8)
    852c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    852e:	bc08      	pop	{r3}
    8530:	469e      	mov	lr, r3
    8532:	4770      	bx	lr

00008534 <__init_array_start>:
    8534:	00002c15 	.word	0x00002c15

00008538 <__frame_dummy_init_array_entry>:
    8538:	000000dd                                ....

0000853c <_fini>:
    853c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    853e:	46c0      	nop			; (mov r8, r8)
    8540:	bcf8      	pop	{r3, r4, r5, r6, r7}
    8542:	bc08      	pop	{r3}
    8544:	469e      	mov	lr, r3
    8546:	4770      	bx	lr

00008548 <__fini_array_start>:
    8548:	000000b5 	.word	0x000000b5

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	2800      	cmp	r0, #0
20000008:	d1fa      	bne.n	20000000 <portable_delay_cycles>
		"SUB r0, r0, #1 \n"
#endif
		"CMP r0, #0  \n"
		"BNE loop         "
	);
}
2000000a:	4770      	bx	lr

2000000c <g_interrupt_enabled>:
2000000c:	0001 0000                                   ....

20000010 <_impure_ptr>:
20000010:	0018 2000 0000 0000                         ... ....

20000018 <impure_data>:
20000018:	0000 0000 0304 2000 036c 2000 03d4 2000     ....... l.. ... 
	...
200000c0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200000d0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20000440 <__atexit_recursive_mutex>:
20000440:	0bf0 2000                                   ... 

20000444 <__malloc_av_>:
	...
2000044c:	0444 2000 0444 2000 044c 2000 044c 2000     D.. D.. L.. L.. 
2000045c:	0454 2000 0454 2000 045c 2000 045c 2000     T.. T.. \.. \.. 
2000046c:	0464 2000 0464 2000 046c 2000 046c 2000     d.. d.. l.. l.. 
2000047c:	0474 2000 0474 2000 047c 2000 047c 2000     t.. t.. |.. |.. 
2000048c:	0484 2000 0484 2000 048c 2000 048c 2000     ... ... ... ... 
2000049c:	0494 2000 0494 2000 049c 2000 049c 2000     ... ... ... ... 
200004ac:	04a4 2000 04a4 2000 04ac 2000 04ac 2000     ... ... ... ... 
200004bc:	04b4 2000 04b4 2000 04bc 2000 04bc 2000     ... ... ... ... 
200004cc:	04c4 2000 04c4 2000 04cc 2000 04cc 2000     ... ... ... ... 
200004dc:	04d4 2000 04d4 2000 04dc 2000 04dc 2000     ... ... ... ... 
200004ec:	04e4 2000 04e4 2000 04ec 2000 04ec 2000     ... ... ... ... 
200004fc:	04f4 2000 04f4 2000 04fc 2000 04fc 2000     ... ... ... ... 
2000050c:	0504 2000 0504 2000 050c 2000 050c 2000     ... ... ... ... 
2000051c:	0514 2000 0514 2000 051c 2000 051c 2000     ... ... ... ... 
2000052c:	0524 2000 0524 2000 052c 2000 052c 2000     $.. $.. ,.. ,.. 
2000053c:	0534 2000 0534 2000 053c 2000 053c 2000     4.. 4.. <.. <.. 
2000054c:	0544 2000 0544 2000 054c 2000 054c 2000     D.. D.. L.. L.. 
2000055c:	0554 2000 0554 2000 055c 2000 055c 2000     T.. T.. \.. \.. 
2000056c:	0564 2000 0564 2000 056c 2000 056c 2000     d.. d.. l.. l.. 
2000057c:	0574 2000 0574 2000 057c 2000 057c 2000     t.. t.. |.. |.. 
2000058c:	0584 2000 0584 2000 058c 2000 058c 2000     ... ... ... ... 
2000059c:	0594 2000 0594 2000 059c 2000 059c 2000     ... ... ... ... 
200005ac:	05a4 2000 05a4 2000 05ac 2000 05ac 2000     ... ... ... ... 
200005bc:	05b4 2000 05b4 2000 05bc 2000 05bc 2000     ... ... ... ... 
200005cc:	05c4 2000 05c4 2000 05cc 2000 05cc 2000     ... ... ... ... 
200005dc:	05d4 2000 05d4 2000 05dc 2000 05dc 2000     ... ... ... ... 
200005ec:	05e4 2000 05e4 2000 05ec 2000 05ec 2000     ... ... ... ... 
200005fc:	05f4 2000 05f4 2000 05fc 2000 05fc 2000     ... ... ... ... 
2000060c:	0604 2000 0604 2000 060c 2000 060c 2000     ... ... ... ... 
2000061c:	0614 2000 0614 2000 061c 2000 061c 2000     ... ... ... ... 
2000062c:	0624 2000 0624 2000 062c 2000 062c 2000     $.. $.. ,.. ,.. 
2000063c:	0634 2000 0634 2000 063c 2000 063c 2000     4.. 4.. <.. <.. 
2000064c:	0644 2000 0644 2000 064c 2000 064c 2000     D.. D.. L.. L.. 
2000065c:	0654 2000 0654 2000 065c 2000 065c 2000     T.. T.. \.. \.. 
2000066c:	0664 2000 0664 2000 066c 2000 066c 2000     d.. d.. l.. l.. 
2000067c:	0674 2000 0674 2000 067c 2000 067c 2000     t.. t.. |.. |.. 
2000068c:	0684 2000 0684 2000 068c 2000 068c 2000     ... ... ... ... 
2000069c:	0694 2000 0694 2000 069c 2000 069c 2000     ... ... ... ... 
200006ac:	06a4 2000 06a4 2000 06ac 2000 06ac 2000     ... ... ... ... 
200006bc:	06b4 2000 06b4 2000 06bc 2000 06bc 2000     ... ... ... ... 
200006cc:	06c4 2000 06c4 2000 06cc 2000 06cc 2000     ... ... ... ... 
200006dc:	06d4 2000 06d4 2000 06dc 2000 06dc 2000     ... ... ... ... 
200006ec:	06e4 2000 06e4 2000 06ec 2000 06ec 2000     ... ... ... ... 
200006fc:	06f4 2000 06f4 2000 06fc 2000 06fc 2000     ... ... ... ... 
2000070c:	0704 2000 0704 2000 070c 2000 070c 2000     ... ... ... ... 
2000071c:	0714 2000 0714 2000 071c 2000 071c 2000     ... ... ... ... 
2000072c:	0724 2000 0724 2000 072c 2000 072c 2000     $.. $.. ,.. ,.. 
2000073c:	0734 2000 0734 2000 073c 2000 073c 2000     4.. 4.. <.. <.. 
2000074c:	0744 2000 0744 2000 074c 2000 074c 2000     D.. D.. L.. L.. 
2000075c:	0754 2000 0754 2000 075c 2000 075c 2000     T.. T.. \.. \.. 
2000076c:	0764 2000 0764 2000 076c 2000 076c 2000     d.. d.. l.. l.. 
2000077c:	0774 2000 0774 2000 077c 2000 077c 2000     t.. t.. |.. |.. 
2000078c:	0784 2000 0784 2000 078c 2000 078c 2000     ... ... ... ... 
2000079c:	0794 2000 0794 2000 079c 2000 079c 2000     ... ... ... ... 
200007ac:	07a4 2000 07a4 2000 07ac 2000 07ac 2000     ... ... ... ... 
200007bc:	07b4 2000 07b4 2000 07bc 2000 07bc 2000     ... ... ... ... 
200007cc:	07c4 2000 07c4 2000 07cc 2000 07cc 2000     ... ... ... ... 
200007dc:	07d4 2000 07d4 2000 07dc 2000 07dc 2000     ... ... ... ... 
200007ec:	07e4 2000 07e4 2000 07ec 2000 07ec 2000     ... ... ... ... 
200007fc:	07f4 2000 07f4 2000 07fc 2000 07fc 2000     ... ... ... ... 
2000080c:	0804 2000 0804 2000 080c 2000 080c 2000     ... ... ... ... 
2000081c:	0814 2000 0814 2000 081c 2000 081c 2000     ... ... ... ... 
2000082c:	0824 2000 0824 2000 082c 2000 082c 2000     $.. $.. ,.. ,.. 
2000083c:	0834 2000 0834 2000 083c 2000 083c 2000     4.. 4.. <.. <.. 

2000084c <__malloc_sbrk_base>:
2000084c:	ffff ffff                                   ....

20000850 <__malloc_trim_threshold>:
20000850:	0000 0002                                   ....

20000854 <__global_locale>:
20000854:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000874:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000894:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008b4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008d4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200008f4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000914:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20000934:	69c9 0000 6581 0000 0000 0000 83e4 0000     .i...e..........
20000944:	83e0 0000 80b4 0000 80b4 0000 80b4 0000     ................
20000954:	80b4 0000 80b4 0000 80b4 0000 80b4 0000     ................
20000964:	80b4 0000 80b4 0000 ffff ffff ffff ffff     ................
20000974:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
2000099c:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
